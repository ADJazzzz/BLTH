// ==UserScript==
// @name           B站直播间挂机助手
// @name:en        Bilibili Live Helper
// @namespace      https://github.com/andywang425
// @author         andywang425
// @description    优化直播观看体验
// @description:en Improve live viewing experience
// @updateURL      https://raw.githubusercontent.com/andywang425/BLTH/master/B%E7%AB%99%E7%9B%B4%E6%92%AD%E9%97%B4%E6%8C%82%E6%9C%BA%E5%8A%A9%E6%89%8B.user.js
// @downloadURL    https://raw.githubusercontent.com/andywang425/BLTH/master/B%E7%AB%99%E7%9B%B4%E6%92%AD%E9%97%B4%E6%8C%82%E6%9C%BA%E5%8A%A9%E6%89%8B.user.js
// @homepageURL    https://github.com/andywang425/BLTH
// @supportURL     https://github.com/andywang425/BLTH/issues
// @icon           https://cdn.jsdelivr.net/gh/andywang425/BLTH@7d7ca494edd314806460e24c6b59be8ae1bd7dc6/img/script-icon.png
// @copyright      2021, andywang425 (https://github.com/andywang425)
// @license        MIT
// @compatible     chrome 80 or later
// @compatible     firefox 77 or later
// @compatible     opera 69 or later
// @compatible     safari 13.1 or later
// @version        5.7.9.4
// @include        /https?:\/\/live\.bilibili\.com\/[blanc\/]?[^?]*?\d+\??.*/
// @run-at         document-start
// @connect        passport.bilibili.com
// @connect        api.live.bilibili.com
// @connect        api.bilibili.com
// @connect        api.vc.bilibili.com
// @connect        live-trace.bilibili.com
// @connect        sctapi.ftqq.com
// @connect        pushplus.plus
// @connect        andywang.top
// @connect        gitee.com
// @require        https://cdn.jsdelivr.net/gh/andywang425/BLTH@dac0d115a45450e6d3f3e17acd4328ab581d0514/assets/js/library/Ajax-hook.min.js
// @require        https://cdn.jsdelivr.net/npm/jquery@3.2.1/dist/jquery.min.js
// @require        https://cdn.jsdelivr.net/gh/andywang425/BLTH@d810c0c54546b88addc612522c76ba481285298d/assets/js/library/decode.min.js
// @require        https://cdn.jsdelivr.net/npm/pako@1.0.10/dist/pako.min.js
// @require        https://cdn.jsdelivr.net/gh/andywang425/BLTH@f50572d570ced20496cc77fe6a0853a1deed3671/assets/js/library/bliveproxy.min.js
// @require        https://cdn.jsdelivr.net/gh/andywang425/BLTH@60aeae37f3409e3779fb2abcd047138cbd3078a0/assets/js/library/BilibiliAPI_Mod.min.js
// @require        https://cdn.jsdelivr.net/gh/andywang425/BLTH@4368883c643af57c07117e43785cd28adcb0cb3e/assets/js/library/layer.min.js
// @require        https://cdn.jsdelivr.net/npm/crypto-js@4.1.1/crypto-js.min.js
// @require        https://cdn.jsdelivr.net/npm/hotkeys-js@3.8.7/dist/hotkeys.min.js
// @resource       layerCss https://cdn.jsdelivr.net/gh/andywang425/BLTH@f9a554a9ea739ccde68918ae71bfd17936bae252/assets/css/layer.css
// @resource       myCss    https://cdn.jsdelivr.net/gh/andywang425/BLTH@5bcc31da7fb98eeae8443ff7aec06e882b9391a8/assets/css/myCss.min.css
// @resource       main     https://cdn.jsdelivr.net/gh/andywang425/BLTH@60aeae37f3409e3779fb2abcd047138cbd3078a0/assets/html/main.min.html
// @resource       eula     https://cdn.jsdelivr.net/gh/andywang425/BLTH@da3d8ce68cde57f3752fbf6cf071763c34341640/assets/html/eula.min.html
// @grant          unsafeWindow
// @grant          GM_xmlhttpRequest
// @grant          GM_getResourceText
// @grant          GM_notification
// @grant          GM_openInTab
// @grant          GM_getValue
// @grant          GM_setValue
// @grant          GM_deleteValue
// @grant          GM_addStyle
// ==/UserScript==
!function(){localstorage2gm();const NAME="BLTH",anchorFollowTagName="BLTH天选关注UP",anchorPrizeTagName="BLTH天选中奖UP",W="undefined"==typeof unsafeWindow?window:unsafeWindow,eventListener=W.addEventListener,wfetch=W.fetch,_setTimeout=W.setTimeout,_setInterval=W.setInterval,ts_ms=()=>Date.now(),ts_s=()=>Math.round(ts_ms()/1e3),tz_offset=(new Date).getTimezoneOffset()+480,getCHSdate=()=>new Date(ts_ms()+6e4*tz_offset),delayCall=(callback,delay=12e4)=>{const p=$.Deferred();return setTimeout(()=>{const t=callback();t&&t.then?t.then((arg1,arg2,arg3,arg4,arg5,arg6)=>p.resolve(arg1,arg2,arg3,arg4,arg5,arg6)):p.resolve()},delay),p},MYDEBUG=(sign,...data)=>{if(!SP_CONFIG.debugSwitch)return;if("object"==typeof data[0]&&data[0].netError)return MYERROR(sign,...data);let d=new Date;if(d=`%c[${NAME}]%c[${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}:${d.getMilliseconds()}]%c`,1===data.length)return console.log(d,"font-weight: bold;","color: #0920e6;","",`${sign}:`,data[0]);console.log(d,"font-weight: bold;","color: #0920e6;","",`${sign}:`,data)},MYERROR=(sign,...data)=>{let d=new Date;if(d=`[${NAME}][${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}:${d.getMilliseconds()}]`,1===data.length)return console.error(d,`${sign}:`,data[0]);console.error(d,`${sign}:`,data)},runMidnight=(callback,msg)=>{const t=new Date;let name=msg||" ";t.setMinutes(t.getMinutes()+tz_offset),t.setDate(t.getDate()+1),t.setHours(0,1,0,0),t.setMinutes(t.getMinutes()-tz_offset),setTimeout(callback,t-ts_ms()),MYDEBUG("runMidnight",name+" "+t.toString())},runExactMidnight=(callback,msg)=>{const t=new Date;let name=msg||" ";t.setMinutes(t.getMinutes()+tz_offset),t.setDate(t.getDate()+1),t.setHours(0,0,0,0),t.setMinutes(t.getMinutes()-tz_offset),setTimeout(callback,t-ts_ms()),MYDEBUG("runExactMidnight",name+" "+t.toString())},runTomorrow=(callback,hour,minute,msg)=>{const t=new Date;let name=msg||" ";t.setMinutes(t.getMinutes()+tz_offset),t.setDate(t.getDate()+1),t.setHours(hour,minute,0,0),t.setMinutes(t.getMinutes()-tz_offset),setTimeout(callback,t-ts_ms()),MYDEBUG("runTomorrow",name+" "+t.toString())},runToday=(callback,hour,minute,msg)=>{const t=new Date;let name=msg||" ";t.setMinutes(t.getMinutes()+tz_offset),t.setHours(hour,minute,0,0),t.setMinutes(t.getMinutes()-tz_offset),setTimeout(callback,t-ts_ms()),MYDEBUG("runToday",name+" "+t.toString())},newWindow={init:()=>newWindow.Toast.init(),Toast:{init:()=>{try{const list=[];return window.toast=(msg,type="info",timeout=5e3)=>{switch(type){case"success":case"info":case"caution":case"error":break;default:type="info"}const a=$(`<div class="link-toast ${type} fixed" style="z-index:2001"><span class="toast-text">${msg}</span></div>`)[0];document.body.appendChild(a),MYDEBUG("toast-"+type,msg),a.style.top=document.body.scrollTop+40*list.length+10+"px",a.style.left=document.body.offsetWidth+document.body.scrollLeft-a.offsetWidth-5+"px",SP_CONFIG.windowToast||$(".link-toast").hide(),list.push(a),setTimeout(()=>{a.className+=" out",setTimeout(()=>{list.shift(),list.forEach(v=>{v.style.top=parseInt(v.style.top,10)-40+"px"}),$(a).remove()},200)},timeout)},$.Deferred().resolve()}catch(err){return MYERROR("初始化浮动提示时出现异常",err),$.Deferred().reject()}}}},addStyle=()=>{const layerCss=GM_getResourceText("layerCss"),myCss=GM_getResourceText("myCss"),allCss=layerCss+myCss;return GM_addStyle(allCss)},getScrollPosition=(el=window)=>({x:void 0!==el.pageXOffset?el.pageXOffset:el.scrollLeft,y:void 0!==el.pageYOffset?el.pageYOffset:el.scrollTop}),linkMsg=(link,msg=link)=>'<a href="'+link+'"target="_blank" style="color:">'+msg+"</a>",liveRoomUrl="https://live.bilibili.com/",replaceList={0:"寚",1:"寜",2:"寠",3:"寣",4:"寪",5:"寭",6:"寮",7:"寰",8:"寯",9:"寴","{":"懕","}":"懖","[":"懗","]":"懘"},isRegexp=/^\/.+\/[i|g|m]?$/,SP_CONFIG_DEFAULT={showEula:!0,storageLastFixVersion:"0",mainDisplay:"show",darkMode:!1,debugSwitch:!1,windowToast:!0,nosleep:!0,invisibleEnter:!1,banP2p:!1,lastShowUpdateMsgVersion:"0",DANMU_MODIFY:!1,blockLiveStream:!1,blockliveDataUpdate:!1,wear_medal_before_danmu:!1,wear_medal_type:"ONLY_FIRST"};let otherScriptsRunningCheck=$.Deferred(),otherScriptsRunning=!1,SP_CONFIG=GM_getValue("SP_CONFIG")||{},winPrizeNum=0,winPrizeTotalCount=0,SEND_GIFT_NOW=!1,SEND_DANMU_NOW=!1,LIGHT_MEDAL_NOW=!1,hideBtnClickable=!1,secondsSendBtnClickable=!0,getFollowBtnClickable=!0,unFollowBtnClickable=!0,mainSiteTasksBtnClickable=!0,danmuTaskRunning=!1,medalDanmuRunning=!1,hasWornMedal=!1,Live_info={room_id:void 0,short_room_id:void 0,uid:void 0,ruid:void 0,gift_list:[{id:6,price:1e3},{id:1,price:100},{id:30607,price:5e3}],rnd:void 0,visit_id:void 0,bili_jct:void 0,tid:void 0,uname:void 0,user_level:void 0,level:void 0,danmu_length:void 0,medal:void 0,vipStatus:void 0},medal_info={status:$.Deferred(),medal_list:[]},mainIndex=void 0,logIndex=void 0,layerUiMain=void 0,layerLogWindow=void 0,logDiv=void 0,tabContent=void 0,JQlogRedPoint=void 0,JQmenuWindow=void 0,layerLogWindow_Height=void 0,layerLogWindow_ScrollHeight=void 0,layerLogWindow_ScrollTop=void 0,layerLogWindow_ScrollY=void 0,awardScrollCount=0,readConfigArray=[void 0],noticeJson=GM_getValue("noticeJson")||{};function init(){const MY_API={CONFIG_DEFAULT:{AUTO_DANMU:!1,AUTO_GIFT:!1,AUTO_GIFT_ROOMID:["0"],AUTO_GROUP_SIGN:!0,ANCHOR_LOTTERY:!1,ANCHOR_AWPUSH:!1,ANCHOR_AUTO_DEL_FOLLOW:!1,ANCHOR_MAXROOM:500,ANCHOR_MAXLIVEROOM_SAVE:100,ANCHOR_CHECK_INTERVAL:5,ANCHOR_IGNORE_BLACKLIST:!0,ANCHOR_IGNORE_PWDROOM:!0,ANCHOR_BLACKLIST_WORD:["测试","钓鱼","炸鱼","黑屋","脚本","空气"],ANCHOR_INTERVAL:350,ANCHOR_NEED_GOLD:0,ANCHOR_GOLD_JOIN_TIMES:1,ANCHOR_WAIT_REPLY:!0,ANCHOR_UPLOAD_DATA:!1,ANCHOR_UPLOAD_DATA_INTERVAL:10,ANCHOR_UPLOAD_MSG:!1,ANCHOR_UPLOAD_MSG_CONTENT:"",ANCHOR_IGNORE_UPLOAD_MSG:!1,ANCHOR_UPLOAD_ROOMLIST:!1,ANCHOR_SERVER_APIKEY:function(){let obj={};return obj[Live_info.uid]="",obj}(),ANCHOR_TYPE_SERVER:!1,ANCHOR_TYPE_POLLING:!0,ANCHOR_TYPE_LIVEROOM:!1,ANCHOR_TYPE_FOLLOWING:!1,ANCHOR_TYPE_CUSTOM:!1,ANCHOR_CUSTOM_ROOMLIST:[],ANCHOR_GETDATA_ROOM:22474988,ANCHOR_IGNORE_ROOM:!0,ANCHOR_IGNORE_ROOMLIST:["22647871"],ANCHOR_PRIVATE_LETTER:!1,ANCHOR_LETTER_CONTENT:"UP我中天选了，请问怎么领奖[doge]",ANCHOR_ADD_TO_WHITELIST:!1,ANCHOR_MOVETO_FOLLOW_TAG:!0,ANCHOR_MOVETO_PRIZE_TAG:!0,ANCHOR_DANMU:!1,ANCHOR_DANMU_CONTENT:["我中啦！","芜湖"],ANCHOR_IGNORE_MONEY:0,ANCHOR_MONEY_ONLY:!1,ANCHOR_FANS_CHECK:!1,ANCHOR_FANS_LEAST:0,ANCHOR_IGNORE_AREA:!1,ANCHOR_IGNORE_AREA_LIST:["学习","大事件"],ANCHOR_AUTO_BUY_LV1_MEDAL:!1,COIN:!1,COIN_NUMBER:0,COIN_TYPE:"COIN_DYN",COIN_UID:["0"],COIN2SILVER:!1,COIN2SILVER_NUM:1,SECONDS_NOTICE:!1,SECONDS_QQ:"请输入你的QQ号",DANMU_CONTENT:["这是一条弹幕"],DANMU_ROOMID:["22474988"],DANMU_INTERVAL_TIME:["10m"],DANMU_MODIFY_REGEX:["/【/"],DANMU_MODIFY_UID:[0],DANMU_MODIFY_POOL:[4],DANMU_MODIFY_COLOR:["#f7335d"],DANMU_MODIFY_SIZE:[1.2],FORCE_LIGHT:!1,GIFT_LIMIT:1,GIFT_SEND_HOUR:23,GIFT_SEND_MINUTE:59,GIFT_INTERVAL:5,GIFT_METHOD:"GIFT_SEND_TIME",GIFT_SORT:"GIFT_SORT_HIGH",GIFT_ALLOW_TYPE:["1","6","30607"],GIFT_SEND_METHOD:"GIFT_SEND_BLACK",GIFT_SEND_ROOM:["0"],GM_NOTICE:!1,GET_PRIVILEGE:!0,IN_TIME_RELOAD_DISABLE:!1,LIVE_SIGN:!0,LOGIN:!0,LITTLE_HEART:!0,LIGHT_MEDALS:["0"],LIGHT_METHOD:"LIGHT_WHITE",MEDAL_DANMU_ROOM:["0"],MEDAL_DANMU_METHOD:"MEDAL_DANMU_BLACK",MEDAL_DANMU_INTERVAL:2,MATERIAL_LOTTERY:!0,MATERIAL_LOTTERY_CHECK_INTERVAL:60,MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY:!0,MEDAL_DANMU:!1,MATERIAL_LOTTERY_REM:10,MEDAL_DANMU_CONTENT:["(⌒▽⌒)","（￣▽￣）","(=・ω・=)","(｀・ω・´)","(〜￣△￣)〜","(･∀･)","(°∀°)ﾉ","(￣3￣)","╮(￣▽￣)╭","_(:3」∠)_","(^・ω・^ )","(●￣(ｴ)￣●)","ε=ε=(ノ≧∇≦)ノ","⁄(⁄ ⁄•⁄ω⁄•⁄ ⁄)⁄","←◡←"],PP_NOTICE:!1,PP_token:"token",PLATE_ACTIVITY:!1,PLATE_ACTIVITY_CHECK_INTERVAL:60,PLATE_ACTIVITY_GETTIMES_INTERVAL:500,PLATE_ACTIVITY_LOTTERY_INTERVAL:10,QUESTIONABLE_LOTTERY:["test","encrypt","测试","钓鱼","加密","炸鱼","内网","员工","企业","公司","行政","登记"],REMOVE_ELEMENT_2233:!1,REMOVE_ELEMENT_pkBanner:!0,REMOVE_ELEMENT_rank:!0,REMOVE_ELEMENT_followSideBar:!1,REMOVE_ELEMENT_flipView:!0,REMOVE_ELEMENT_anchor:!1,REMOVE_ELEMENT_pk:!1,REMOVE_ELEMENT_playerIcon:!0,RND_DELAY_END:5,RND_DELAY_START:2,RESERVE_ACTIVITY:!1,RESERVE_ACTIVITY_INTERVAL:2e3,RESERVE_ACTIVITY_CHECK_INTERVAL:60,RESERVE_ACTIVITY_IGNORE_BLACKLIST:!1,RESERVE_ACTIVITY_BLACKLIST_WORD:["测试","钓鱼"],SEND_ALL_GIFT:!1,SHARE:!0,SILVER2COIN:!1,ServerTurbo_NOTICE:!1,ServerTurbo_SendKey:"SendKey",SPARE_GIFT_ROOM:"0",TIME_AREA_DISABLE:!0,TIME_AREA_END_H0UR:8,TIME_AREA_END_MINUTE:0,TIME_AREA_START_H0UR:2,TIME_AREA_START_MINUTE:0,TIME_RELOAD:!1,TIME_RELOAD_MINUTE:120,UPDATE_TIP:!0,WATCH:!0},CACHE_DEFAULT:{AUTO_SEND_DANMU_TS:[],AUTO_GROUP_SIGH_TS:0,DailyReward_TS:0,LiveReward_TS:0,Silver2Coin_TS:0,Coin2Sliver_TS:0,Gift_TS:0,GiftInterval_TS:0,LittleHeart_TS:0,MaterialObject_TS:0,AnchorLottery_TS:0,last_aid:778,MedalDanmu_TS:0,PlateActivity_TS:0,ReserveActivity_TS:0,NextVipPrivilege_TS:0},GIFT_COUNT_DEFAULT:{COUNT:0,ANCHOR_COUNT:0,MATERIAL_COUNT:0,LITTLE_HEART_COUNT:0,CLEAR_TS:0},CONFIG:{},CACHE:{},GIFT_COUNT:{},init:()=>{addStyle(),SP_CONFIG.darkMode="dark"===$("html").attr("lab-style");const tabList=$(".tab-list.dp-flex"),ct=$(".chat-history-panel"),ctWidth=ct.width(),aside_area_vmHeight=$("#aside-area-vm").height(),chat_control_panel_vmHeight=$("#chat-control-panel-vm").height(),eleList=[".chat-history-list",".attention-btn-ctnr",".live-player-mounter"];tabContent=$(".tab-content"),logDiv=$('<li data-v-2fdbecb2="" data-v-d2be050a="" class="item dp-i-block live-skin-separate-border border-box t-center pointer live-skin-normal-text" style = \'font-weight:bold;color: #999;\' id = "logDiv"><span id="logDivText">日志</span><div class="blth_num" style="display: none;" id = \'logRedPoint\'>0</div></mli>');let tabOffSet=0,top=0,left=0;(eleList.some(i=>0===i.length)||0===tabList.length||0===tabContent.length)&&window.toast("必要页面元素缺失，强制运行（可能会看不到控制面板，提示信息）","error"),tabList.append(logDiv),JQlogRedPoint=$("#logRedPoint");let tabListItems=[];for(let i=0;i<tabList.children("li").length;i++)tabListItems.push(tabList.children("li")[i]);logIndex=myopen({type:1,title:!1,offset:[String(top)+"px",String(left)+"px"],closeBtn:0,shade:0,zIndex:2e3,fixed:!1,area:[String(ctWidth)+"px",String(aside_area_vmHeight-chat_control_panel_vmHeight)+"px"],anim:-1,isOutAnim:!1,resize:!1,content:'<div id = "menuWindow"></div>',success:()=>{layerLogWindow=$("#layui-layer1 .layui-layer-content"),JQmenuWindow=$("#menuWindow");let logDivText=$("#logDivText");layerLogWindow.on("DOMNodeInserted",(function(){layerLogWindow_Height=$(this).height(),layerLogWindow_ScrollHeight=$(this)[0].scrollHeight,layerLogWindow_ScrollHeight>layerLogWindow_Height&&(layerLogWindow.scrollTop(layerLogWindow.prop("scrollHeight")),$(this).off("DOMNodeInserted"))})),layerLogWindow.scroll((function(){layerLogWindow_Height=$(this).height(),layerLogWindow_ScrollHeight=$(this)[0].scrollHeight,layerLogWindow_ScrollTop=$(this)[0].scrollTop,layerLogWindow_ScrollY=layerLogWindow_ScrollTop+layerLogWindow_Height+1,layerLogWindow_ScrollY<layerLogWindow_ScrollHeight&&0===winPrizeNum?logDivText.text("日志🚀"):logDivText.text("日志")}))}}),layer.style(logIndex,{"box-shadow":"none",display:"none","background-color":SP_CONFIG.darkMode?"#1c1c1c":"#f2f3f5"});for(const i of tabListItems){let JQi=$(i);JQi.click(()=>{for(const item of tabListItems){let JQitem=$(item);item!=i?("rgb(153, 153, 153)"!==JQitem.css("color")&&JQitem.css("color","#999"),JQitem.hasClass("live-skin-main-text")&&JQitem.removeClass("live-skin-main-text"),JQitem.hasClass("active")&&JQitem.removeClass("active"),JQitem.hasClass("live-skin-normal-text")||JQitem.addClass("live-skin-normal-text")):("rgb(51, 51, 51)"!==JQitem.css("color")&&JQi.css("color","#333"),JQitem.hasClass("live-skin-main-text")||JQi.addClass("live-skin-main-text"),JQitem.hasClass("active")||JQi.addClass("active"),JQitem.hasClass("live-skin-normal-text")&&JQi.removeClass("live-skin-normal-text"))}"logDiv"===JQi.attr("id")?(tabOffSet||(tabOffSet=$(".tab-content").offset(),top=tabOffSet.top,left=tabOffSet.left,layer.style(logIndex,{top:String(top)+"px",left:String(left)+"px"})),layer.style(logIndex,{display:"block"}),0===winPrizeNum?(JQlogRedPoint.hide(),(layerLogWindow_ScrollY<layerLogWindow_ScrollHeight||void 0===layerLogWindow_ScrollY)&&layerLogWindow.scrollTop(layerLogWindow.prop("scrollHeight"))):winPrizeNum>0&&awardScrollCount<winPrizeTotalCount&&$(".chatLogWinPrize").length>0&&($(".chatLogWinPrize")[awardScrollCount++].scrollIntoView(!1),$(window).scrollTop(0),JQlogRedPoint.text(--winPrizeNum),0===winPrizeNum&&JQlogRedPoint.hide())):layer.style(logIndex,{display:"none"})})}let p1=$.Deferred(),p2=$.Deferred(),p3=$.Deferred();try{BAPI.setCommonArgs(Live_info.bili_jct),p1.resolve()}catch(err){MYERROR("设置token错误",err),p1.reject()}try{MY_API.loadConfig().then(()=>{MY_API.chatLog("脚本载入配置成功","success"),p2.resolve()})}catch(e){MYERROR("API初始化出错",e),MY_API.chatLog("API初始化出错","error"),p2.reject()}try{MY_API.loadCache().then(()=>{window.toast("CACHE载入成功","success"),p3.resolve()})}catch(e){MYERROR("CACHE初始化出错",e),window.toast("CACHE初始化出错","error"),p3.reject()}return $.when(p1,p2,p3)},loadConfig:()=>{let p=$.Deferred();try{MY_API.CONFIG=GM_getValue("CONFIG")||{},mergeObject(MY_API.CONFIG,MY_API.CONFIG_DEFAULT),MY_API.loadGiftCount(),p.resolve()}catch(e){MYDEBUG("API载入配置失败，加载默认配置",e),MY_API.setDefaults(),p.reject()}return p},loadCache:()=>{let p=$.Deferred();try{MY_API.CACHE=GM_getValue("CACHE")||{},mergeObject(MY_API.CACHE,MY_API.CACHE_DEFAULT),p.resolve()}catch(e){MYDEBUG("CACHE载入配置失败，加载默认配置",e),MY_API.setDefaults(),p.reject()}return p},newMessage:version=>{try{const cache=SP_CONFIG.lastShowUpdateMsgVersion||"0";if(-1===versionStringCompare(cache,version)){const clientMliList=["修复包裹为空时无法正确获取小心心的bug，获取失败时显示错误提示。","修复转盘抽奖失效的bug。"];function createHtml(mliList){if(0===mliList.length)return"无";let mliHtml="";for(const mli of mliList)mliHtml=mliHtml+"<mli>"+mli+"</mli>";return mliHtml}myopen({title:`${version}更新提示`,area:[String(.382*$(window).width())+"px",String(.618*$(window).height())+"px"],content:`\n                <mol>${createHtml(clientMliList)}</mol>\n                <hr><em style="color:grey;">\n                如果使用过程中遇到问题，欢迎去 ${linkMsg("https://github.com/andywang425/BLTH/issues","github")}反馈。\n                也可以进q群讨论：${linkMsg("https://jq.qq.com/?_wv=1027&amp;k=fCSfWf1O","1106094437")}\n                </em>\n                `}),SP_CONFIG.lastShowUpdateMsgVersion=version,saveSpConfig()}}catch(e){MYDEBUG("提示信息CACHE载入失败",e)}},saveConfig:(show=!0)=>{try{return GM_setValue("CONFIG",MY_API.CONFIG),show&&window.toast("配置已保存，部分设置需刷新后才能生效","info"),MYDEBUG("MY_API.CONFIG",MY_API.CONFIG),!0}catch(e){return MYDEBUG("API保存出错",e),!1}},saveCache:(logswitch=!0)=>{try{return GM_setValue("CACHE",MY_API.CACHE),logswitch&&MYDEBUG("CACHE已保存",MY_API.CACHE),!0}catch(e){return MYDEBUG("CACHE保存出错",e),!1}},setDefaults:()=>{MY_API.CONFIG=MY_API.CONFIG_DEFAULT,MY_API.CACHE=MY_API.CACHE_DEFAULT,MY_API.saveConfig(),MY_API.saveCache(),mymsg("配置和CACHE已重置为默认。3秒后刷新页面",{icon:1}),setTimeout(()=>{W.location.reload()},3e3)},ReDoAllTasks:()=>{window.toast("3秒后再次执行所有任务","info");const taskList=[function(){MY_API.CACHE=MY_API.CACHE_DEFAULT},MY_API.GroupSign.run,MY_API.DailyReward.run,MY_API.LiveReward.run,MY_API.Exchange.runS2C,MY_API.Exchange.runC2S,MY_API.Gift.run,MY_API.LITTLE_HEART.run,MY_API.AUTO_DANMU.run,MY_API.MaterialObject.run,MY_API.AnchorLottery.run,MY_API.MEDAL_DANMU.run,MY_API.PLATE_ACTIVITY.run,MY_API.RESERVE_ACTIVITY.run];runAllTasks(3e3,200,taskList)},loadGiftCount:()=>{try{let giftCount=MY_API.GIFT_COUNT_DEFAULT;MY_API.GIFT_COUNT=$.extend(!0,giftCount,GM_getValue("GIFT_COUNT")||{}),MYDEBUG("MY_API.GIFT_COUNT",MY_API.GIFT_COUNT)}catch(e){MYDEBUG("读取统计失败",e)}},saveGiftCount:(show=!0)=>{try{return GM_setValue("GIFT_COUNT",MY_API.GIFT_COUNT),show&&MYDEBUG("统计保存成功",MY_API.GIFT_COUNT),!0}catch(e){return MYDEBUG("统计保存出错",e),!1}},addAnchor:(count=1)=>{MY_API.GIFT_COUNT.ANCHOR_COUNT+=count,$("#giftCount .anchor .statNum").text(MY_API.GIFT_COUNT.ANCHOR_COUNT),MY_API.saveGiftCount(!1)},addMaterial:(count=1)=>{MY_API.GIFT_COUNT.MATERIAL_COUNT+=count,$("#giftCount .material .statNum").text(MY_API.GIFT_COUNT.MATERIAL_COUNT),MY_API.saveGiftCount(!1)},removeUnnecessary:()=>{const unnecessaryObj=[{settingName:"REMOVE_ELEMENT_2233",rmJQpath:["#my-dear-haruna-vm"]},{settingName:"REMOVE_ELEMENT_pkBanner",rmJQpath:[".chaos-pk-banner"]},{settingName:"REMOVE_ELEMENT_rank",rmJQpath:[".activity-rank"]},{settingName:"REMOVE_ELEMENT_followSideBar",rmJQpath:['div[data-upgrade-intro="Follow"]',".side-bar-popup-cntr.ts-dot-4"]},{settingName:"REMOVE_ELEMENT_flipView",rmJQpath:[".flip-view"]},{settingName:"REMOVE_ELEMENT_anchor",addCss:".anchor-lottery-entry * {display: none;} #anchor-guest-box-id * {display: none;}",eval:'setInterval(() => {$("iframe").contents().find("#app .close-btn").click()}, 200)'},{settingName:"REMOVE_ELEMENT_pk",addCss:".process-box * {display: none;} #chaos-pk-vm * {display:none;}",eval:'setInterval(() => {$("iframe").contents().find("#app .closeBtn").click()}, 200)'},{settingName:"REMOVE_ELEMENT_playerIcon",rmJQpath:[".web-player-icon-roomStatus"]}],removeElement=obj=>{if(MY_API.CONFIG[obj.settingName]){if(obj.hasOwnProperty("rmJQpath"))for(const path of obj.rmJQpath){let timer=setInterval(()=>{const unnecessaryItem=$(path);unnecessaryItem.length>0&&(unnecessaryItem.remove(),clearInterval(timer))},200)}obj.hasOwnProperty("addCss")&&GM_addStyle(obj.addCss),obj.hasOwnProperty("eval")&&eval(obj.eval)}};for(const i of unnecessaryObj)removeElement(i)},buyFanMedal:room_id=>BAPI.live_user.get_anchor_in_room(room_id).then((function(response){if(MYDEBUG("API.live_user.get_anchor_in_room response",response),0===response.code&&response.data.info){const uid=String(response.data.info.uid),uname=response.data.info.uname;myconfirm(`<div style = "text-align:center">是否消耗5B币购买UP主<br>${linkMsg("https://space.bilibili.com/"+uid,uname)}<br>的粉丝勋章？</div>`,{title:`购买勋章 房间号：${room_id}`,btn:["是","否"]},(function(){BAPI.x.elec_pay_quick(response.data.info.uid).then(re=>{MYDEBUG("API.x.elec_pay_quick re",re),0===re.code&&4===re.data.status?mymsg("购买成功",{time:2e3,icon:1}):mymsg(`购买失败 ${re.data.msg}`,{time:2500,icon:2})})}),(function(){mymsg("已取消购买",{time:2e3})}))}else 0===response.code&&void 0===response.data.info?mymsg("房间不存在",{time:2500}):mymsg(`检查房间出错 ${response.message}`,{time:2500})})),creatSetBox:async()=>{const btnmsg="hide"===SP_CONFIG.mainDisplay?"显示控制面板":"隐藏控制面板",btn=$(`<button class="blth_btn" style="display: inline-block; float: left; margin-right: 7px;cursor: pointer;box-shadow: 1px 1px 2px #00000075;" id="hiderbtn">${btnmsg}<br></button>`),body=$("body"),webHtml=$("html"),html=GM_getResourceText("main");function layerOpenAbout(){return myopen({title:`版本${GM_info.script.version}`,content:`<h3 style="text-align:center">B站直播间挂机助手</h3>作者：${linkMsg("https://github.com/andywang425/","andywang425")}<br>许可证：${linkMsg("https://raw.githubusercontent.com/andywang425/BLTH/master/LICENSE","MIT")}<br>github项目地址：${linkMsg("https://github.com/andywang425/BLTH","BLTH")}<br>反馈：${linkMsg("https://github.com/andywang425/BLTH/issues","BLTH/issues")}<br>交流qq群：${linkMsg("https://jq.qq.com/?_wv=1027&amp;k=fCSfWf1O","1106094437")}<br>`})}const saveAction=div=>{let val=void 0,valArray=void 0,val1=parseInt(div.find('div[data-toggle="TIME_AREA_DISABLE"] .startHour').val()),val2=parseInt(div.find('div[data-toggle="TIME_AREA_DISABLE"] .endHour').val()),val3=parseInt(div.find('div[data-toggle="TIME_AREA_DISABLE"] .startMinute').val()),val4=parseInt(div.find('div[data-toggle="TIME_AREA_DISABLE"] .endMinute').val());if(val1>=24||val2>=24||val3>=60||val4>=60||val1<0||val2<0||val3<0||val4<0)return window.toast("[定时休眠]时间错误","caution");if(MY_API.CONFIG.TIME_AREA_START_H0UR=val1,MY_API.CONFIG.TIME_AREA_END_H0UR=val2,MY_API.CONFIG.TIME_AREA_START_MINUTE=val3,MY_API.CONFIG.TIME_AREA_END_MINUTE=val4,val=parseInt(div.find('div[data-toggle="TIME_RELOAD"] .delay-seconds').val()),val<=0||val>1e4)return window.toast("[直播间重载时间]数据小于等于0或大于10000","caution");if(MY_API.CONFIG.TIME_RELOAD_MINUTE=val,val=parseInt(div.find('div[data-toggle="COIN"] .coin_number').val()),val<0||val>5)return window.toast("[自动投币]数据小于0或大于5","caution");MY_API.CONFIG.COIN_NUMBER=val,val=div.find('div[data-toggle="AUTO_GIFT_ROOMID"] .num').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]=22474988);if(MY_API.CONFIG.AUTO_GIFT_ROOMID=valArray,val=parseInt(div.find('div[data-toggle="GIFT_LIMIT"] .num').val()),MY_API.CONFIG.GIFT_LIMIT=val,val=parseInt(div.find('div[data-toggle="GIFT_INTERVAL"] .num').val()),MY_API.CONFIG.GIFT_INTERVAL=val,val1=parseInt(div.find('div[data-toggle="GIFT_SEND_TIME"] .Hour').val()),val2=parseInt(div.find('div[data-toggle="GIFT_SEND_TIME"] .Minute').val()),val1<0||val2<0||val1>=24||val2>=60)return window.toast("[送礼时间]时间错误","caution");MY_API.CONFIG.GIFT_SEND_HOUR=val1,MY_API.CONFIG.GIFT_SEND_MINUTE=val2,val=div.find('div[data-toggle="LIGHT_MEDALS"] .num').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]=0);MY_API.CONFIG.LIGHT_MEDALS=valArray,val=div.find('div[data-toggle="SPARE_GIFT_ROOM"] .num').val(),MY_API.CONFIG.SPARE_GIFT_ROOM=val,val=div.find('div[data-toggle="COIN_UID"] .num').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]=0);MY_API.CONFIG.COIN_UID=valArray,val1=div.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Danmu').val(),valArray=val1.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]="这是一条弹幕");val1=valArray,val2=div.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Roomid').val(),valArray=val2.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]="22474988");val2=valArray,val3=div.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Time').val(),valArray=val3.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]="10m");if(val3=valArray,MY_API.CONFIG.DANMU_CONTENT=val1,MY_API.CONFIG.DANMU_ROOMID=val2,MY_API.CONFIG.DANMU_INTERVAL_TIME=val3,val=parseInt(div.find('div[data-toggle="MATERIAL_LOTTERY_CHECK_INTERVAL"] .num').val()),MY_API.CONFIG.MATERIAL_LOTTERY_CHECK_INTERVAL=val,val=parseInt(div.find('div[data-toggle="MATERIAL_LOTTERY_REM"] .num').val()),isNaN(val)&&(val=9),MY_API.CONFIG.MATERIAL_LOTTERY_REM=val,val=parseFloat(div.find('div[data-toggle="ANCHOR_CHECK_INTERVAL"] .num').val()),MY_API.CONFIG.ANCHOR_CHECK_INTERVAL=val,val=div.find('div[data-toggle="ANCHOR_MAXROOM"] .roomNum').val(),val<=0)return window.toast("[检查房间最大数量] 数据小于等于0","caution");if(MY_API.CONFIG.ANCHOR_MAXROOM=val,val=parseInt(div.find('div[data-toggle="ANCHOR_NEED_GOLD"] .num').val()),MY_API.CONFIG.ANCHOR_NEED_GOLD=val,val=parseInt(div.find('div[data-toggle="ANCHOR_INTERVAL"] .num').val()),isNaN(val)||val<0)return window.toast("[请求间隔] 错误输入","caution");if(MY_API.CONFIG.ANCHOR_INTERVAL=val,val=div.find('div[data-toggle="ANCHOR_TYPE_LIVEROOM"] .num').val(),isNaN(val)||val<0)return window.toast("[从直播间获取天选数据] 直播间号格式错误","caution");if(MY_API.CONFIG.ANCHOR_GETDATA_ROOM=val,val=parseInt(div.find('[data-toggle="ANCHOR_UPLOAD_DATA"] .num').val()),isNaN(val)||val<0)return window.toast("[上传天选数据至直播间个人简介间隔] 错误输入","caution");if(MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL=val,val=div.find('[data-toggle="ANCHOR_MAXLIVEROOM_SAVE"] .roomNum').val(),isNaN(val)||val<0)return window.toast("[个人简介储存房间最大数量] 错误输入","caution");if(MY_API.CONFIG.ANCHOR_MAXLIVEROOM_SAVE=val,val=parseFloat(div.find('[data-toggle="ANCHOR_IGNORE_MONEY"] .num').val()),isNaN(val)||val<0)return window.toast("[忽略小于指定金额天选] 错误输入","caution");if(MY_API.CONFIG.ANCHOR_IGNORE_MONEY=val,val=parseFloat(div.find('[data-toggle="MEDAL_DANMU_INTERVAL"] .num').val()),isNaN(val)||val<0)return window.toast("[打卡弹幕发送间隔] 错误输入","caution");if(MY_API.CONFIG.MEDAL_DANMU_INTERVAL=val,val=parseInt(div.find('[data-toggle="COIN2SILVER"] .coin_number').val()),isNaN(val)||val<0)return window.toast("[硬币换银瓜子] 错误输入","caution");MY_API.CONFIG.COIN2SILVER_NUM=val,val=div.find('[data-toggle="GIFT_ALLOW_TYPE"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]="0");if(MY_API.CONFIG.GIFT_ALLOW_TYPE=valArray,val=parseInt(div.find('[data-toggle="ANCHOR_GOLD_JOIN_TIMES"] .num').val()),isNaN(val)||val<=0)return window.toast("[付费天选参加次数] 错误输入","caution");if(MY_API.CONFIG.ANCHOR_GOLD_JOIN_TIMES=val,val=parseInt(div.find('[data-toggle="ANCHOR_FANS_CHECK"] .num').val()),isNaN(val)||val<0)return window.toast("[最少粉丝数] 错误输入","caution");MY_API.CONFIG.ANCHOR_FANS_LEAST=val,val=div.find('div[data-toggle="DANMU_MODIFY_REGEX"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]?valArray[i]=1:valArray[i]=valArray[i];MY_API.CONFIG.DANMU_MODIFY_REGEX=valArray,val=div.find('div[data-toggle="DANMU_MODIFY_UID"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]?valArray[i]=0:valArray[i]=parseInt(valArray[i]);MY_API.CONFIG.DANMU_MODIFY_UID=valArray,val=div.find('div[data-toggle="DANMU_MODIFY_POOL"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]?valArray[i]=1:valArray[i]=parseInt(valArray[i]);MY_API.CONFIG.DANMU_MODIFY_POOL=valArray,val=div.find('div[data-toggle="DANMU_MODIFY_COLOR"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]&&(valArray[i]="#FF000");MY_API.CONFIG.DANMU_MODIFY_COLOR=valArray,val=div.find('div[data-toggle="DANMU_MODIFY_SIZE"] .str').val(),valArray=val.split(",");for(let i=0;i<valArray.length;i++)""===valArray[i]?valArray[i]=1:valArray[i]=parseFloat(valArray[i]);return MY_API.CONFIG.DANMU_MODIFY_SIZE=valArray,val=parseInt(div.find('[data-toggle="PLATE_ACTIVITY_CHECK_INTERVAL"] .num').val()),isNaN(val)||val<=0?window.toast("[转盘抽奖检查间隔] 错误输入","caution"):(MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL=val,val=parseInt(div.find('[data-toggle="PLATE_ACTIVITY_LOTTERY_INTERVAL"] .num').val()),isNaN(val)||val<=0?window.toast("[转盘抽奖请求间隔] 错误输入","caution"):(MY_API.CONFIG.PLATE_ACTIVITY_LOTTERY_INTERVAL=val,val=parseInt(div.find('[data-toggle="PLATE_ACTIVITY_GETTIMES_INTERVAL"] .num').val()),isNaN(val)||val<=0?window.toast("[转盘获取次数请求间隔] 错误输入","caution"):(MY_API.CONFIG.PLATE_ACTIVITY_GETTIMES_INTERVAL=val,val=parseInt(div.find('[data-toggle="RESERVE_ACTIVITY_INTERVAL"] .num').val()),isNaN(val)||val<=0?window.toast("[直播预约抽奖请求间隔] 错误输入","caution"):(MY_API.CONFIG.RESERVE_ACTIVITY_INTERVAL=val,val=parseInt(div.find('[data-toggle="RESERVE_ACTIVITY_CHECK_INTERVAL"] .num').val()),isNaN(val)||val<=0?window.toast("[直播预约抽奖检查间隔] 错误输入","caution"):(MY_API.CONFIG.RESERVE_ACTIVITY_CHECK_INTERVAL=val,MY_API.saveConfig())))))},checkList=["AUTO_DANMU","TIME_AREA_DISABLE","AUTO_GROUP_SIGN","LOGIN","WATCH","COIN","SHARE","SILVER2COIN","LIVE_SIGN","IN_TIME_RELOAD_DISABLE","TIME_RELOAD","AUTO_GIFT","SEND_ALL_GIFT","LITTLE_HEART","REMOVE_ELEMENT_2233","REMOVE_ELEMENT_pkBanner","REMOVE_ELEMENT_rank","REMOVE_ELEMENT_playerIcon","MATERIAL_LOTTERY","MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY","ANCHOR_IGNORE_BLACKLIST","ANCHOR_LOTTERY","PP_NOTICE","ANCHOR_WAIT_REPLY","ANCHOR_AUTO_DEL_FOLLOW","ANCHOR_UPLOAD_DATA","ANCHOR_PRIVATE_LETTER","GM_NOTICE","ANCHOR_ADD_TO_WHITELIST","ANCHOR_MOVETO_FOLLOW_TAG","MEDAL_DANMU","ANCHOR_DANMU","ANCHOR_MOVETO_PRIZE_TAG","ANCHOR_IGNORE_PWDROOM","UPDATE_TIP","REMOVE_ELEMENT_followSideBar","REMOVE_ELEMENT_flipView","ANCHOR_UPLOAD_MSG","ANCHOR_IGNORE_UPLOAD_MSG","ANCHOR_IGNORE_ROOM","ANCHOR_MONEY_ONLY","FORCE_LIGHT","COIN2SILVER","ANCHOR_TYPE_POLLING","ANCHOR_TYPE_LIVEROOM","ANCHOR_TYPE_FOLLOWING","SECONDS_NOTICE","ServerTurbo_NOTICE","ANCHOR_TYPE_CUSTOM","REMOVE_ELEMENT_anchor","REMOVE_ELEMENT_pk","ANCHOR_FANS_CHECK","ANCHOR_TYPE_SERVER","ANCHOR_UPLOAD_ROOMLIST","ANCHOR_AWPUSH","ANCHOR_AUTO_BUY_LV1_MEDAL","ANCHOR_IGNORE_AREA","PLATE_ACTIVITY","RESERVE_ACTIVITY","RESERVE_ACTIVITY_IGNORE_BLACKLIST","GET_PRIVILEGE"],radioList=[{name:"COIN_TYPE",toggle1:"COIN_DYN",toggle2:"COIN_UID"},{name:"GIFT_METHOD",toggle1:"GIFT_INTERVAL",toggle2:"GIFT_SEND_TIME"},{name:"GIFT_SORT",toggle1:"GIFT_SORT_HIGH",toggle2:"GIFT_SORT_LOW"},{name:"MEDAL_DANMU_METHOD",toggle1:"MEDAL_DANMU_WHITE",toggle2:"MEDAL_DANMU_BLACK"},{name:"LIGHT_METHOD",toggle1:"LIGHT_WHITE",toggle2:"LIGHT_BLACK"},{name:"GIFT_SEND_METHOD",toggle1:"GIFT_SEND_WHITE",toggle2:"GIFT_SEND_BLACK"}],helpText={ANCHOR_FANS_CHECK:"忽略粉丝数小于一定值的UP所发起的天选时刻。<mul><mli>通常来说粉丝数多的UP比较讲信用，不会不兑奖。当然因为这些UP的天选抽的人多也更难中奖。</mli><mli>该项只能填大于等于0的整数。</mli></mul>",ANCHOR_GOLD_JOIN_TIMES:"付费天选指需要花费电池才能参加的天选。<mul><mli>多次参加同一个付费天选可以提高中奖率。</mli><mli><strong>请慎重填写本设置项。</strong></mli></mul>",GIFT_SEND_METHOD:"自动送礼策略，有白名单和黑名单两种。后文中的<code>直播间</code>指拥有粉丝勋章的直播间。<mul><mli>白名单：仅给房间列表内的直播间送礼。</mli><mli>黑名单：给房间列表以外的直播间送礼。</mli><mli>如果要填写多个房间，每两个房间号之间需用半角逗号<code>,</code>隔开。</mli></mul>",ANCHOR_IGNORE_MONEY:"脚本会尝试识别天选标题中是否有金额并忽略金额小于设置值的天选。<mh3>注意：</mh3><mul><mli>支持识别阿拉伯数字和汉字数字。</mli><mli>识别的单位有限。</mli><mli>不支持识别外币。</mli><mli>由于一些天选时刻的奖品名比较特殊，可能会出现遗漏或误判。</mli></mul>",MEDAL_DANMU:"在拥有粉丝勋章的直播间内，每天发送的首条弹幕将点亮对应勋章并给该勋章+100亲密度。<mh3>注意：</mh3><mul><mli>脚本不会给等级大于20的粉丝勋章打卡（因为不加亲密度）。</mli><mli>如果要填写多条弹幕，每条弹幕间请用半角逗号<code>,</code>隔开，发弹幕时将依次选取弹幕进行发送（若弹幕数量不足则循环选取）。</mli><mli>本功能运行时【自动发弹幕】和【自动送礼】将暂停运行。</mli></mul>",AUTO_DANMU:"发送直播间弹幕。<mh3>注意：</mh3><mul><mli>本功能运行时【粉丝勋章打卡弹幕】将暂停运行。</mli><mli><mp>弹幕内容，房间号，发送时间可填多个，数据之间用半角逗号<code>,</code>隔开(数组格式)。脚本会按顺序将这三个值一一对应，发送弹幕。</mp></mli><mli><mp>由于B站服务器限制，每秒最多只能发1条弹幕。若在某一时刻有多条弹幕需要发送，脚本会在每条弹幕间加上1.5秒间隔时间（对在特定时间点发送的弹幕无效）。</mp></mli><mli><mp>如果数据没对齐，缺失的数据会自动向前对齐。如填写<code>弹幕内容 lalala</code>，<code>房间号 3,4</code>，<code>发送时间 5m,10:30</code>，少填一个弹幕内容。那么在发送第二条弹幕时，第二条弹幕的弹幕内容会自动向前对齐（即第二条弹幕的弹幕内容是lalala）。</mp></mli><mli><mp>可以用默认值所填的房间号来测试本功能，但是请不要一直发。</mp></mli><mli><mp>发送时间有两种填写方法</mp><mp>1.【小时】h【分钟】m【秒】s</mp><mul><mli>每隔一段时间发送一条弹幕</mli><mli>例子：<code>1h2m3s</code>, <code>300m</code>, <code>30s</code>, <code>1h50s</code>, <code>2m6s</code>, <code>0.5h</code></mli><mli>可以填小数</mli><mli>可以只填写其中一项或两项</mli></mul><mp>脚本会根据输入数据计算出间隔时间，每隔一个间隔时间就会发送一条弹幕。如果不加单位，如填写<code>10</code>则默认单位是分钟（等同于<code>10m</code>）。</mp><mp><em>注意：必须按顺序填小时，分钟，秒，否则会出错(如<code>3s5h</code>就是错误的写法)</em></mp><mp>2.【小时】:【分钟】:【秒】</mp><mul><mli>在特定时间点（本地时间）发一条弹幕</mli><mli>例子： <code>10:30:10</code>, <code>0:40</code></mli><mli>只能填整数</mli><mli>小时分钟必须填写，秒数可以不填</mli></mul><mp>脚本会在该时间点发一条弹幕（如<code>13:30:10</code>就是在下午1点30分10秒的时候发弹幕）。</mp></mli></mul>",NOSLEEP:"屏蔽B站的挂机检测。不开启本功能时，标签页后台或长时间无操作就会触发B站的挂机检测。<mh3>原理：</mh3><mul><mli>劫持页面上的<code>addEventListener</code>绕过页面可见性检测，每5分钟触发一次鼠标移动事件规避鼠标移动检测。同时劫持页面上的setTimeout和setInterval避免暂停直播的函数被调用。</mli><mul>",INVISIBLE_ENTER:"开启后进任意直播间其他人都不会看到你进直播间的提示【xxx 进入直播间】（只有你自己能看到）。<mh3>缺点：</mh3><mli>开启后无法获取自己是否是当前直播间房管的数据，关注按钮状态均为未关注。所以开启本功能后进任意直播间都会有【禁言】按钮（如果不是房管操作后会显示你没有权限），发弹幕时弹幕旁边会有房管标识（如果不是房管则只有你能看到此标识）。</mli><mli>无法打开页面下拉后出现的动态的评论区。</mli>",MATERIAL_LOTTERY:"实物抽奖，即金宝箱抽奖。某些特殊的直播间会有金宝箱抽奖。<mh3>注意：</mh3><mul><mli>【忽略关键字】中每一项之间用半角逗号<code>,</code>隔开。</mli></mul>",MATERIAL_LOTTERY_REM:"aid是活动的编号。如你不理解此项保持默认配置即可。",ANCHOR_IGNORE_BLACKLIST:"忽略奖品名中含特定关键字或匹配特定正则表达式的存疑天选。<mh3>注意：</mh3><mul><mli>若要填写多个，每一项之间用半角逗号<code>,</code>隔开。</mli><mli>可以填<a href='https://www.runoob.com/js/js-regexp.html' target='_blank'>JavaScript正则表达式</a>。格式为<code>/【正则】/【修饰符】（可选）</code>，如<code>/cards/i</code>。</mli><mli>关键字对大小写不敏感，而正则在没有添加修饰符<code>i</code>的情况下会区分大小写。</mli><mli>欢迎大家在Github Discussion的<a href='https://github.com/andywang425/BLTH/discussions/80' target='_blank'>信息收集贴</a>分享你的关键字。</mli></mul>",MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY:"忽略奖品名/抽奖规则中含特定关键字或匹配特定正则表达式的存疑抽奖。<mh3>注意：</mh3><mul><mli>若要填写多个，每一项之间用半角逗号<code>,</code>隔开。</mli><mli>可以填<a href='https://www.runoob.com/js/js-regexp.html' target='_blank'>JavaScript正则表达式</a>。格式为<code>/【正则】/【修饰符】（可选）</code>，如<code>/cards/i</code>。</mli><mli>关键字对大小写不敏感，而正则在没有添加修饰符<code>i</code>的情况下会区分大小写。</mli><mli>欢迎大家在Github Discussion的<a href='https://github.com/andywang425/BLTH/discussions/80' target='_blank'>信息收集贴</a>分享你的关键字。</mli></mul>",PP_NOTICE:"<a href = 'http://www.pushplus.plus/' target = '_blank'>推送加（点我注册）</a>，即「pushplus」，一个很好用的消息推送平台。<br><br><blockquote>“ 我们的所做的一切只是为了让推送变的更简单。”</blockquote><br>使用前请先前往推送加官网完成注册，然后回到脚本界面填写token。<br><mul><mli>检测到实物/天选中奖后会发一条包含中奖具体信息的微信公众号推送提醒你中奖了。</mli></mul>",BUY_MEDAL:"通过给UP充电，消耗5B币购买某位UP的粉丝勋章。<mul><mli>默认值为当前房间号。点击购买按钮后有确认界面，无需担心误触。</mli></mul>",btnArea:"<mul><mli>重置所有为默认：指将设置和任务执行时间缓存重置为默认。</mli><mli>再次执行所有任务，再次执行主站任务会使相关缓存重置为默认，可以在勾选了新的任务设置后使用。</mli><mli>导出配置：导出一个包含当前脚本设置的json到浏览器的默认下载路径，文件名为<code>BLTH_CONFIG.json</code>。</mli><mli>导入配置：从一个json文件导入脚本配置，导入成功后脚本会自动刷新页面使配置生效。</mli></mul>",LITTLE_HEART:"通过发送客户端心跳包获取小心心（无论目标房间是否开播都能获取）。<mul><mli>检测到包裹内有24个7天的小心心后会停止。</mli><mli>在获取完所有小心心之前直播间不刷新。</mli><mli>B站随时可以通过热更新使该功能失效。</mli></mul>",SEND_ALL_GIFT:"若不勾选该项，自动送礼只会送出在【允许被送出的礼物类型】中的礼物。",AUTO_GIFT_ROOMID:"送礼时优先给这些房间送礼，送到对应粉丝牌亲密度上限后再送其它的。<mul><mli>如果要填写多个房间，每两个房间号之间需用半角逗号<code>,</code>隔开。如<code>666,777,888</code>。</mli></mul>",GIFT_LIMIT:"将要在这个时间段里过期的礼物会被送出。<mh3>注意：</mh3><mul><mli>勾选【无视礼物类型和到期时间限制】时无论礼物是否将要过期都会被送出。</mli></mul>",AUTO_GIFT:"<mh3>说明：</mh3><mul><mli>送礼设置优先级：<br>不送礼房间 >优先送礼房间 >优先高/低等级粉丝牌。</mli><mli>送礼设置逻辑规则：<br>无论【优先高/低等级粉丝牌】如何设置，会根据【无视礼物类型和到期时间限制】（勾选则无视是否到期补满亲密度，否则只送到期的）条件去按优先送礼房间先后顺序送礼。之后根据【优先高/低等级粉丝牌】决定先送高级还是低级。 </mli><mli>送礼顺序：<br>高亲密度的礼物会被优先送出，在满足此条件的情况下先送快要过期的礼物。 </mli><mli>不会送出永久礼物。 </mli></mul>",SPARE_GIFT_ROOM:"【剩余礼物】指送满了所有粉丝牌，但仍有剩余的将在1天内过期的礼物。<mul><mli>该项填<code>0</code>则不送剩余礼物。</mli></mul>",COIN:"自动给视频投币，每天最多投5个。<mul><mli>脚本会根据今日你已获得的投币经验值判断你已经投了多少个币，然后自动投剩余没投的币。<blockquote>如今日已获得投币经验20，脚本投币数量设置为4，则会投2个币。</blockquote></mli></mul>",COIN_UID:"该项若填<code>0</code>则给动态中的视频依次投币(不存在UID为0的用户)。<mul><mli>可以填写多个uid，每两个uid间用半角逗号<code>,</code>隔开。</mli><mli>如果填了多个uid，则会依次检查这些UP是否有可投币的视频。</mli></mul>",ANCHOR_INTERVAL:"轮询天选，取关，获取房间列表时每两个请求间的间隔时间。<mh3>注意：</mh3><mul><mli>如果间隔时间过短可能会被风控。</mli></mul>",ANCHOR_WAIT_REPLY:"发起检查直播间天选信息，取关的请求后会等待回复，收到回复后等待一个间隔时间再发起下一个请求。<mh3>任务流程：</mh3><mul><mli>发起请求 - 等待回复 - 等待一个间隔时间 - 发起下一个请求</mli></mul>",ANCHOR_AUTO_DEL_FOLLOW:"如果该UP在白名单内或一开始就在默认/特别关注分组则不会被取关。",anchorBtnArea:"参加天选时会关注很多UP。可以在参加天选前点击【保存当前关注列表为白名单】，参与完天选后再点【取关不在白名单内的UP主】来清理关注列表。<mul><mli>不建议频繁清理，可能会被风控。</mli><mli>【编辑白名单】每两个uid之间用半角逗号<code>,</code>隔开。</mli><mli>推荐大家使用【取关分组内的UP主】的功能来清理关注列表，【取关不在白名单内的UP主】可以作为一个备选方案。</mli></mul>",ANCHOR_TYPE_POLLING:"高热度房间来源于各分区热门房间列表。",ANCHOR_UPLOAD_DATA:"使用这个功能前你必须先拥有自己的直播间。<mul><mli>【间隔__秒】：这个设置项若填<code>10</code>秒，则每<code>10</code>秒检查一次是否收集到了新的数据，若有才上传。</mli></mul>",ANCHOR_UPLOAD_MSG:"在上传天选数据的同时可以上传一段附加信息。<mul><mli>如果想把附加信息设为空，请点击编辑界面上的<code>留空</code>按钮。</mli></mul>",ANCHOR_MAXLIVEROOM_SAVE:"个人简介有长度限制（约为一万个字符），若【个人简介储存房间最大数量】太大会无法上传。",ANCHOR_MAXROOM:"若收集的房间总数超过【检查房间最大数量】则会删除一部分最开始缓存的房间。<mh3>注意：</mh3><mul><mli>这一项并不是数值越大效率就越高。如果把这个值设置得过高会浪费很多时间去检查热度较低的，甚至已经下播的房间。【个人简介储存房间最大数量】同理。</mli></mul>",ANCHOR_TYPE_LIVEROOM:"因为在云上部署了脚本，<strong>默认值所填直播间(<a href = 'https://live.bilibili.com/22474988' target = '_blank'>22474988</a>)的个人简介可以持续提供天选数据</strong>（除非被风控或遇到一些突发情况）。<mul><mli>这个功能主要是为了减少请求数量，提高效率同时减少风控的概率。</mli><mli>使用本功能时建议把【天选获取数据间隔】调低一些减少遗漏的天选数量。</mli><mli><a href='https://jq.qq.com/?_wv=1027&amp;k=fCSfWf1O' target = '_blank'>q群（1106094437）</a>的群在线文档中有一些群友上传的能提供天选数据的直播间号。</mli></mul>",ANCHOR_PRIVATE_LETTER:"若中奖，会在开奖后10秒发送私信。<mul><mli>建议改一下私信内容，不要和默认值完全一样。</mli></mul>",ANCHOR_MOVETO_FOLLOW_TAG:`分组的名称为<code>${anchorFollowTagName}</code>。<mul><mli>在白名单内或天选功能运行前在默认/特别关注分组内的UP不会被移入该分组，即使后来出现在该分组里也不会被取关。</mli><mli><strong>请勿修改该分组名称。</strong></mli></mul>`,ANCHOR_CHECK_INTERVAL:"检查完一轮天选后等待的时间。<mul><mli>可以填小数。</mli></mul>",TIME_AREA_DISABLE:"处于这个时段内时，脚本会暂停检查天选时刻，转盘抽奖，直播预约抽奖。<br><mul><mli>24小时制，只能填整数。</mli></mul>",MEDAL_DANMU_METHOD:"发送粉丝勋章打卡弹幕的逻辑，有白名单和黑名单两种。后文中的<code>直播间</code>指拥有粉丝勋章的直播间。<mul><mli>白名单：仅给房间列表内的直播间发弹幕。</mli><mli>黑名单：给房间列表以外的直播间发弹幕。</mli><mli>若要填写多个直播间，每两个直播间号之间用半角逗号<code>,</code>隔开。</mli></mul>",ANCHOR_DANMU:"检测到中奖后在发起抽奖的直播间发一条弹幕。<mh3>注意：</mh3><mul><mli>如果要填写多条弹幕，每条弹幕间请用半角逗号<code>,</code>隔开，发弹幕时将从中随机抽取弹幕进行发送。</mli></mul>",topArea:"这里会显示一些统计信息。点击【保存所有设置】按钮即可保存当前设置。<mul><mli>统计信息实时更新，北京时间0点时重置。</mli><mli><strong>支持输入框回车保存。</strong></mli><mli>单选框和多选框设置发生变化时会自动保存设置。</mli></mul>",ANCHOR_MOVETO_PRIZE_TAG:`分组的名称为<code>${anchorPrizeTagName}</code>。<mul><mli>在白名单内或天选功能运行前在默认/特别关注分组内的UP不会被移入该分组，即使后来出现在该分组里也不会被取关。</mli><mli><strong>请勿修改该分组名称。</strong></mli></mul>`,debugSwitch:"开启或关闭控制台日志(Chrome可通过<code>ctrl + shift + i</code>，再点击<code>Console</code>打开控制台)。<mul><mli>平时建议关闭，减少资源占用。</mli><mli>该设置只会影响日志(<code>console.log</code>)，不会影响报错(<code>console.error</code>)。</mli></mul>",UPDATE_TIP:"每次更新后第一次运行脚本时显示关于更新内容的弹窗。",ANCHOR_IGNORE_UPLOAD_MSG:"不显示获取到的附加信息。",MEDAL_DANMU_INTERVAL:"每两条弹幕间所等待的时间。<mh3>注意：</mh3><mul><mli>由于B站服务器限制，间隔时间必须大于等于1秒，否则弹幕发送会出错。</mli></mul>",ANCHOR_IGNORE_ROOM:"不检查和参加这些直播间的天选。<mul><mli>如果要填写多个直播间，每两个直播间号之间请用半角逗号<code>,</code>隔开。</mli></mul>",ANCHOR_LOTTERY:"参加B站直播间的天选时刻抽奖。<mul><mli>这些抽奖通常是有参与条件的，如关注主播，投喂礼物，粉丝勋章等级，主站等级，直播用户等级，上舰等。</mli><mli>根据目前B站的规则，参加天选的同时会在发起抽奖的直播间发送一条弹幕（即弹幕口令，参加天选后自动发送）。</mli><mli>脚本会根据用户设置来决定是否要忽略某个天选，以下是判断的先后顺序，一旦检测到不符合要求则忽略该天选并中断后续判断流程：<br><code>忽略直播间</code>，<code>忽略已参加天选</code>，<code>忽略过期天选</code>，<code>忽略关键字</code>，<code>忽略金额</code>，<code>忽略非现金抽奖的天选</code>，<code>忽略付费天选</code>，<code>忽略不满足参加条件（粉丝勋章，大航海，直播用户等级，主站等级）的天选</code>。</mli></mul>",SHARE:"并不会真的分享视频，通过调用特定api直接完成任务。",ANCHOR_MONEY_ONLY:"仅参加能识别到金额的天选。<mul><mli>由于部分天选的奖品名较特殊，可能会遗漏或误判一些天选。</mli></mul>",LIGHT_MEDALS:"根据点亮模式的不同，这些直播间的粉丝勋章将会被点亮或排除在外。<mul><mli>如果要填写多个房间，每两个房间号之间需用半角逗号<code>,</code>隔开。</mli></mul>",LIGHT_METHOD:"通过给拥有粉丝勋章的直播间送一个小心心来点亮熄灭的勋章。<mul><mli>白名单：只点亮这些房间的粉丝勋章。</mli><mli>黑名单：点亮除了这些房间以外的直播间的粉丝勋章。</mli><mli>如果你不想启用本功能，把【勋章点亮模式】设为白名单，然后在【自动点亮勋章房间号】中填<code>0</code>即可。</mli><mli>脚本会在运行自动送礼前点亮勋章。如果未启用自动送礼，请点击【立刻点亮勋章】按钮。</mli><mli>优先送出快过期的小心心。</mli></mul>",ANCHOR_IGNORE_PWDROOM:"部分直播间需输入密码后才能进入。勾选此选项后将忽略这些直播间的天选。",COIN2SILVER:"普通用户每天兑换上限<code>25</code>硬币，老爷或大会员每天兑换上限<code>50</code>硬币。<mul><mli><code>1</code>硬币 = <code>450</code>银瓜子（老爷或大会员<code>500</code>银瓜子）。</mli></mul>",SILVER2COIN:"每日直播用户都可以将部分银瓜子转化为硬币，每天仅一次机会。<mul><mli><code>700</code>银瓜子 = <code>1</code>硬币。</mul></mli>",windowToast:'右上角的提示信息。相对来说不是那么重要，所以不放在日志窗口里。<mul style = "line-height:1em;"><div class="link-toast info fixed"><span class="toast-text">普通消息</span></div><br><br><br><div class="link-toast success fixed"><span class="toast-text">成功</span></div><br><br><br><div class="link-toast error fixed"><span class="toast-text">发生错误</span></div></mul>',GIFT_ALLOW_TYPE:"可以填写礼物的id或者礼物名称。<mul><mli>如果要填写多个，每两项之间请用半角逗号<code>,</code>隔开。</mli><mli>如果填写礼物名称，请确保所填写的名称与官方名称完全一致，否则将无法识别。</mli><mli>在脚本中打开控制台日志后，在控制台(Chrome可通过<code>ctrl + shift + i</code>，再点击<code>Console</code>打开控制台)中搜索<code>InitData: API.gift.gift_config</code>可以找到一个包含礼物名称和 id 的json。将data下的几项全部展开，再搜索礼物名即可找到 id 。</mli><mli>常用 id ：1: <code>辣条</code> 6: <code>亿圆</code> 30607: <code>小心心</code></mli></mul>",ANCHOR_TYPE_FOLLOWING:"搜寻已关注且开播的直播间的天选时刻。",SECONDS_NOTICE:"seconds是专门用来推送中奖信息的qqbot。使用前请先添加seconds（QQ: 2397433013）为好友，然后后点击【编辑QQ号】按钮输入你的QQ号。<mul><mli>检测到实物/天选中奖后会发一条包含中奖具体信息的QQ私聊消息提醒你中奖了。</mli></mul>",ServerTurbo_NOTICE:"<a href = 'https://sct.ftqq.com/' target = '_blank'>Server酱Turbo版（点我注册）</a>，是「<a href='http://sct.ftqq.com' target='_blank'>公众号版</a>」分离出来的一个版本，它为捐赠用户提供更多的推送渠道选择，除了方糖服务号（因为举报原因卡片不显示正文），它还包括了到微信官方提供的「<a href='https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login' target='_blank'>测试号</a>」、企业微信群、钉钉群、飞书群的推送。<mul><mli>检测到实物/天选中奖后会发一条包含中奖具体信息的微信推送提醒你中奖了。</mli></mul>",ANCHOR_TYPE_CUSTOM:"手动填写直播间列表，脚本会逐个检查这些直播间是否有天选时刻。<mul><mli>如果要填写多个直播间，每两个直播间号之间需用半角逗号<code>,</code>隔开。</mli></mul>",REMOVE_ELEMENT_anchor:"屏蔽天选时刻弹窗和礼物栏左侧的图标。<mh3>注意：</mh3><mul><mli>开启这一功能后会消耗相对较多的资源。</mli><mli>弹窗出现后（不可见）0-200ms的时间内浏览器窗口会无法滚动。</mli></mul><mh3>原理：</mh3><mul>通过修改css样式使弹窗不显示。但弹窗出现时浏览器窗口会被限制滚动，脚本检测到之后会将其关闭来解除滚动限制。</mul>",REMOVE_ELEMENT_anchor:"屏蔽天选时刻弹窗和礼物栏左侧的图标。<mh3>注意：</mh3><mul><mli>开启这一功能后会消耗相对较多的资源。</mli><mli>弹窗出现后（不可见）0-200ms的时间内浏览器窗口会无法滚动。</mli></mul><mh3>原理：</mh3><mul>通过修改css样式使弹窗不显示。但弹窗出现时浏览器窗口会被限制滚动，脚本检测到之后会将其关闭来解除滚动限制。</mul>",REMOVE_ELEMENT_pk:"屏蔽大乱斗弹窗和进度条。<mh3>注意：</mh3><mul><mli>开启这一功能后会消耗相对较多的资源。</mli><mli>弹窗出现后（不可见）0-200ms的时间内浏览器窗口会无法滚动。</mli></mul><mh3>原理：</mh3><mul>通过修改css样式使弹窗不显示。但弹窗出现时浏览器窗口会被限制滚动，脚本检测到之后会将其关闭来解除滚动限制。</mul>",banP2p:"禁止p2p上传（下载），减少上行带宽的占用。<mh3>原理：</mh3><mul>删除window下部分WebRTC方法，如<code>RTCPeerConnection</code>,<code>RTCDataChannel</code>。</mul><h3>说明：</h3><mul><mli>B站的<a href = 'https://baike.baidu.com/item/%E5%AF%B9%E7%AD%89%E7%BD%91%E7%BB%9C/5482934' target = '_blank'>P2P</a>上传速率大概在600KB/s左右，目的是为了让其他用户能更加流畅地观看直播。如果你的上行带宽较小建议禁用。</mli><mli>开启后控制台可能会出现大量报错如<code style='color:red;'>unsupported bilibili p2p</code>，<code style='color:red;'>Error: launch bili_p2p failed</code>，此类报错均为b站js的报错，无视即可。</mli></mul>",DANMU_MODIFY:"修改匹配到的当前直播间弹幕，改变弹幕的显示方式。<mh3>注意：</mh3><mul><mli>匹配弹幕和修改弹幕中的所有设置项都支持填写多个数据。若要填写多个，请用半角逗号<code>,</code>隔开。例：正则表达式 <code>/团【/,/P【/</code>。 </mli><mli>若填写了多个数据，脚本会把这些数据一一匹配，创建不同的规则。缺失的数据会自动向前对齐。<br>例：脚本设置为 匹配弹幕：<code>/团【/,/P【/</code> 发送者UID：<code>0</code> 弹幕池：<code>4,5</code> 颜色：<code>#FF0000,#9932CC</code> 大小：<code>1.2</code><br>此时有这么一条弹幕：<code>P【这个塔的伤害好高啊</code>，满足了第二条匹配规则<code>/P【/</code>。但由于该规则中缺少【大小】数据，则自动向前对齐，即大小被设为<code>1.2</code>。</mli></mli></mul><mh3>匹配弹幕</mh3>有【正则表达式】和【发送者UID】两种匹配方式，任意一项匹配成功则对弹幕进行修改。<mul><mli>正则表达式：即<a href='https://www.runoob.com/js/js-regexp.html' target='_blank'>JavaScript正则表达式</a>。格式为<code>/【正则】/【修饰符】（可选）</code>，如<code>/cards/i</code>。<br>如果填写的正则表达式能匹配弹幕内容则对弹幕进行修改。 </mli><mli>发送者UID：如果填写的UID中包含弹幕发送者的UID则对弹幕进行修改。</mli></mul><mh3>修改弹幕</mh3><mul><mli>弹幕池：修改弹幕所在的弹幕池，可以改变弹幕的显示位置。<br>弹幕池编号：<code>1</code>滚动，<code>4</code>底部，<code>5</code>顶部。如果填写其他数字则不会显示。</mli><mli>颜色：修改弹幕的颜色。<br>需填写所要修改颜色的<a href='http://tools.jb51.net/color/rgb_hex_color' target='_blank'>十六进制颜色码</a>，如<code style='color:#FF0000;'>#FF0000</code>。</mli><mli>大小：缩放弹幕到指定大小。<br>填<code>1.5</code>就是放大到原来的1.5倍，填<code>0.5</code>则是缩小到一半。</mli></mul>",blockLiveStream:'拦截直播流。开启本功能后将无法观看直播。<mh3>原理：</mh3><mul>劫持页面上的fetch，通过判断url是否含有<code>bilivideo</code>拦截所有直播流请求。</mul><mh3>注意：</mh3><mul><mli>开启本功能后控制台中会出现大量报错，如<code style=\'color:red;\'>id 38: player core NetworkError, {"code":11001,"errInfo":{"url":"https://d1--cn-gotcha204.bilivideo.com/live-bvc/284219/live_50333369_2753084_4000/index.m3u8?expires=1618677399&len=0&oi=1700331273&pt=web&qn=0&trid=9cc4c8772c0543999b03360f513dd1fa&sigparams=cdn,expires,len,oi,pt,qn,trid&cdn=cn-gotcha04&sign=bd05d848ebf2c7a815e0242ac1477187&p2p_type=1&src=9&sl=4&sk=59b4112a8c653bb","info":"TypeError: Cannot read property \'then\' of undefined"}}</code>，此类报错均为b站js的报错，无视即可。</mli></mul>',blockliveDataUpdate:"拦截直播观看数据上报。<mh3>原理：</mh3><mul>劫持页面上的fetch和XMLHttpRequest，拦截所有url中含有<code>data.bilibili.com/gol/postweb</code>的fetch请求和url中含有<code>data.bilibili.com/log</code>的xhr请求。</mul><mh3>注意：</mh3><mul><mli>开启本功能后控制台中会出现大量警告，如<code style='color:rgb(255 131 0);'>jQuexry.Deferred exception: Cannot read property 'status' of undefined TypeError: Cannot read property 'status' of undefined</code>，此类报错均为b站js的报错，无视即可。 </mli></mul><mh3>说明：</mh3><mul><mli>根据观察，目前上报的数据有：p2p种类，直播画质，直播流编码方式，直播流地址，直播流名称，直播流协议，窗口大小，观看时长，请求花费时长， 请求成功/失败数量，通过p2p下载的有效直播流大小，通过p2p上传的直播流大小，当前直播间地址，当前时间戳等等。 </mli></mul>",WEAR_MEDAL_BEFORE_DANMU:"手动发送弹幕前自动佩戴当前房间的粉丝勋章再发弹幕。<mul><mli>如果没有当前直播间的粉丝勋章则不进行任何操作。</mli><mli>【一直自动佩戴】比较适合需要同时在多个直播间发弹幕的情况。如果只想在某一个直播间发弹幕勾选【仅在首次发弹幕时自动佩戴】即可。</mli><mli>佩戴成功后会把弹幕框左侧的粉丝牌替换为当前直播间的粉丝牌。</mli></mul>",ANCHOR_UPLOAD_ROOMLIST:"上传你所收集到的直播间列表至BLTH-server。<mul><mli>如果可以的话请在【天选时刻获取数据方式】中勾选至少两项，因为单纯地把你从BLTH-server获取到的直播间号再上传回去意义不大。</mli><mli>apikey目前已经不公开发放了。</mli></mul>",ANCHOR_TYPE_SERVER:"<strong>BLTH-server</strong>是本脚本的服务端，用于推送天选时刻数据，提供脚本更新信息等。<mul><mli>apikey目前已经不公开发放了。</mli><mli>该功能的原理为ajax轮询，与awpush不同。awpush使用webSocket实时推送天选数据。</mli></mul>",ANCHOR_AWPUSH:"<strong>awpush</strong>是搭建在<strong>BLTH-server</strong>的一个天选时刻数据推送系统。可以实现天选数据的收集和分发。<mh3>说明</mh3><mul><mli>这个功能仍处于测试阶段，不是很稳定。</mli><mli>apikey目前已经不公开发放了。</mli><mli>启用这个功能后你的部分设置将会由服务端决定，如【天选时刻数据获取方式】，检查房间最大数量，请求间隔等。</mli><mli>该功能与【从BLTH-server获取天选时刻数据】不同。awpush使用webSocket实现实时推送，【从BLTH-server获取天选时刻数据】通过ajax轮询获取数据。</mli></mul><mh3>原理</mh3><mul>首先客户端连接awpush并进行身份验证。验证成功后服务端会下发一个任务，若失败则断开连接。 接着客户端执行任务并上报所检索到的天选数据。同时服务端会实时推送收到的天选数据。</mul>",ANCHOR_AUTO_BUY_LV1_MEDAL:"检测到有1级粉丝牌要求的天选后，如果没有该勋章，则自动用5B币充电购买再参加。",REMOVE_ELEMENT_followSideBar:"开启本功能后会导致【实验室】按钮点击后无法出现弹窗。",ANCHOR_IGNORE_AREA:"忽略指定分区，即不检索这些分区的天选。<mul><mli>请正确填写所要忽略分区的名称，如:<code>娱乐,网游,手游,电台,单机游戏,虚拟主播,生活,学习,大事件</code>。</mli><mli>如果要填写多个分区，每两项之间请用半角逗号<code>,</code>隔开。</mli></mul>",PLATE_ACTIVITY:"参与B站的转盘抽奖。<mul><mli>脚本会尝试增加转盘的抽奖次数并参与抽奖。</mli><mli>转盘抽奖的数据由<a href='https://gitee.com/java_cn' target='_blank'>荒年</a>提供。</mli></mul>",PLATE_ACTIVITY_GETTIMES_INTERVAL:"获取某一转盘抽奖次数的间隔。<mul><mli>间隔太短可能会导致获取抽奖次数失败。</mli><mli>请注意本设置项的单位是<strong>毫秒</strong>。</mli></mul>",PLATE_ACTIVITY_LOTTERY_INTERVAL:"参与某一转盘抽奖的间隔。<mul><mli>建议填写十秒左右的间隔时间，太低容易因为抽奖过快而失败。</mli><mli>请注意本设置项的单位是<strong>秒</strong>.</mli></mul>",RESERVE_ACTIVITY:"参与B站的直播预约抽奖。<mul><mli>转盘抽奖的数据由<a href='https://gitee.com/java_cn' target='_blank'>荒年</a>提供。</mli></mul>",RESERVE_ACTIVITY_INTERVAL:"参与直播预约抽奖的间隔。<mul><mli>间隔太短会因为抽奖过快而失败。</mli></mul>",RESERVE_ACTIVITY_IGNORE_BLACKLIST:"忽略奖品名中含特定关键字或匹配特定正则表达式的存疑抽奖。<mh3>注意：</mh3><mul><mli>若要填写多个，每一项之间用半角逗号<code>,</code>隔开。</mli><mli>可以填<a href='https://www.runoob.com/js/js-regexp.html' target='_blank'>JavaScript正则表达式</a>。格式为<code>/【正则】/【修饰符】（可选）</code>，如<code>/cards/i</code>。</mli><mli>关键字对大小写不敏感，而正则在没有添加修饰符<code>i</code>的情况下会区分大小写。</mli><mli>欢迎大家在Github Discussion的<a href='https://github.com/andywang425/BLTH/discussions/80' target='_blank'>信息收集贴</a>分享你的关键字。</mli></mul>",REMOVE_ELEMENT_pkBanner:"移除位于直播画面上方的大乱斗入口。",REMOVE_ELEMENT_rank:"移除位于直播画面上方的排行榜（？）入口。<mul><mli>这个位置有时候会变成某个活动的入口。</mli></mul>",GET_PRIVILEGE:"每个月领取一次大会员权益。<mul><mli>目前仅支持领取B币券和会员购优惠券。</mli></mul>"},openMainWindow=()=>{let settingTableoffset=$(".live-player-mounter").offset(),settingTableHeight=$(".live-player-mounter").height();mainIndex=myopen({type:1,title:!1,offset:[String(settingTableoffset.top-getScrollPosition().y)+"px",String(settingTableoffset.left-getScrollPosition().x)+"px"],closeBtn:0,shade:0,zIndex:1e3,fixed:!1,area:[,String(settingTableHeight)+"px"],resize:!1,content:html,success:()=>{let myDiv=$("#allsettings");layerUiMain=myDiv.parent().parent(),$("#giftCount .anchor .statNum").text(MY_API.GIFT_COUNT.ANCHOR_COUNT),$("#giftCount .material .statNum").text(MY_API.GIFT_COUNT.MATERIAL_COUNT),myDiv.find('div[data-toggle="MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY"] label.str').text(String(MY_API.CONFIG.QUESTIONABLE_LOTTERY.length)+"个"),myDiv.find('div[data-toggle="ANCHOR_IGNORE_BLACKLIST"] label.str').text(String(MY_API.CONFIG.ANCHOR_BLACKLIST_WORD.length)+"个"),myDiv.find('div[data-toggle="ANCHOR_IGNORE_ROOM"] label.str').text(String(MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST.length)+"个"),myDiv.find('div[data-toggle="RESERVE_ACTIVITY_IGNORE_BLACKLIST"] label.str').html(MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD.length+"个"),myDiv.find('div[data-toggle="RESERVE_ACTIVITY_CHECK_INTERVAL"] .num').val(MY_API.CONFIG.RESERVE_ACTIVITY_CHECK_INTERVAL.toString()),myDiv.find('div[data-toggle="RESERVE_ACTIVITY_INTERVAL"] .num').val(MY_API.CONFIG.RESERVE_ACTIVITY_INTERVAL.toString()),myDiv.find('div[data-toggle="PLATE_ACTIVITY_LOTTERY_INTERVAL"] .num').val(MY_API.CONFIG.PLATE_ACTIVITY_LOTTERY_INTERVAL.toString()),myDiv.find('div[data-toggle="PLATE_ACTIVITY_GETTIMES_INTERVAL"] .num').val(MY_API.CONFIG.PLATE_ACTIVITY_GETTIMES_INTERVAL.toString()),myDiv.find('div[data-toggle="PLATE_ACTIVITY_CHECK_INTERVAL"] .num').val(MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL.toString()),myDiv.find('div[data-toggle="DANMU_MODIFY_SIZE"] .str').val(MY_API.CONFIG.DANMU_MODIFY_SIZE.toString()),myDiv.find('div[data-toggle="DANMU_MODIFY_COLOR"] .str').val(MY_API.CONFIG.DANMU_MODIFY_COLOR.toString()),myDiv.find('div[data-toggle="DANMU_MODIFY_POOL"] .str').val(MY_API.CONFIG.DANMU_MODIFY_POOL.toString()),myDiv.find('div[data-toggle="DANMU_MODIFY_REGEX"] .str').val(MY_API.CONFIG.DANMU_MODIFY_REGEX.toString()),myDiv.find('div[data-toggle="DANMU_MODIFY_UID"] .str').val(MY_API.CONFIG.DANMU_MODIFY_UID.toString()),myDiv.find('div[data-toggle="ANCHOR_FANS_CHECK"] .num').val(MY_API.CONFIG.ANCHOR_FANS_LEAST.toString()),myDiv.find('div[data-toggle="ANCHOR_GOLD_JOIN_TIMES"] .num').val(MY_API.CONFIG.ANCHOR_GOLD_JOIN_TIMES.toString()),myDiv.find('div[data-toggle="GIFT_ALLOW_TYPE"] .str').val(MY_API.CONFIG.GIFT_ALLOW_TYPE.toString()),myDiv.find('div[data-toggle="COIN2SILVER"] .coin_number').val(parseInt(MY_API.CONFIG.COIN2SILVER_NUM).toString()),myDiv.find('div[data-toggle="LIGHT_MEDALS"] .num').val(MY_API.CONFIG.LIGHT_MEDALS.toString()),myDiv.find('div[data-toggle="MEDAL_DANMU_INTERVAL"] .num').val(parseFloat(MY_API.CONFIG.MEDAL_DANMU_INTERVAL).toString()),myDiv.find('div[data-toggle="ANCHOR_IGNORE_MONEY"] .num').val(parseFloat(MY_API.CONFIG.ANCHOR_IGNORE_MONEY).toString()),myDiv.find('div[data-toggle="ANCHOR_MAXLIVEROOM_SAVE"] .roomNum').val(parseInt(MY_API.CONFIG.ANCHOR_MAXLIVEROOM_SAVE).toString()),myDiv.find('div[data-toggle="ANCHOR_UPLOAD_DATA"] .num').val(MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL.toString()),myDiv.find('div[data-toggle="ANCHOR_TYPE_LIVEROOM"] .num').val(MY_API.CONFIG.ANCHOR_GETDATA_ROOM.toString()),myDiv.find('div[data-toggle="ANCHOR_INTERVAL"] .num').val(parseInt(MY_API.CONFIG.ANCHOR_INTERVAL).toString()),myDiv.find('div[data-toggle="ANCHOR_NEED_GOLD"] .num').val(parseInt(MY_API.CONFIG.ANCHOR_NEED_GOLD).toString()),myDiv.find('div[data-toggle="ANCHOR_MAXROOM"] .roomNum').val(parseInt(MY_API.CONFIG.ANCHOR_MAXROOM).toString()),myDiv.find('div[data-toggle="ANCHOR_CHECK_INTERVAL"] .num').val(parseFloat(MY_API.CONFIG.ANCHOR_CHECK_INTERVAL).toString()),myDiv.find('div[data-toggle="MATERIAL_LOTTERY_REM"] .num').val(parseInt(MY_API.CONFIG.MATERIAL_LOTTERY_REM).toString()),myDiv.find('div[data-toggle="MATERIAL_LOTTERY_CHECK_INTERVAL"] .num').val(parseInt(MY_API.CONFIG.MATERIAL_LOTTERY_CHECK_INTERVAL).toString()),myDiv.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Time').val(MY_API.CONFIG.DANMU_INTERVAL_TIME.toString()),myDiv.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Roomid').val(MY_API.CONFIG.DANMU_ROOMID.toString()),myDiv.find('div[data-toggle="AUTO_DANMU_SETTINGS"] .Danmu').val(MY_API.CONFIG.DANMU_CONTENT.toString()),myDiv.find('div[data-toggle="GIFT_INTERVAL"] .num').val(parseInt(MY_API.CONFIG.GIFT_INTERVAL).toString()),myDiv.find('div[data-toggle="SPARE_GIFT_ROOM"] .num').val(MY_API.CONFIG.SPARE_GIFT_ROOM.toString()),myDiv.find('div[data-toggle="TIME_RELOAD"] .delay-seconds').val(parseInt(MY_API.CONFIG.TIME_RELOAD_MINUTE).toString()),myDiv.find('div[data-toggle="COIN"] .coin_number').val(parseInt(MY_API.CONFIG.COIN_NUMBER).toString()),myDiv.find('div[data-toggle="COIN_UID"] .num').val(MY_API.CONFIG.COIN_UID.toString()),myDiv.find('div[data-toggle="TIME_AREA_DISABLE"] .startHour').val(parseInt(MY_API.CONFIG.TIME_AREA_START_H0UR).toString()),myDiv.find('div[data-toggle="TIME_AREA_DISABLE"] .endHour').val(parseInt(MY_API.CONFIG.TIME_AREA_END_H0UR).toString()),myDiv.find('div[data-toggle="TIME_AREA_DISABLE"] .startMinute').val(parseInt(MY_API.CONFIG.TIME_AREA_START_MINUTE).toString()),myDiv.find('div[data-toggle="TIME_AREA_DISABLE"] .endMinute').val(parseInt(MY_API.CONFIG.TIME_AREA_END_MINUTE).toString()),myDiv.find('div[data-toggle="AUTO_GIFT_ROOMID"] .num').val(MY_API.CONFIG.AUTO_GIFT_ROOMID.toString()),myDiv.find('div[data-toggle="GIFT_SEND_TIME"] .Hour').val(MY_API.CONFIG.GIFT_SEND_HOUR.toString()),myDiv.find('div[data-toggle="GIFT_SEND_TIME"] .Minute').val(MY_API.CONFIG.GIFT_SEND_MINUTE.toString()),myDiv.find('div[data-toggle="GIFT_LIMIT"] .num').val(parseInt(MY_API.CONFIG.GIFT_LIMIT).toString()),myDiv.find('div[data-toggle="BUY_MEDAL"] .num').val(Live_info.room_id);const inputConfig=$("#BLTH_config_file");inputConfig.on("change",importConfig),myDiv[0].onselectstart=function(){return!1},myDiv.find('button[data-action="save"]').click(()=>{saveAction(myDiv)}),myDiv.find('button[data-action="exportConfig"]').click(()=>{exportConfig(MY_API.CONFIG,SP_CONFIG,GM_getValue("AnchorFollowingList")||[]),mymsg("配置已导出",{time:2500})}),myDiv.find('button[data-action="importConfig"]').click(()=>{readConfigArray[1]=$.Deferred(),inputConfig.click(),readConfigArray[1].then(()=>{let json=readConfigArray[0];if(MYDEBUG("readConfigArray 文件读取结果：",readConfigArray[0]),MY_API.CONFIG=json.MY_API_CONFIG,MY_API.saveConfig(!1),SP_CONFIG=json.SP_CONFIG,saveSpConfig(),json.AnchorFollowingList){let followingList=GM_getValue("AnchorFollowingList")||[];GM_setValue("AnchorFollowingList",[...new Set([...followingList,...json.AnchorFollowingList])])}mymsg("配置导入成功，3秒后将自动刷新页面",{time:3e3,icon:1}),setTimeout(()=>{W.location.reload()},3e3)})}),myDiv.find('div[data-toggle="BUY_MEDAL"] [data-action="buy_medal"]').click((function(){const room_id=parseInt(myDiv.find('div[data-toggle="BUY_MEDAL"] .num').val());MY_API.buyFanMedal(room_id)})),myDiv.find('button[data-action="reset"]').click(()=>{const index=myconfirm('<div style = "text-align:center">是否重置所有设置及缓存为默认？</div>',{title:"重置所有为默认",btn:["是","否"]},(function(){layer.close(index),MY_API.setDefaults()}),(function(){mymsg("已取消",{time:2e3})}))}),myDiv.find('button[data-action="redoAllTasks"]').click(()=>{MY_API.ReDoAllTasks()}),myDiv.find('button[data-action="about"]').click(()=>{layerOpenAbout()}),myDiv.find('button[data-action="lightMedalNow"]').click(()=>{LIGHT_MEDAL_NOW=!0,MY_API.Gift.run()}),myDiv.find('button[data-action="test_PP"]').click(()=>{const data={token:MY_API.CONFIG.PP_token,title:`${GM_info.script.name} 推送测试`,content:'<div style="border: 1px solid rgb(223, 187, 0);color: rgb(145, 123, 0);background: none 0% 0% repeat scroll rgb(255, 215, 0, 30%);text-align: center;border-radius: 5%;padding: 15px 20px;"><h3>天选时刻中奖</h3><br /><h4>中奖账号id：测试</h4><br /><h4>房间号roomid=测试</h4><br /><h4>主播uid=测试</h4><br /><h4>抽奖id=测试</h4><br /><h4>获得奖品：</h4><br /><h3>测试</h3><br /><h4>此条为测试消息</h4></div>'};return PP_sendMsg(data).then(re=>(MYDEBUG("PP_sendMsg test response",re),re.body&&200==re.body.code?window.toast("[天选时刻] 推送加推送测试消息发送成功","success"):window.toast(`[天选时刻] 推送加推送测试消息发送失败 ${re.body.msg}`,"error"),$.Deferred().resolve()))}),myDiv.find('button[data-action="test_ServerTurbo"]').click(()=>ServerTurbo_sendMsg(MY_API.CONFIG.ServerTurbo_SendKey,`【${GM_info.script.name}】推送测试`,"## 实物抽奖中奖  \n  \n## 中奖账号id：测试  \n  \n## 测试  \n  \n## aid = 测试  \n  \n## 第测试轮  \n  \n## 获得奖品：  \n  \n# 测试  \n  \n## 此条为测试消息").then(re=>(MYDEBUG("ServerTurbo_sendMsg response",re),re.body&&0===re.body.code?window.toast("[实物抽奖] Server酱Turbo版推送测试消息发送成功","success"):window.toast(`[实物抽奖] Server酱Turbo版推送测试消息发送失败 ${re.response.status}`,"error"),$.Deferred().resolve()))),myDiv.find('button[data-action="test_seconds"]').click(()=>{if(secondsSendBtnClickable)return secondsSendBtnClickable=!1,setTimeout(()=>{secondsSendBtnClickable=!0},1e4),SECONDS_sendMsg(MY_API.CONFIG.SECONDS_QQ,`${GM_info.script.name} 推送测试\n此条为测试消息`).then(re=>(MYDEBUG("SECONDS_sendMsg test response",re),re.body&&0===re.body.code?window.toast("[天选时刻] seconds推送测试消息发送成功","success"):window.toast(`[天选时刻] seconds推送测试消息发送失败 ${re.response.status}`,"error"),$.Deferred().resolve()));window.toast("[seconds] 推送测试消息发送过于频繁，请稍后（最多10秒）再试","warning")}),myDiv.find('button[data-action="edit_ANCHOR_SERVER_APIKEY"]').click(()=>{myprompt({formType:0,value:String(MY_API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]||""),title:"请输入 BLTH-server apikey",btn:["保存","取消"]},(function(value,index){MY_API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]=value,MY_API.saveConfig(!1),mymsg("BLTH-server apikey 保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_UPLOAD_MSG"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.ANCHOR_UPLOAD_MSG_CONTENT),title:"请输入上传天选信息时的附加信息",btn:["保存","留空","取消"],btn2:function(){MY_API.CONFIG.ANCHOR_UPLOAD_MSG_CONTENT="",MY_API.saveConfig(!1),mymsg("附加信息已被设为空字符串",{time:2500,icon:1})}},(function(value,index){MY_API.CONFIG.ANCHOR_UPLOAD_MSG_CONTENT=value,MY_API.saveConfig(!1),mymsg("附加信息保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_GIFT_SEND_ROOM"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.GIFT_SEND_ROOM),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入自动送礼房间列表",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.GIFT_SEND_ROOM=[...valArray],MY_API.saveConfig(!1),mymsg("自动送礼房间列表保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_IGNORE_ROOMLIST"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入天选时刻忽略直播间",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST=[...valArray],MY_API.saveConfig(!1),mymsg("天选时刻忽略直播间保存成功",{time:2500,icon:1}),myDiv.find('div[data-toggle="ANCHOR_IGNORE_ROOM"] label.str').html(MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST.length+"个"),layer.close(index)}))}),myDiv.find('button[data-action="edit_lightMedalList"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.MEDAL_DANMU_ROOM),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入粉丝勋章打卡弹幕房间列表",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.MEDAL_DANMU_ROOM=[...valArray],MY_API.saveConfig(!1),mymsg("粉丝勋章打卡弹幕房间列表保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_IGNORE_AREA"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.ANCHOR_IGNORE_AREA_LIST),title:"请输入所要忽略分区的名称",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.ANCHOR_IGNORE_AREA_LIST=[...valArray],MY_API.saveConfig(!1),mymsg("天选时刻忽略分区保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_DANMU_CONTENT"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.ANCHOR_DANMU_CONTENT),title:"请输入天选时刻中奖后弹幕",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.ANCHOR_DANMU_CONTENT=[...valArray],MY_API.saveConfig(!1),mymsg("天选时刻中奖后弹幕保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_medalDanmu"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.MEDAL_DANMU_CONTENT),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入粉丝勋章打卡弹幕",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.MEDAL_DANMU_CONTENT=[...valArray],MY_API.saveConfig(!1),mymsg("粉丝勋章打卡弹幕保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_QUESTIONABLE_LOTTERY"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.QUESTIONABLE_LOTTERY),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入实物抽奖忽略关键字",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)valArray[i]||valArray.splice(i,1);MY_API.CONFIG.QUESTIONABLE_LOTTERY=[...valArray],MY_API.saveConfig(!1),mymsg("实物抽奖忽略关键字保存成功",{time:2500,icon:1}),myDiv.find('div[data-toggle="MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY"] label.str').html(MY_API.CONFIG.QUESTIONABLE_LOTTERY.length+"个"),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_BLACKLIST_WORD"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.ANCHOR_BLACKLIST_WORD),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入天选时刻忽略关键字",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)""===valArray[i]&&valArray.splice(i,1);MY_API.CONFIG.ANCHOR_BLACKLIST_WORD=[...valArray],MY_API.saveConfig(!1),mymsg("天选时刻忽略关键字保存成功",{time:2500,icon:1}),myDiv.find('div[data-toggle="ANCHOR_IGNORE_BLACKLIST"] label.str').html(MY_API.CONFIG.ANCHOR_BLACKLIST_WORD.length+"个"),layer.close(index)}))}),myDiv.find('button[data-action="edit_RESERVE_ACTIVITY_BLACKLIST_WORD"]').click(()=>{myprompt({formType:2,value:String(MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD),maxlength:Number.MAX_SAFE_INTEGER,title:"请输入预约抽奖忽略关键字",btn:["保存","取消"]},(function(value,index){let valArray=value.split(",");valArray=[...new Set(valArray)];for(let i=0;i<valArray.length;i++)""===valArray[i]&&valArray.splice(i,1);MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD=[...valArray],MY_API.saveConfig(!1),mymsg("预约抽奖忽略关键字保存成功",{time:2500,icon:1}),myDiv.find('div[data-toggle="RESERVE_ACTIVITY_IGNORE_BLACKLIST"] label.str').html(MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD.length+"个"),layer.close(index)}))}),myDiv.find('button[data-action="addCloud_MATERIAL_BLACKLIST_WORD"]').click(()=>{const cloudWords=noticeJson.material_blacklist_word||[],localWords=[...MY_API.CONFIG.QUESTIONABLE_LOTTERY];let newWords=[];for(const i of cloudWords)-1===findVal(localWords,i)&&newWords.push(i);const wordsLength=newWords.length;wordsLength>0?myconfirm(`<div style = "text-align:center">将要被添加的关键字有</div><div style = "font-weight:bold">${String(newWords)}<code>（共${wordsLength}个）</code></div><div style = "text-align:center">是否添加这些关键字到本地关键字？</div>`,{title:"添加实物抽奖云端关键字",btn:["添加","取消"]},(function(index){MY_API.CONFIG.QUESTIONABLE_LOTTERY=[...new Set([...localWords,...newWords])],MY_API.saveConfig(!1),mymsg("已添加实物抽奖云端关键字",{time:2500,icon:1}),myDiv.find('div[data-toggle="MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY"] label.str').html(MY_API.CONFIG.QUESTIONABLE_LOTTERY.length+"个"),layer.close(index)})):mymsg("本地关键字已包含所有云端关键字",{time:2500})}),myDiv.find('button[data-action="addCloud_ANCHOR_BLACKLIST_WORD"]').click(()=>{const cloudWords=noticeJson.anchor_blacklist_word||[],localWords=[...MY_API.CONFIG.ANCHOR_BLACKLIST_WORD];let newWords=[];for(const i of cloudWords)-1===findVal(localWords,i)&&newWords.push(i);const wordsLength=newWords.length;wordsLength>0?myconfirm(`<div style = "text-align:center">将要被添加的关键字有</div><div style = "font-weight:bold">${String(newWords)}<code>（共${wordsLength}个）</code></div><div style = "text-align:center">是否添加这些关键字到本地关键字？</div>`,{title:"添加天选时刻云端关键字",btn:["添加","取消"]},(function(index){MY_API.CONFIG.ANCHOR_BLACKLIST_WORD=[...new Set([...localWords,...newWords])],MY_API.saveConfig(!1),mymsg("已添加天选时刻云端关键字",{time:2500,icon:1}),myDiv.find('div[data-toggle="ANCHOR_IGNORE_BLACKLIST"] label.str').html(MY_API.CONFIG.ANCHOR_BLACKLIST_WORD.length+"个"),layer.close(index)})):mymsg("本地关键字已包含所有云端关键字",{time:2500})}),myDiv.find('button[data-action="addCloud_RESERVE_ACTIVITY_BLACKLIST_WORD"]').click(()=>{const cloudWords=noticeJson.reserve_blacklist_word||[],localWords=[...MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD];let newWords=[];for(const i of cloudWords)-1===findVal(localWords,i)&&newWords.push(i);const wordsLength=newWords.length;wordsLength>0?myconfirm(`<div style = "text-align:center">将要被添加的关键字有</div><div style = "font-weight:bold">${String(newWords)}<code>（共${wordsLength}个）</code></div><div style = "text-align:center">是否添加这些关键字到本地关键字？</div>`,{title:"添加预约抽奖云端关键字",btn:["添加","取消"]},(function(index){MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD=[...new Set([...localWords,...newWords])],MY_API.saveConfig(!1),mymsg("已添加预约抽奖云端关键字",{time:2500,icon:1}),myDiv.find('div[data-toggle="RESERVE_ACTIVITY_IGNORE_BLACKLIST"] label.str').html(MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD.length+"个"),layer.close(index)})):mymsg("本地关键字已包含所有云端关键字",{time:2500})}),myDiv.find('button[data-action="addCloud_ANCHOR_IGNORE_ROOMLIST"]').click(()=>{const cloudRooms=noticeJson.anchor_ignore_roomlist||[],localRooms=[...MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST];let newRooms=[];for(const i of cloudRooms)-1===findVal(localRooms,i)&&newRooms.push(i);const roomsLength=newRooms.length;roomsLength>0?myconfirm(`<div style = "text-align:center">将要被添加的直播间有</div><div style = "font-weight:bold">${String(newRooms)}<code>（共${roomsLength}个）</code></div><div style = "text-align:center">是否添加这些直播间到本地忽略直播间？</div>`,{title:"添加天选时刻云端忽略直播间",btn:["添加","取消"]},(function(index){MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST=[...new Set([...localRooms,...newRooms])],MY_API.saveConfig(!1),mymsg("已添加天选时刻云端忽略直播间",{time:2500,icon:1}),myDiv.find('div[data-toggle="ANCHOR_IGNORE_ROOM"] label.str').html(MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST.length+"个"),layer.close(index)})):mymsg("本地忽略直播间已包含所有云端忽略直播间",{time:2500})}),myDiv.find('button[data-action="edit_ANCHOR_LETTER_CONTENT"]').click(()=>{myprompt({formType:2,value:MY_API.CONFIG.ANCHOR_LETTER_CONTENT,title:"请输入天选时刻中奖后发送私信内容",btn:["保存","取消"]},(function(value,index){let val=value;val||(val="UP我中天选了，怎么领奖"),MY_API.CONFIG.ANCHOR_LETTER_CONTENT=val,MY_API.saveConfig(!1),mymsg("天选时刻私信内容保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="mainSiteTasks"]').click(()=>{mainSiteTasksBtnClickable&&(mainSiteTasksBtnClickable=!1,setTimeout(()=>mainSiteTasksBtnClickable=!0,2e3),MY_API.DailyReward.run(!0))}),myDiv.find('button[data-action="edit_PP_SCKEY"]').click(()=>{myprompt({formType:0,value:MY_API.CONFIG.PP_token,title:"请输入推送加token",btn:["保存","取消"]},(function(value,index){MY_API.CONFIG.PP_token=value,MY_API.saveConfig(!1),mymsg("推送加token保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_seconds_qq"]').click(()=>{myprompt({formType:0,value:MY_API.CONFIG.SECONDS_QQ,title:"请输入您用于接受推送的QQ号",btn:["保存","取消"]},(function(value,index){MY_API.CONFIG.SECONDS_QQ=value,MY_API.saveConfig(!1),mymsg("qq号保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ServerTurbo_SendKey"]').click(()=>{myprompt({formType:0,value:MY_API.CONFIG.ServerTurbo_SendKey,title:"请输入Server酱·Turbo版SendKey",btn:["保存","取消"]},(function(value,index){MY_API.CONFIG.ServerTurbo_SendKey=value,MY_API.saveConfig(!1),mymsg("Server酱·Turbo版SendKey保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="edit_ANCHOR_CUSTOM_ROOMLIST"]').click(()=>{myprompt({formType:2,value:MY_API.CONFIG.ANCHOR_CUSTOM_ROOMLIST,maxlength:Number.MAX_SAFE_INTEGER,title:"天选时刻自定义直播间列表",btn:["保存","取消"]},(function(value,index){let val=value;if(val){val=val.split(","),val=[...new Set(val)];for(let i=0;i<val.length;i++)val[i]||val.splice(i,1)}else val="";MY_API.CONFIG.ANCHOR_CUSTOM_ROOMLIST=val,MY_API.saveConfig(!1),mymsg("天选时刻自定义直播间列表保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="editWhiteList"]').click(()=>{const list=GM_getValue("AnchorFollowingList")||"";myprompt({formType:2,maxlength:Number.MAX_SAFE_INTEGER,value:String(list),title:"天选时刻UID白名单",btn:["保存","取消"]},(function(value,index){let val=value;if(val){val=val.split(","),val=[...new Set(val)];for(let i=0;i<val.length;i++)val[i]||val.splice(i,1)}else val="";GM_setValue("AnchorFollowingList",val),mymsg("天选时刻UID白名单保存成功",{time:2500,icon:1}),layer.close(index)}))}),myDiv.find('button[data-action="saveFollowingList"]').click(()=>{if(getFollowBtnClickable)return getFollowBtnClickable=!1,window.toast("[ 保存当前关注列表为白名单 ] 开始获取关注列表"),MY_API.AnchorLottery.get_attention_list(Live_info.uid)}),myDiv.find('button[data-action="removeAnchorPrizeInTag"]').click(()=>{unFollowBtnClickable&&myconfirm(`是否取关在【${anchorPrizeTagName}】分组的UP主？<mul><mli>注：不建议取关该分组内UP。</mli></mul>`,{title:"取关不在分组内的UP主",btn:["是","否"]},(function(){return unFollowBtnClickable=!1,mymsg("开始取关",{time:2e3}),MY_API.AnchorLottery.getTag(anchorPrizeTagName,!0).then(()=>MY_API.AnchorLottery.delAnchorFollowing(3))}),(function(){mymsg("已取消",{time:2e3})}))}),myDiv.find('button[data-action="removeAnchorFollowingInTag"]').click(()=>{unFollowBtnClickable&&myconfirm(`是否取关在【${anchorFollowTagName}】分组的UP主？`,{title:"取关不在分组内的UP主",btn:["是","否"]},(function(){return unFollowBtnClickable=!1,mymsg("开始取关",{time:2e3}),MY_API.AnchorLottery.getTag(anchorFollowTagName,!0).then(()=>MY_API.AnchorLottery.delAnchorFollowing(2))}),(function(){mymsg("已取消",{time:2e3})}))}),myDiv.find('button[data-action="removeAnchorFollowing"]').click(()=>{unFollowBtnClickable&&myconfirm("是否取关不在白名单内的UP主？",{title:"取关不在白名单内的UP主",btn:["是","否"]},(function(){return unFollowBtnClickable=!1,mymsg("开始取关",{time:2e3}),MY_API.AnchorLottery.delAnchorFollowing(1)}),(function(){mymsg("已取消",{time:2e3})}))}),myDiv.find('button[data-action="sendGiftNow"]').click(()=>{MY_API.CONFIG.AUTO_GIFT?(SEND_GIFT_NOW=!0,MY_API.Gift.run()):window.toast("[ 立刻开始送礼 ] 请先勾选【自动送礼】再点击此按钮","info")}),myDiv.find('button[data-action="sendDanmuNow"]').click(()=>{MY_API.CONFIG.AUTO_DANMU?(SEND_DANMU_NOW=!0,MY_API.AUTO_DANMU.run()):window.toast("[ 立刻发送弹幕 ] 请先勾选【自动发弹幕】再点击此按钮","info")}),myDiv.find('button[data-action="clearDanmuCache"]').click(()=>{MY_API.CACHE.AUTO_SEND_DANMU_TS=[],MY_API.saveCache()&&MY_API.chatLog("清除弹幕缓存成功","success")});for(const i of checkList){const input=myDiv.find(`div[data-toggle="${i}"] input:checkbox`);MY_API.CONFIG[i]&&input.attr("checked",""),input.change((function(){MY_API.CONFIG[i]=$(this).prop("checked"),MY_API.saveConfig()}))}const specialSetting=[{jqPath1:'div[data-toggle="INVISIBLE_ENTER"] input:checkbox',gmItem:"invisibleEnter",toastMsg:["[隐身入场] 配置已保存","info"]},{jqPath1:'div[data-toggle="NOSLEEP"] input:checkbox',gmItem:"nosleep",toastMsg:["[屏蔽挂机检测] 配置已保存","info"]},{jqPath1:'div[data-toggle="banP2p"] input:checkbox',gmItem:"banP2p",toastMsg:["[禁止p2p上传] 配置已保存","info"]},{jqPath1:'div[data-toggle="debugSwitch"] input:checkbox',gmItem:"debugSwitch",toastMsg:["[控制台日志] 配置已保存","info"],changeFn:function(self){SP_CONFIG.debugSwitch=$(self).prop("checked")}},{jqPath1:'div[data-toggle="windowToast"] input:checkbox',gmItem:"windowToast",changeFn:function(self){SP_CONFIG.windowToast=$(self).prop("checked"),SP_CONFIG.windowToast?$(".link-toast").show():$(".link-toast").hide()}},{jqPath1:'div[data-toggle="DANMU_MODIFY"] input:checkbox',gmItem:"DANMU_MODIFY",toastMsg:["[弹幕修改] 配置已保存","info"]},{jqPath1:'div[data-toggle="blockLiveStream"] input:checkbox',gmItem:"blockLiveStream",toastMsg:["[拦截直播流] 配置已保存","info"]},{jqPath1:'div[data-toggle="blockliveDataUpdate"] input:checkbox',gmItem:"blockliveDataUpdate",toastMsg:["[拦截直播观看数据上报] 配置已保存","info"]},{jqPath1:'div[data-toggle="WEAR_MEDAL_BEFORE_DANMU"] input:checkbox',gmItem:"wear_medal_before_danmu",toastMsg:["[自动佩戴勋章] 配置已保存","info"]},{jqPath1:'div[data-toggle="ONLY_FIRST"] input:radio',jqPath2:'div[data-toggle="ALWAYS"] input:radio',changeFn:function(self,gmItem){$(self).is(":checked")&&(SP_CONFIG[gmItem]=$(self).parent().attr("data-toggle"))},name:"WEAR_MEDAL_BEFORE_DANMU",gmItem:"wear_medal_type",toastMsg:["[自动佩戴勋章] 配置已保存","info"]}];for(const i of specialSetting){let input,isradio=!!i.hasOwnProperty("name");for(let count=1;;count++){const jqPathNum="jqPath"+String(count);if(!i.hasOwnProperty(jqPathNum))break;input=myDiv.find(i[jqPathNum]);const setting=SP_CONFIG[i.gmItem];isradio?setting===i[jqPathNum].match(/data\-toggle="(.*)"/)[1]&&$(i[jqPathNum]).attr("checked",""):setting&&input.attr("checked","")}isradio&&(input=$(`input:radio[name= ${i.name} ]`)),input.change((function(){let self=this;i.hasOwnProperty("changeFn")&&(isradio?i.changeFn(this,i.gmItem):i.changeFn(this)),isradio||(SP_CONFIG[i.gmItem]=$(this).prop("checked")),saveSpConfig(),i.hasOwnProperty("toastMsg")&&window.toast(i.toastMsg[0],i.toastMsg[1])}))}$("input:text").bind("keydown",(function(event){13==event.keyCode&&saveAction(myDiv)}));for(const i of radioList){for(let count=1;;count++){const toggleName="toggle"+String(count);if(!i.hasOwnProperty(toggleName))break;MY_API.CONFIG[i.name]===i[toggleName]&&$(`div[data-toggle= ${i[toggleName]}] input:radio`).attr("checked","")}$(`input:radio[name= ${i.name} ]`).change((function(){for(let count=1;;count++){const toggleName="toggle"+String(count);if(!i.hasOwnProperty(toggleName))break;if($(`div[data-toggle= ${i[toggleName]} ] input:radio`).is(":checked")){MY_API.CONFIG[i.name]=i[toggleName],MY_API.saveConfig();break}}}))}$(".helpText").click((function(){const id=$(this).attr("helpdata");void 0!==id&&helpText.hasOwnProperty(id)&&myopen({title:`帮助信息 ${id}`,anim:5,area:[String(.382*$(window).width())+"px",String(.618*$(window).height())+"px"],content:helpText[id]})})),hideBtnClickable=!0},end:()=>{SP_CONFIG.mainDisplay="hide",saveSpConfig(),document.getElementById("hiderbtn").innerHTML="显示控制面板"}})};openMainWindow();let JQshow=!1;"hide"===SP_CONFIG.mainDisplay&&(layerUiMain.hide(),JQshow=!0),SP_CONFIG.darkMode&&layer.style(mainIndex,{"background-color":"#1c1c1c"});let followCntr=$(".follow-ctnr"),bodyMutationObserver,webHtmlMutationObserver;function btnClickFunc(){hideBtnClickable&&(hideBtnClickable=!1,setTimeout((function(){hideBtnClickable=!0}),310),"show"===SP_CONFIG.mainDisplay?(SP_CONFIG.mainDisplay="hide",saveSpConfig(!1),animChange(layerUiMain,!0),document.getElementById("hiderbtn").innerHTML="显示控制面板",setTimeout(()=>layer.style(mainIndex,{zIndex:0}),300)):(SP_CONFIG.mainDisplay="show",layer.style(mainIndex,{zIndex:1e3}),saveSpConfig(!1),JQshow?(layerUiMain.show(),JQshow=!1):animChange(layerUiMain,!1),document.getElementById("hiderbtn").innerHTML="隐藏控制面板"))}function bodyPropertyChange(){let attr=body.attr("class"),tabOffSet=tabContent.offset(),top=tabOffSet.top,left=tabOffSet.left;/[player\-full\-win]|[fullscreen\-fix]/.test(attr)&&"show"===SP_CONFIG.mainDisplay&&(SP_CONFIG.mainDisplay="hide",saveSpConfig(!1),animChange(layerUiMain,!0),document.getElementById("hiderbtn").innerHTML="显示控制面板",setTimeout(()=>layer.style(mainIndex,{zIndex:0}),300)),layer.style(logIndex,{top:String(top)+"px",left:String(left)+"px"})}function webHtmlPropertyChange(){let attr;"dark"===webHtml.attr("lab-style")?(SP_CONFIG.darkMode=!0,layer.style(logIndex,{"background-color":"#1c1c1c"}),layer.style(mainIndex,{"background-color":"#1c1c1c"})):(SP_CONFIG.darkMode=!1,layer.style(logIndex,{"background-color":"#f2f3f5"}),layer.style(mainIndex,{"background-color":"white"}))}followCntr[0].insertBefore(btn[0],followCntr.children()[0]),btn.click(btnClickFunc),hotkeys("alt+b",btnClickFunc),new MutationObserver(bodyPropertyChange).observe(body[0],{attributes:!0}),new MutationObserver(webHtmlPropertyChange).observe(webHtml[0],{attributes:!0}),MY_API.CACHE.DailyReward_TS||(mytips("点我隐藏/显示控制面板","#hiderbtn",{tips:1}),setTimeout(()=>mytips("点我查看日志","#logDivText"),5e3))},chatLog:function(text,_type="info"){let div=$("<div class='chatLogDiv'>"),msg=$("<div class='chatLogMsg'>"),myDate=new Date;switch(msg.html(text),div.text(myDate.toLocaleString()),div.append(msg),_type){case"warning":div.addClass("chatLogWarning");break;case"success":div.addClass("chatLogSuccess");break;case"error":div.addClass("chatLogError");break;case"prize":div.addClass("chatLogWinPrize");break;default:div.addClass("chatLogDefault")}JQmenuWindow.append(div);let time=div.find('span[id="time"] .num'),clickableText=div.find('div[class="clickableText"]');const num=Number(time.text()),id=clickableText.attr("id");if(void 0!==num){let remainTime=num,timer=setInterval(()=>{remainTime--,remainTime<=0?(div.find('span[id="time"]').html("已开奖"),void 0!==id&&0===id.indexOf(`${NAME}_ANCHOR`)&&clickableText.remove(),clearInterval(timer)):time.text(remainTime)},1e3)}layerLogWindow_ScrollY>=layerLogWindow_ScrollHeight&&layerLogWindow.scrollTop(layerLogWindow.prop("scrollHeight"))},GroupSign:{fullLevalMedalUidList:[],getGroups:()=>BAPI.Group.my_groups().then(response=>(MYDEBUG("GroupSign.getGroups: API.Group.my_groups",response),0===response.code?$.Deferred().resolve(response.data.list):(window.toast(`[自动应援团签到]' ${response.msg}`,"error"),$.Deferred().reject())),()=>(window.toast("[自动应援团签到]获取应援团列表失败，请检查网络","error"),delayCall(()=>MY_API.GroupSign.getGroups()))),signInList:(list,i=0)=>{if(i>=list.length)return $.Deferred().resolve();const obj=list[i];return obj.owner_uid==Live_info.uid||MY_API.GroupSign.fullLevalMedalUidList==Live_info.uid?MY_API.GroupSign.signInList(list,i+1):BAPI.Group.sign_in(obj.group_id,obj.owner_uid).then(response=>{MYDEBUG("GroupSign.signInList: API.Group.sign_in",response);let p=$.Deferred();return 0!==response.code?(window.toast(`[自动应援团签到] 应援团(group_id=${obj.group_id},owner_uid=${obj.owner_uid})签到失败 ${response.msg}`,"caution"),p.reject(),delayCall(()=>MY_API.GroupSign.signInList(list,i))):(response.data.add_num>0?(window.toast(`[自动应援团签到]应援团(group_id=${obj.group_id},owner_uid=${obj.owner_uid})签到成功，当前勋章亲密度+${response.data.add_num}`,"success"),p.resolve()):0==response.data.add_num?(window.toast(`[自动应援团签到]应援团(group_id=${obj.group_id},owner_uid=${obj.owner_uid})已签到`,"caution"),p.resolve()):p.reject(),$.when(MY_API.GroupSign.signInList(list,i+1),p))})},run:()=>{try{return!MY_API.CONFIG.AUTO_GROUP_SIGN||otherScriptsRunning?$.Deferred().resolve():checkNewDay(MY_API.CACHE.AUTO_GROUP_SIGH_TS)?getCHSdate().getHours()<8&&0!==MY_API.CACHE.AUTO_GROUP_SIGH_TS?(runToday(()=>MY_API.GroupSign.run(),8,1,"应援团签到"),$.Deferred().resolve()):MY_API.GroupSign.getGroups().then(list=>{for(const i of medal_info.medal_list)20!==i.medal_level&&40!==i.medal_level||MY_API.GroupSign.fullLevalMedalUidList.push(i.target_id);return MY_API.GroupSign.signInList(list).then(()=>(MY_API.CACHE.AUTO_GROUP_SIGH_TS=ts_ms(),MY_API.saveCache(),runTomorrow(()=>MY_API.GroupSign.run(),8,1,"应援团签到"),$.Deferred().resolve()),()=>delayCall(()=>MY_API.GroupSign.run()))},()=>delayCall(()=>MY_API.GroupSign.run())):(runTomorrow(()=>MY_API.GroupSign.run(),8,1,"应援团签到"),$.Deferred().resolve())}catch(err){return window.toast("[自动应援团签到]运行时出现异常，已停止","error"),MYERROR("自动应援团签到出错",err),$.Deferred().reject()}}},DailyReward:{coin_exp:0,login:()=>BAPI.DailyReward.login().then(response=>{if(MYDEBUG("DailyReward.login: API.DailyReward.login"),0!==response.code)return window.toast(`[自动每日奖励][每日登录]失败 ${response.message}`,"error"),delayCall(()=>MY_API.DailyReward.login());window.toast("[自动每日奖励][每日登录]完成","success")}),watch:(aid,cid)=>MY_API.CONFIG.WATCH?BAPI.DailyReward.watch(aid,cid,Live_info.uid,ts_s()).then(response=>{if(MYDEBUG("DailyReward.watch: API.DailyReward.watch",response),0!==response.code)return window.toast(`[自动每日奖励][每日观看]失败 aid=${aid}, cid=${cid} ${response.msg}`,"error"),delayCall(()=>MY_API.DailyReward.watch(aid,cid));window.toast(`[自动每日奖励][每日观看]完成(av=${aid})`,"success")}):$.Deferred().resolve(),coin:(cards,n,i=0,one=!1)=>{if(!MY_API.CONFIG.COIN)return $.Deferred().resolve();if(MY_API.DailyReward.coin_exp>=10*MY_API.CONFIG.COIN_NUMBER)return window.toast("[自动每日奖励][每日投币]今日投币已完成","info"),$.Deferred().resolve();if(i>=cards.length)return window.toast("[自动每日奖励][每日投币]动态里可投币的视频不足","caution"),$.Deferred().resolve();const obj=JSON.parse(cards[i].card);let num=Math.min(2,n);return one&&(num=1),BAPI.x.getCoinInfo("","jsonp",obj.aid,ts_ms()).then(re=>0===re.code?2===re.data.multiply?(MYDEBUG("API.x.getCoinInfo",`已投币两个 aid = ${obj.aid}`),MY_API.DailyReward.coin(vlist,n,i+1)):(1===re.data.multiply&&(num=1),BAPI.DailyReward.coin(obj.aid,num).then(response=>(MYDEBUG("DailyReward.coin: API.DailyReward.coin",response),0===response.code?(MY_API.DailyReward.coin_exp+=10*num,window.toast(`[自动每日奖励][每日投币]投币成功(av=${obj.aid},num=${num})`,"success"),MY_API.DailyReward.coin(cards,n-num,i+1)):-110===response.code?(window.toast("[自动每日奖励][每日投币]未绑定手机，已停止","error"),$.Deferred().reject()):34003===response.code?one?MY_API.DailyReward.coin(cards,n,i+1):MY_API.DailyReward.coin(cards,n,i,!0):34005===response.code?MY_API.DailyReward.coin(cards,n,i+1):-104===response.code?(window.toast("[自动每日奖励][每日投币]剩余硬币不足，已停止","warning"),$.Deferred().reject()):(window.toast(`[自动每日奖励][每日投币]出错 ${response.msg}`,"error"),delayCall(()=>MY_API.DailyReward.coin(cards,n,i)))))):(window.toast(`[自动每日奖励][每日投币]获取视频(aid=${obj.aid})投币状态出错 ${response.msg}`,"error"),delayCall(()=>MY_API.DailyReward.coin(cards,n,i))))},coin_uid:(vlist,n,pagenum,uidIndex,i=0,one=!1)=>{if(!MY_API.CONFIG.COIN)return $.Deferred().resolve();if(MY_API.DailyReward.coin_exp>=10*MY_API.CONFIG.COIN_NUMBER)return window.toast("[自动每日奖励][每日投币]今日投币已完成","info"),$.Deferred().resolve();if(i>=vlist.length)return MY_API.DailyReward.UserSpace(uidIndex,30,0,pagenum+1,"","pubdate","jsonp");const obj=vlist[i],uid=MY_API.CONFIG.COIN_UID[uidIndex];if(obj.hasOwnProperty("is_union_video")&&1===obj.is_union_video&&obj.mid!=uid)return MYDEBUG("DailyReward.coin_uid",`联合投稿且UP不是指定UID用户 aid = ${obj.aid}`),MY_API.DailyReward.coin_uid(vlist,n,pagenum,uidIndex,i+1);let num=Math.min(2,n);return one&&(num=1),BAPI.x.getCoinInfo("","jsonp",obj.aid,ts_ms()).then(re=>0===re.code?2===re.data.multiply?(MYDEBUG("API.x.getCoinInfo",`已投币两个 aid = ${obj.aid}`),MY_API.DailyReward.coin_uid(vlist,n,pagenum,uidIndex,i+1)):(1===re.data.multiply&&(num=1),BAPI.DailyReward.coin(obj.aid,num).then(response=>(MYDEBUG("DailyReward.coin_uid: API.DailyReward.coin_uid",response),0===response.code?(MY_API.DailyReward.coin_exp+=10*num,window.toast(`[自动每日奖励][每日投币]投币成功(av=${obj.aid},num=${num})`,"success"),MY_API.DailyReward.coin_uid(vlist,n-num,pagenum,uidIndex,i+1)):-110===response.code?(window.toast("[自动每日奖励][每日投币]未绑定手机，已停止","error"),$.Deferred().reject()):34003===response.code?one?MY_API.DailyReward.coin_uid(vlist,n,pagenum,uidIndex,i+1):MY_API.DailyReward.coin_uid(vlist,n,i,pagenum,uidIndex,!0):34005===response.code?MY_API.DailyReward.coin_uid(vlist,n,pagenum,uidIndex,i+1):-104===response.code?(window.toast("[自动每日奖励][每日投币]剩余硬币不足，已停止","warning"),$.Deferred().reject()):(window.toast(`[自动每日奖励][每日投币] 出错 ${response.msg}`,"caution"),delayCall(()=>MY_API.DailyReward.coin_uid(vlist,n,pagenum,uidIndex,i)))))):(window.toast(`[自动每日奖励][每日投币]获取视频(aid=${obj.aid})投币状态出错 ${response.msg}`,"error"),delayCall(()=>MY_API.DailyReward.coin(cards,n,i))))},share:aid=>MY_API.CONFIG.SHARE?BAPI.DailyReward.share(aid).then(response=>{if(MYDEBUG("DailyReward.share: API.DailyReward.share",response),0===response.code)window.toast(`[自动每日奖励][每日分享]分享成功(av=${aid})`,"success");else{if(71e3!==response.code)return window.toast(`[自动每日奖励][每日分享] 出错 ${response.msg}`,"caution"),delayCall(()=>MY_API.DailyReward.share(aid));window.toast("[自动每日奖励][每日分享]今日分享已完成","info")}}):$.Deferred().resolve(),dynamic:async()=>{const coinNum=MY_API.CONFIG.COIN_NUMBER-MY_API.DailyReward.coin_exp/10,throwCoinNum=await BAPI.getuserinfo().then(re=>{if(MYDEBUG("DailyReward.dynamic: API.getuserinfo",re),"REPONSE_OK"===re.code)return re.data.biliCoin<coinNum?re.data.biliCoin:coinNum;window.toast(`[自动每日奖励][每日投币] 获取用户信息失败 ${response.message}`,"error")});return throwCoinNum<coinNum&&window.toast(`[自动每日奖励][每日投币]剩余硬币不足，仅能投${throwCoinNum}个币`,"warning"),BAPI.dynamic_svr.dynamic_new(Live_info.uid,8).then(response=>{if(MYDEBUG("DailyReward.dynamic: API.dynamic_svr.dynamic_new",response),0!==response.code)return window.toast(`[自动每日奖励]获取"动态-投稿视频"失败 ${response.msg}`,"caution"),delayCall(()=>MY_API.DailyReward.dynamic());if(response.data.cards){const obj=JSON.parse(response.data.cards[0].card),p1=MY_API.DailyReward.watch(obj.aid,obj.cid);let p2;p2=0==MY_API.CONFIG.COIN_UID||"COIN_DYN"==MY_API.CONFIG.COIN_TYPE?MY_API.DailyReward.coin(response.data.cards,Math.max(throwCoinNum,0)):MY_API.DailyReward.UserSpace(0,30,0,1,"","pubdate","jsonp");const p3=MY_API.DailyReward.share(obj.aid);return $.when(p1,p2,p3)}window.toast('[自动每日奖励]"动态-投稿视频"中暂无动态',"info")})},UserSpace:(uidIndex,ps,tid,pn,keyword,order,jsonp)=>BAPI.x.getUserSpace(MY_API.CONFIG.COIN_UID[uidIndex],ps,tid,pn,keyword,order,jsonp).then(response=>{if(MYDEBUG("DailyReward.UserSpace: API.dynamic_svr.UserSpace",response),0!==response.code)return window.toast(`[自动每日奖励]获取UID = ${MY_API.CONFIG.COIN_UID[uidIndex]}的"空间-投稿视频"失败 ${response.msg}`,"caution"),delayCall(()=>MY_API.DailyReward.UserSpace(uid,ps,tid,pn,keyword,order,jsonp));if(response.data.list.vlist){const throwCoinNum=MY_API.CONFIG.COIN_NUMBER-MY_API.DailyReward.coin_exp/10;return MY_API.DailyReward.coin_uid(response.data.list.vlist,Math.max(throwCoinNum,0),pn,uidIndex)}if(uidIndex<MY_API.CONFIG.COIN_UID.length-1){const throwCoinNum=MY_API.CONFIG.COIN_NUMBER-MY_API.DailyReward.coin_exp/10;return MY_API.DailyReward.coin_uid(response.data.list.vlist,Math.max(throwCoinNum,0),pn,uidIndex+1)}window.toast(`[自动每日奖励]"UID = ${String(MY_API.CONFIG.COIN_UID)}的空间-投稿视频"中暂无视频`,"info")}),run:(forceRun=!1)=>{try{return!MY_API.CONFIG.LOGIN&&!MY_API.CONFIG.COIN&&!MY_API.CONFIG.WATCH||otherScriptsRunning?$.Deferred().resolve():checkNewDay(MY_API.CACHE.DailyReward_TS)||forceRun?BAPI.DailyReward.exp().then(response=>{if(MYDEBUG("DailyReward.run: API.DailyReward.exp",response),0!==response.code)return window.toast(`[自动每日奖励] 获取今日已获得的投币经验出错 ${response.message}`,"caution"),delayCall(()=>MY_API.DailyReward.run());MY_API.DailyReward.coin_exp=response.number,MY_API.DailyReward.login(),MY_API.DailyReward.dynamic(),MY_API.CACHE.DailyReward_TS=ts_ms(),MY_API.saveCache(),runMidnight(()=>MY_API.DailyReward.run(),"每日任务")}):(runMidnight(()=>MY_API.DailyReward.run(),"每日任务"),$.Deferred().resolve())}catch(err){return window.toast("[自动每日奖励]运行时出现异常","error"),MYERROR("自动每日奖励出错",err),$.Deferred().reject()}}},LiveReward:{dailySignIn:()=>BAPI.xlive.dosign().then(response=>{if(MYDEBUG("LiveReward.dailySignIn: API.xlive.dosign",response),0===response.code)window.toast("[自动直播签到]完成","success"),$(".hinter").remove(),$(".checkin-btn").remove();else{if(1011040!==response.code)return window.toast(`[自动直播签到]失败 ${response.message}，尝试点击签到按钮`,"caution"),$(".checkin-btn").click(),delayCall(()=>MY_API.LiveReward.dailySignIn());window.toast("[自动直播签到]今日直播签到已完成","info")}}),run:()=>{try{if(!MY_API.CONFIG.LIVE_SIGN||otherScriptsRunning)return $.Deferred().resolve();if(!checkNewDay(MY_API.CACHE.LiveReward_TS))return runMidnight(()=>MY_API.LiveReward.run(),"直播签到"),$.Deferred().resolve();MY_API.LiveReward.dailySignIn(),MY_API.CACHE.LiveReward_TS=ts_ms(),MY_API.saveCache(),runMidnight(()=>MY_API.LiveReward.run(),"直播签到")}catch(err){return window.toast("[自动直播签到]运行时出现异常","error"),MYERROR("自动直播签到出错",err),$.Deferred().reject()}}},Exchange:{coin2silver:num=>BAPI.xlive.revenue.coin2silver(num).then(response=>{if(MYDEBUG("Exchange.coin2silver: API.Exchange.coin2silver",response),0!==response.code)return window.toast(`[银瓜子换硬币] 失败 ${response.message}`,"caution"),delayCall(()=>MY_API.Exchange.coin2silver(num));window.toast(`[硬币换银瓜子] ${response.message}，获得${response.data.silver}银瓜子`,"success")}),silver2coin:()=>BAPI.xlive.revenue.silver2coin().then(response=>{if(MYDEBUG("Exchange.silver2coin: API.Exchange.silver2coin",response),0===response.code)window.toast(`[银瓜子换硬币] ${response.message}`,"success");else{if(403!==response.code)return window.toast(`[银瓜子换硬币] 失败 ${response.message}`,"caution"),delayCall(()=>MY_API.Exchange.silver2coin());window.toast(`[银瓜子换硬币] ${response.message}`,"info")}}),runC2S:()=>!MY_API.CONFIG.COIN2SILVER||otherScriptsRunning?$.Deferred().resolve():checkNewDay(MY_API.CACHE.Coin2Sliver_TS)?MY_API.Exchange.coin2silver(MY_API.CONFIG.COIN2SILVER_NUM).then(()=>{MY_API.CACHE.Coin2Sliver_TS=ts_ms(),MY_API.saveCache(),runMidnight(()=>MY_API.Exchange.runC2S(),"硬币换瓜子")},()=>delayCall(()=>MY_API.Exchange.runC2S())):(runMidnight(()=>MY_API.Exchange.runC2S(),"硬币换瓜子"),$.Deferred().resolve()),runS2C:()=>{try{return!MY_API.CONFIG.SILVER2COIN||otherScriptsRunning?$.Deferred().resolve():checkNewDay(MY_API.CACHE.Silver2Coin_TS)?MY_API.Exchange.silver2coin().then(()=>{MY_API.CACHE.Silver2Coin_TS=ts_ms(),MY_API.saveCache(),runMidnight(()=>MY_API.Exchange.runS2C(),"瓜子换硬币")},()=>delayCall(()=>MY_API.Exchange.runS2C())):(runMidnight(()=>MY_API.Exchange.runS2C(),"瓜子换硬币"),$.Deferred().resolve())}catch(err){return window.toast("[银瓜子换硬币]运行时出现异常，已停止","error"),MYERROR("银瓜子换硬币出错",err),$.Deferred().reject()}}},Gift:{run_timer:void 0,ruid:void 0,room_id:void 0,medal_list:void 0,bag_list:void 0,giftFeed_list:{},remain_feed:void 0,over:void 0,allowGiftList:void 0,getBagList:async()=>BAPI.gift.bag_list().then(response=>{if(MYDEBUG("Gift.getBagList: API.gift.bag_list",response),0!==response.code)return window.toast(`[自动送礼]获取包裹列表失败，${response.message}`,"error"),delayCall(()=>MY_API.Gift.getBagList());MY_API.Gift.bag_list=response.data.list}),getFeedByGiftID:gift_id=>{if(30607===gift_id)return 50;for(let i=Live_info.gift_list.length-1;i>=0;--i)if(Live_info.gift_list[i].id===gift_id)return Math.ceil(Live_info.gift_list[i].price/100);return 0},sort_medals:medals=>{if("GIFT_SORT_HIGH"==MY_API.CONFIG.GIFT_SORT?medals.sort((a,b)=>b.level-a.level==0?b.intimacy-a.intimacy:b.level-a.level):medals.sort((a,b)=>a.level-b.level==0?a.intimacy-b.intimacy:a.level-b.level),MY_API.CONFIG.AUTO_GIFT_ROOMID){let sortRooms=[...MY_API.CONFIG.AUTO_GIFT_ROOMID];sortRooms.reverse();for(let froom of sortRooms){let rindex=medals.findIndex(r=>r.roomid==froom);if(-1!=rindex){let tmp=medals[rindex];medals.splice(rindex,1),medals.unshift(tmp)}}}return medals},auto_light:async()=>{try{const feed=MY_API.Gift.getFeedByGiftID(30607),light_roomid=MY_API.CONFIG.LIGHT_MEDALS;for(const m of MY_API.Gift.medal_list){let remain_feed=m.day_limit-m.today_feed;if("LIGHT_WHITE"===MY_API.CONFIG.LIGHT_METHOD){if(!(0===m.is_lighted&&(remain_feed>=feed||MY_API.CONFIG.FORCE_LIGHT)&&light_roomid.findIndex(it=>it==m.roomid)>-1))continue}else if(0!==m.is_lighted||!(remain_feed>=feed||MY_API.CONFIG.FORCE_LIGHT)||-1!==light_roomid.findIndex(it=>it==m.roomid))continue;for(const g of MY_API.Gift.bag_list){if(30607!==g.gift_id||g.gift_num<=0)continue;let response=await BAPI.room.room_init(parseInt(m.roomid,10)).then(re=>{if(MYDEBUG(`[自动送礼][自动点亮勋章] API.room.room_init(${m.roomid})`,re),0!==re.code)throw re.msg;return re}),send_room_id=parseInt(response.data.room_id,10);const feed_num=1;let rsp=await BAPI.gift.bag_send(Live_info.uid,30607,m.target_id,feed_num,g.bag_id,send_room_id,Live_info.rnd).then(re=>{if(MYDEBUG(`[自动送礼][自动点亮勋章] API.gift.bag_send ${Live_info.uid}, 30607, ${m.target_id}, ${feed_num}, ${g.bag_id}, ${send_room_id}, ${Live_info.rnd}`,re),0!==re.code)throw re.msg;return MY_API.GIFT_COUNT.LITTLE_HEART_COUNT+=feed_num,re});if(0===rsp.code){m.is_lighted=1,g.gift_num-=feed_num,m.today_feed+=feed_num*feed,remain_feed-=feed_num*feed,window.toast(`[自动送礼]勋章[${m.medalName}]点亮成功，送出${feed_num}个${g.gift_name}，[${m.today_feed}/${m.day_limit}]`,"success"),MYDEBUG("Gift.auto_light",`勋章[${m.medalName}]点亮成功，送出${feed_num}个${g.gift_name}，[${m.today_feed}/${m.day_limit}]`);break}window.toast(`[自动送礼]勋章[${m.medalName}]点亮失败【${rsp.msg}】`,"caution");break}}}catch(e){MYERROR("自动送礼点亮勋章出错",e),window.toast(`[自动送礼]点亮勋章出错:${e}`,"error")}},run:async(noTimeCheck=!1)=>{const waitForNextRun=()=>{if(window.toast("[自动送礼] 本次送礼结束","info"),SEND_GIFT_NOW=!1,"GIFT_SEND_TIME"==MY_API.CONFIG.GIFT_METHOD){let alternateTime=getIntervalTime(MY_API.CONFIG.GIFT_SEND_HOUR,MY_API.CONFIG.GIFT_SEND_MINUTE);MY_API.Gift.run_timer=setTimeout(()=>MY_API.Gift.run(!0),alternateTime);let runTime=new Date(ts_ms()+alternateTime).toLocaleString();MYDEBUG("[自动送礼]",`将在${runTime}进行自动送礼`),MY_API.CACHE.Gift_TS=ts_ms(),MY_API.saveCache()}else{let alternateTime=60*MY_API.CONFIG.GIFT_INTERVAL*1e3;MY_API.Gift.run_timer=setTimeout(()=>MY_API.Gift.run(!0),alternateTime),MYDEBUG("[自动送礼]",`将在${MY_API.CONFIG.GIFT_INTERVAL}分钟后进行自动送礼`),MY_API.CACHE.GiftInterval_TS=ts_ms(),MY_API.saveCache()}},handleGiftList=()=>{MY_API.Gift.allowGiftList=[...MY_API.CONFIG.GIFT_ALLOW_TYPE],MYDEBUG("[自动送礼]",`处理前的礼物列表 ${MY_API.Gift.allowGiftList}`);for(let i=0;i<MY_API.Gift.allowGiftList.length;i++){const listItem=MY_API.Gift.allowGiftList[i];let matchItem;isNaN(listItem)&&(matchItem=Live_info.gift_list.find(item=>item.name===listItem),matchItem&&(MY_API.Gift.allowGiftList[i]=String(matchItem.id)))}MYDEBUG("[自动送礼]",`处理后得到的礼物id列表 ${MY_API.Gift.allowGiftList}`)},getGiftFeed=async()=>{for(const i of MY_API.Gift.bag_list)MY_API.Gift.giftFeed_list.hasOwnProperty(i.gift_id)||(MY_API.Gift.giftFeed_list[i.gift_id]=await MY_API.Gift.getFeedByGiftID(i.gift_id))},handleBagList=(filter=!0)=>{let bag_list;if(!MY_API.CONFIG.SEND_ALL_GIFT&&filter){if(bag_list=MY_API.Gift.bag_list.filter(r=>MY_API.Gift.allowGiftList.includes(String(r.gift_id))&&r.gift_num>0&&Number(r.corner_mark.substring(0,r.corner_mark.indexOf("天")))<=MY_API.CONFIG.GIFT_LIMIT),MYDEBUG("[自动送礼] if分支 过滤后的礼物",bag_list),0===bag_list.length)return void(MY_API.Gift.over=!0)}else if(bag_list=MY_API.Gift.bag_list.filter(r=>r.gift_num>0&&"永久"!=r.corner_mark),MYDEBUG("[自动送礼] else分支 过滤后的礼物",bag_list),0===bag_list.length)return void(MY_API.Gift.over=!0);for(const i of bag_list)i.gift_feed=MY_API.Gift.giftFeed_list[i.gift_id];bag_list.sort((function(a,b){return b.gift_feed-a.gift_feed})),bag_list.sort((function(a,b){if(b.gift_feed===a.gift_feed)return a.expire_at-b.expire_at})),MY_API.Gift.bag_list=[...bag_list],MYDEBUG("Gift.bag_list (sorted)",MY_API.Gift.bag_list)},handleMedalList=()=>{MY_API.Gift.medal_list=MY_API.Gift.medal_list.filter(it=>it.day_limit-it.today_feed>0&&it.level<20&&it.roomid),MY_API.Gift.medal_list=MY_API.Gift.sort_medals(MY_API.Gift.medal_list),"GIFT_SEND_BLACK"===MY_API.CONFIG.GIFT_SEND_METHOD?MY_API.Gift.medal_list=MY_API.Gift.medal_list.filter(Er=>-1==MY_API.CONFIG.GIFT_SEND_ROOM.findIndex(exp=>exp==Er.roomid)):MY_API.Gift.medal_list=MY_API.Gift.medal_list.filter(Er=>MY_API.CONFIG.GIFT_SEND_ROOM.findIndex(exp=>exp==Er.roomid)>-1)},checkRemainGift=()=>!!MY_API.Gift.bag_list.some(g=>g.gift_num>0);try{if(!MY_API.CONFIG.AUTO_GIFT&&!LIGHT_MEDAL_NOW||otherScriptsRunning)return $.Deferred().resolve();if(medalDanmuRunning)return setTimeout(()=>MY_API.Gift.run(),3e3);if(MY_API.Gift.run_timer&&clearTimeout(MY_API.Gift.run_timer),!("GIFT_SEND_TIME"!=MY_API.CONFIG.GIFT_METHOD||isTime(MY_API.CONFIG.GIFT_SEND_HOUR,MY_API.CONFIG.GIFT_SEND_MINUTE)||SEND_GIFT_NOW||LIGHT_MEDAL_NOW||noTimeCheck)){let alternateTime=getIntervalTime(MY_API.CONFIG.GIFT_SEND_HOUR,MY_API.CONFIG.GIFT_SEND_MINUTE);MY_API.Gift.run_timer=setTimeout(()=>MY_API.Gift.run(!0),alternateTime);let runTime=new Date(ts_ms()+alternateTime).toLocaleString();return MYDEBUG("[自动送礼]",`将在${runTime}进行自动送礼`),$.Deferred().resolve()}if("GIFT_INTERVAL"==MY_API.CONFIG.GIFT_METHOD&&!SEND_GIFT_NOW&&!LIGHT_MEDAL_NOW&&!noTimeCheck){let GiftInterval=6e4*MY_API.CONFIG.GIFT_INTERVAL;if(MY_API.CACHE.GiftInterval_TS){const interval=ts_ms()-MY_API.CACHE.GiftInterval_TS;if(interval<GiftInterval){let intervalTime=GiftInterval-interval;return MY_API.Gift.run_timer=setTimeout(()=>MY_API.Gift.run(!0),intervalTime),MYDEBUG("[自动送礼]",`将在${intervalTime}毫秒后进行自动送礼`),$.Deferred().resolve()}}else MY_API.CACHE.GiftInterval_TS=ts_ms(),MY_API.saveCache()}if("resolved"!==medal_info.status.state())return window.toast("[自动送礼] 粉丝勋章列表未被完全获取，暂停运行","error"),medal_info.status.then(()=>MY_API.Gift.run());if(MY_API.Gift.medal_list=[...medal_info.medal_list],MYDEBUG("Gift.run: Gift.getMedalList().then: Gift.medal_list",MY_API.Gift.medal_list),MY_API.Gift.over=!1,handleGiftList(),await MY_API.Gift.getBagList(),await getGiftFeed(),handleBagList(!1),MY_API.Gift.over)return waitForNextRun();if(MY_API.Gift.medal_list.length>0){if(handleMedalList(),await MY_API.Gift.auto_light(),LIGHT_MEDAL_NOW)return LIGHT_MEDAL_NOW=!1,$.Deferred().resolve();if(handleBagList(),MY_API.Gift.over)return waitForNextRun();for(const v of MY_API.Gift.medal_list){if(!checkRemainGift()){MY_API.Gift.over=!0;break}const response=await BAPI.room.room_init(parseInt(v.roomid,10)).then(re=>{if(MYDEBUG(`[自动送礼] API.room.room_init(${v.roomid})`,re),0!==re.code)throw re.msg;return re});MY_API.Gift.room_id=parseInt(response.data.room_id,10),MY_API.Gift.ruid=v.target_id,MY_API.Gift.remain_feed=v.day_limit-v.today_feed,MY_API.Gift.remain_feed>0?(window.toast(`[自动送礼]勋章[${v.medalName}] 今日亲密度未满[${v.today_feed}/${v.day_limit}]，预计需要[${MY_API.Gift.remain_feed}]送礼开始`,"info"),await MY_API.Gift.sendGift(v)):window.toast(`[自动送礼]勋章[${v.medalName}] 今日亲密度已满`,"info")}}return MY_API.Gift.over||await MY_API.Gift.sendRemainGift(MY_API.CONFIG.SPARE_GIFT_ROOM),waitForNextRun()}catch(err){return window.toast("[自动送礼] 运行时出现异常，已停止","error"),MYERROR("自动送礼出错",err),delayCall(()=>MY_API.Gift.run())}},sendGift:async medal=>{for(const v of MY_API.Gift.bag_list){if(MY_API.Gift.remain_feed<=0)return window.toast(`[自动送礼]勋章[${medal.medalName}]送礼结束，今日亲密度已满[${medal.today_feed}/${medal.day_limit}]`,"info");if(0===v.gift_num)continue;const feed=MY_API.Gift.giftFeed_list[v.gift_id];if(feed>0){let feed_num=Math.floor(MY_API.Gift.remain_feed/feed);if(0===feed_num)continue;feed_num>v.gift_num&&(feed_num=v.gift_num),MYDEBUG(`[自动送礼]送出礼物类型${v.gift_name}，该项礼物数量${v.gift_num}，送出礼物数量${feed_num}`),await BAPI.gift.bag_send(Live_info.uid,v.gift_id,MY_API.Gift.ruid,feed_num,v.bag_id,MY_API.Gift.room_id,Live_info.rnd).then(response=>{if(MYDEBUG("Gift.sendGift: API.gift.bag_send",response),0!==response.code)return window.toast(`[自动送礼]勋章[${medal.medalName}] 送礼异常：${response.msg}`,"caution"),delayCall(()=>MY_API.Gift.sendGift(medal));v.gift_num-=feed_num,medal.today_feed+=feed_num*feed,MY_API.Gift.remain_feed-=feed_num*feed,window.toast(`[自动送礼]勋章[${medal.medalName}] 送礼成功，送出${feed_num}个${v.gift_name}，[${medal.today_feed}/${medal.day_limit}]距离今日亲密度上限还需[${MY_API.Gift.remain_feed}]`,"success"),30607==v.gift_id&&(MY_API.GIFT_COUNT.LITTLE_HEART_COUNT+=feed_num)})}}},sendRemainGift:async ROOM_ID=>{if(0==ROOM_ID)return $.Deferred().resolve();let UID=void 0;await BAPI.room.room_init(ROOM_ID).then(response=>{if(MYDEBUG("API.room.room_init",response),0!==response.code)return window.toast(`[自动送礼]【剩余礼物】检查房间出错 ${response.message}`),delayCall(()=>BAPI.room.room_init(ROOM_ID));UID=response.data.uid});let bag_list=MY_API.Gift.bag_list.filter(r=>MY_API.Gift.allowGiftList.includes(String(r.gift_id))&&r.gift_num>0&&"1天"==r.corner_mark);if(0!==bag_list.length){MYDEBUG("[自动送礼]【剩余礼物】bag_list",bag_list);for(const v of bag_list){if(v.gift_num<=0)continue;const feed=MY_API.Gift.giftFeed_list[v.gift_id];if(feed>0){let feed_num=v.gift_num;await BAPI.gift.bag_send(Live_info.uid,v.gift_id,UID,feed_num,v.bag_id,ROOM_ID,Live_info.rnd).then(response=>{if(MYDEBUG("Gift.sendGift: API.gift.bag_send",response),0!==response.code)return window.toast(`[自动送礼]【剩余礼物】房间[${ROOM_ID}] 送礼异常：${response.msg}`,"caution"),delayCall(()=>MY_API.Gift.sendGift(medal));v.gift_num-=feed_num,window.toast(`[自动送礼]【剩余礼物】房间[${ROOM_ID}] 送礼成功，送出${feed_num}个${v.gift_name}`,"success"),30607==v.gift_id&&(MY_API.GIFT_COUNT.LITTLE_HEART_COUNT+=feed_num)})}}}}},LITTLE_HEART:{patchData:{},failedRoomList:[],RoomHeart:class{constructor(roomID){this.getInfoByRoom(roomID)}areaID;parentID;seq=0;roomID;get id(){return[this.parentID,this.areaID,this.seq,this.roomID]}buvid=this.getItem("LIVE_BUVID");uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)});device=[this.buvid,this.uuid];get ts(){return Date.now()}get patchData(){const list=[];for(const[_,data]of Object.entries(MY_API.LITTLE_HEART.patchData))list.push(data);return list}isPatch=0===this.patchData.length?0:1;ua=W&&W.navigator?W.navigator.userAgent:"";csrf=this.getItem("bili_jct")||"";nextInterval=Math.floor(5)+Math.floor(55*Math.random());heartbeatInterval;secretKey;secretRule;timestamp;async getInfoByRoom(roomID){const getInfoByRoom=await BAPI.xlive.getInfoByRoom(roomID);if(0===getInfoByRoom.code){const roomInfo=getInfoByRoom.data.room_info;({area_id:this.areaID,parent_area_id:this.parentID,room_id:this.roomID}=roomInfo),this.e()}else window.toast(`[小心心] 未获取到房间 ${roomID} 信息`,"error"),MYERROR("小心心",`未获取到房间 ${roomID} 信息`)}async webHeartBeat(){if(this.seq>6)return;const arg=`${this.nextInterval}|${this.roomID}|1|0`,argUtf8=CryptoJS.enc.Utf8.parse(arg),argBase64=CryptoJS.enc.Base64.stringify(argUtf8),webHeartBeat=await fetch(`//live-trace.bilibili.com/xlive/rdata-interface/v1/heartbeat/webHeartBeat?hb=${encodeURIComponent(argBase64)}&pf=web`,{mode:"cors",credentials:"include"}).then(res=>res.json());0===webHeartBeat.code?(this.nextInterval=webHeartBeat.data.next_interval,setTimeout(()=>this.webHeartBeat(),1e3*this.nextInterval)):(window.toast(`[小心心] 房间 ${this.roomID} 心跳webHeartBeat失败`,"warning"),MYERROR("小心心",`房间 ${this.roomID} 心跳webHeartBeat失败`))}async e(){const arg={id:JSON.stringify(this.id),device:JSON.stringify(this.device),ts:this.ts,is_patch:this.isPatch,heart_beat:JSON.stringify(this.patchData),ua:this.ua},e=await fetch("//live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/E",{headers:{"content-type":"application/x-www-form-urlencoded"},method:"POST",body:`${this.json2str(arg)}&csrf_token=${this.csrf}&csrf=${this.csrf}&visit_id=`,mode:"cors",credentials:"include"}).then(res=>res.json());0===e.code?(MYDEBUG(`[小心心] 发送房间${this.roomID}的心跳包E`,e),this.seq+=1,({heartbeat_interval:this.heartbeatInterval,secret_key:this.secretKey,secret_rule:this.secretRule,timestamp:this.timestamp}=e.data),setTimeout(()=>this.x(),1e3*this.heartbeatInterval)):(window.toast(`[小心心] 房间 ${this.roomID} 心跳E失败 ${e.message}`,"error"),MYERROR("小心心",`房间 ${this.roomID} 心跳E失败`,e),addVal(MY_API.LITTLE_HEART.failedRoomList,this.roomID))}async x(){if(this.seq>6)return;const sypderData={id:JSON.stringify(this.id),device:JSON.stringify(this.device),ets:this.timestamp,benchmark:this.secretKey,time:this.heartbeatInterval,ts:this.ts,ua:this.ua},s=this.sypder(JSON.stringify(sypderData),this.secretRule),arg=Object.assign({s:s},sypderData);MY_API.LITTLE_HEART.patchData[this.roomID]=arg;const x=await fetch("//live-trace.bilibili.com/xlive/data-interface/v1/x25Kn/X",{headers:{"content-type":"application/x-www-form-urlencoded"},method:"POST",body:`${this.json2str(arg)}&csrf_token=${this.csrf}&csrf=${this.csrf}&visit_id=`,mode:"cors",credentials:"include"}).then(res=>res.json());0===x.code?(MYDEBUG(`[小心心] 发送房间${this.roomID}的心跳包X`,x),this.seq+=1,({heartbeat_interval:this.heartbeatInterval,secret_key:this.secretKey,secret_rule:this.secretRule,timestamp:this.timestamp}=x.data),setTimeout(()=>this.x(),1e3*this.heartbeatInterval)):(window.toast(`[小心心] 房间 ${this.roomID} 心跳X失败 ${x.message}`,"error"),MYERROR("小心心",`房间 ${this.roomID} 心跳X失败`,x),addVal(MY_API.LITTLE_HEART.failedRoomList,this.roomID))}sypder(str,rule){const data=JSON.parse(str),[parent_id,area_id,seq_id,room_id]=JSON.parse(data.id),[buvid,uuid]=JSON.parse(data.device),key=data.benchmark,newData={platform:"web",parent_id:parent_id,area_id:area_id,seq_id:seq_id,room_id:room_id,buvid:buvid,uuid:uuid,ets:data.ets,time:data.time,ts:data.ts};let s=JSON.stringify(newData);for(const r of rule)switch(r){case 0:s=CryptoJS.HmacMD5(s,key).toString(CryptoJS.enc.Hex);break;case 1:s=CryptoJS.HmacSHA1(s,key).toString(CryptoJS.enc.Hex);break;case 2:s=CryptoJS.HmacSHA256(s,key).toString(CryptoJS.enc.Hex);break;case 3:s=CryptoJS.HmacSHA224(s,key).toString(CryptoJS.enc.Hex);break;case 4:s=CryptoJS.HmacSHA512(s,key).toString(CryptoJS.enc.Hex);break;case 5:s=CryptoJS.HmacSHA384(s,key).toString(CryptoJS.enc.Hex)}return s}getItem(t){return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(t).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||""}json2str(arg){let str="";for(const name in arg)str+=`${name}=${encodeURIComponent(arg[name])}&`;return str.slice(0,-1)}},run:async()=>{if(!MY_API.CONFIG.LITTLE_HEART||otherScriptsRunning)return $.Deferred().resolve();const bagList=await getBagList();if(0!==bagList.code)return window.toast("[小心心] 未获取到包裹列表，停止运行","error"),MYERROR("小心心","未获取到包裹列表");let giftNum=getGiftNum(bagList);if(giftNum>=24)return window.toast("[小心心] 已获取今日小心心","info");window.toast("[小心心] 开始获取今日小心心","info");const fansMedalList=medal_info.medal_list.filter(m=>m.roomid&&!MY_API.LITTLE_HEART.failedRoomList.includes(m.roomid)),control=24-giftNum,loopNum=Math.ceil(control/fansMedalList.length);for(let i=0;i<loopNum;i++){let count=0;for(const funsMedalData of fansMedalList){if(count>=control)break;new MY_API.LITTLE_HEART.RoomHeart(funsMedalData.roomid),await sleep(1e3),count++}await sleep(36e4)}const newBagList=await getBagList();let newGiftNum;if(getGiftNum(newBagList)<24)return window.toast("[小心心] 今日小心心未完全获取，再次获取","warning"),MY_API.LITTLE_HEART.run();async function getBagList(){const bagList=await fetch(`//api.live.bilibili.com/xlive/web-room/v1/gift/bag_list?t=${Date.now()}&room_id=${W.BilibiliLive.ROOMID}`,{mode:"cors",credentials:"include"}).then(res=>res.json());return 0!=bagList.code&&window.toast(`[小心心] 获取包裹列表失败 ${bagList.message}`,"error"),MYDEBUG("[小心心] 获取包裹列表",bagList),bagList}function getGiftNum(bagList){const list=bagList.data.list||[];if(0===list.length)return 0;let giftNum=0;for(const gift of list)if(30607===gift.gift_id){const expire=(gift.expire_at-Date.now()/1e3)/60/60/24;expire>6&&expire<=7&&(giftNum+=gift.gift_num)}return giftNum}window.toast("[小心心] 今日小心心已获取","success")}},AUTO_DANMU:{setValue:(array,index)=>void 0===MY_API.CONFIG[array][index]&&index>0?MY_API.AUTO_DANMU.setValue(array,index-1):MY_API.CONFIG[array][index],sendDanmu:async(danmuContent,roomId)=>{let realRoomId=roomId;return Number(roomId)<=1e4&&(realRoomId=await BAPI.room.get_info(roomId).then(res=>(MYDEBUG(`API.room.get_info roomId=${roomId} res`,res),0===res.code?res.data.room_id:(window.toast(`[自动发弹幕]房间号【${roomId}】信息获取失败 ${res.message}`,"error"),roomId)))),BAPI.sendLiveDanmu(danmuContent,realRoomId).then(response=>{MYDEBUG(`[自动发弹幕]弹幕发送内容【${danmuContent}】，房间号【${roomId}】`,response),0===response.code?window.toast(`[自动发弹幕]弹幕【${danmuContent}】（房间号【${roomId}】）发送成功`,"success"):window.toast(`[自动发弹幕]弹幕【${danmuContent}】（房间号【${roomId}】）出错 ${response.msg}`,"caution")})},getMaxLength:()=>{let maxLength=void 0;const contentLength=MY_API.CONFIG.DANMU_CONTENT.length,roomidLength=MY_API.CONFIG.DANMU_ROOMID.length,intervalTimeLength=MY_API.CONFIG.DANMU_INTERVAL_TIME.length;return maxLength=contentLength>=roomidLength?contentLength:roomidLength,maxLength<intervalTimeLength&&(maxLength=intervalTimeLength),maxLength},run:async()=>{if(!MY_API.CONFIG.AUTO_DANMU||otherScriptsRunning)return $.Deferred().resolve();if(medalDanmuRunning)return setTimeout(()=>MY_API.AUTO_DANMU.run(),3e3);if(danmuTaskRunning=!0,SEND_DANMU_NOW){for(let i=0;i<MY_API.CONFIG.DANMU_CONTENT.length;i++){let danmu_content=MY_API.AUTO_DANMU.setValue("DANMU_CONTENT",i),danmu_roomid=parseInt(MY_API.AUTO_DANMU.setValue("DANMU_ROOMID",i));await MY_API.AUTO_DANMU.sendDanmu(danmu_content,danmu_roomid),await sleep(1e3)}SEND_DANMU_NOW=!1}else{let maxLength=MY_API.AUTO_DANMU.getMaxLength();for(let i=0;i<maxLength;i++){let danmu_content=MY_API.AUTO_DANMU.setValue("DANMU_CONTENT",i),danmu_roomid=parseInt(MY_API.AUTO_DANMU.setValue("DANMU_ROOMID",i)),danmu_intervalTime=MY_API.AUTO_DANMU.setValue("DANMU_INTERVAL_TIME",i),lastSendTime=void 0,jsonCache=MY_API.CACHE.AUTO_SEND_DANMU_TS,objIndex=void 0,isTimeData=void 0,intervalTime=void 0,danmu_intervalTime_Ts=void 0,sleepTime=0;function getDanmuCache(){for(let i=0;i<jsonCache.length;i++){const obj=jsonCache[i];if(obj.roomid==danmu_roomid&&obj.content==danmu_content){lastSendTime=obj.sendTs,objIndex=i;break}}}if(danmu_intervalTime.indexOf(":")>-1){isTimeData=!0;const danmu_time=danmu_intervalTime.split(":"),hour=parseInt(danmu_time[0]),minute=parseInt(danmu_time[1]),second=parseInt(danmu_time[2]);sleepTime=isTime(hour,minute,second)?864e5:getIntervalTime(hour,minute,second)}else if(isTimeData=!1,danmu_intervalTime=danmu_intervalTime.toLowerCase(),danmu_intervalTime.indexOf("h")>-1||danmu_intervalTime.indexOf("m")>-1||danmu_intervalTime.indexOf("s")>-1){const hourArray=danmu_intervalTime.split("h"),minuteArray=void 0===hourArray[1]?hourArray[0].split("m"):hourArray[1].split("m"),secondArray=void 0===minuteArray[1]?minuteArray[0].split("s"):minuteArray[1].split("s"),hour=hourArray[0],minute=minuteArray[0],second=secondArray[0],finalHour=isNaN(hour)?0:hour||0,finalMinute=isNaN(minute)?0:minute||0,finalSecond=isNaN(second)?0:second||0;danmu_intervalTime_Ts=36e5*finalHour+6e4*finalMinute+1e3*finalSecond}else danmu_intervalTime_Ts=6e4*danmu_intervalTime;MYDEBUG("[自动发弹幕]MY_API.CACHE.AUTO_SEND_DANMU_TS => jsoncache",jsonCache),getDanmuCache(),isTimeData||(intervalTime=lastSendTime?ts_ms()-lastSendTime:ts_ms());const setCache=()=>{const newJson={roomid:danmu_roomid,content:danmu_content,sendTs:ts_ms()};return getDanmuCache(),void 0===objIndex?jsonCache.push(newJson):jsonCache[objIndex].sendTs=ts_ms(),MY_API.CACHE.AUTO_SEND_DANMU_TS=jsonCache,MY_API.saveCache(!1)},sendNextDanmu=(intervalTS,isTime)=>(isTime||setCache(),setTimeout(async()=>(await MY_API.AUTO_DANMU.sendDanmu(danmu_content,danmu_roomid),isTime||setCache(),sendNextDanmu(intervalTS,isTime)),intervalTS));!isTimeData&&intervalTime>=danmu_intervalTime_Ts?(await MY_API.AUTO_DANMU.sendDanmu(danmu_content,danmu_roomid),MYDEBUG(`[自动发弹幕]弹幕发送内容【${danmu_content}】，房间号【${danmu_roomid}】，距下次发送还有`,danmu_intervalTime),sendNextDanmu(danmu_intervalTime_Ts,isTimeData)):isTimeData&&!sleepTime?(await MY_API.AUTO_DANMU.sendDanmu(danmu_content,danmu_roomid),MYDEBUG(`[自动发弹幕]弹幕发送内容【${danmu_content}】，房间号【${danmu_roomid}】，距下次发送还有`,"24小时"),sendNextDanmu(sleepTime,isTimeData)):(MYDEBUG(`[自动发弹幕]弹幕发送内容【${danmu_content}】，房间号【${danmu_roomid}】，距下次发送还有`,`${isTimeData?sleepTime/6e4:(danmu_intervalTime_Ts-intervalTime)/6e4}分钟`),setTimeout(async()=>{await MY_API.AUTO_DANMU.sendDanmu(danmu_content,danmu_roomid),sendNextDanmu(isTimeData?864e5:danmu_intervalTime_Ts,isTimeData)},isTimeData?sleepTime:danmu_intervalTime_Ts-intervalTime)),await sleep(1500)}}danmuTaskRunning=!1}},MEDAL_DANMU:{medal_list:[],sendDanmu:async(danmuContent,roomId,medal_name)=>{let realRoomId=roomId;return Number(roomId)<=1e4&&(realRoomId=await BAPI.room.get_info(roomId).then(res=>(MYDEBUG(`API.room.get_info roomId=${roomId} res`,res),0===res.code?res.data.room_id:(window.toast(`[粉丝牌打卡弹幕] 房间号【${roomId}】信息获取失败 ${res.message}`,"error"),roomId)))),BAPI.sendLiveDanmu(danmuContent,realRoomId).then(response=>(MYDEBUG(`[粉丝牌打卡弹幕] 弹幕发送内容【${danmuContent}】，房间号【${roomId}】，真实房间号【${realRoomId}】，粉丝勋章【${medal_name}】`,response),0===response.code&&0===response.message.length?window.toast(`[粉丝牌打卡弹幕] 弹幕【${danmuContent}】发送成功，房间号【${roomId}】，粉丝勋章【${medal_name}】已点亮，当前亲密度+100`,"success"):window.toast(`[粉丝牌打卡弹幕] 弹幕【${danmuContent}】（房间号【${roomId}】，粉丝勋章【${medal_name}】）出错 ${response.message}`,"caution")))},run:async()=>{if(!MY_API.CONFIG.MEDAL_DANMU||otherScriptsRunning)return $.Deferred().resolve();if(!checkNewDay(MY_API.CACHE.MedalDanmu_TS))return runMidnight(()=>MY_API.MEDAL_DANMU.run(),"粉丝勋章打卡弹幕"),$.Deferred().resolve();if(danmuTaskRunning)return setTimeout(()=>MY_API.MEDAL_DANMU.run(),3e3);if("resolved"!==medal_info.status.state())return window.toast("[粉丝牌打卡] 粉丝勋章列表未被完全获取，暂停运行","error"),medal_info.status.then(()=>MY_API.MEDAL_DANMU.run());let lightMedalList;MY_API.MEDAL_DANMU.medal_list=[...medal_info.medal_list],medalDanmuRunning=!0,lightMedalList="MEDAL_DANMU_WHITE"===MY_API.CONFIG.MEDAL_DANMU_METHOD?MY_API.MEDAL_DANMU.medal_list.filter(r=>MY_API.CONFIG.MEDAL_DANMU_ROOM.findIndex(m=>m==r.roomid)>-1&&r.roomid):MY_API.MEDAL_DANMU.medal_list.filter(r=>-1===MY_API.CONFIG.MEDAL_DANMU_ROOM.findIndex(m=>m==r.roomid)&&r.roomid),MYDEBUG("[粉丝牌打卡] 过滤后的粉丝勋章房间列表",lightMedalList);let danmuContentIndex=0;const configDanmuLength=MY_API.CONFIG.MEDAL_DANMU_CONTENT.length;for(const up of lightMedalList){danmuContentIndex>=configDanmuLength&&(danmuContentIndex=0);const medal_name=up.medal_name,roomid=up.roomid,danmuContent=MY_API.CONFIG.MEDAL_DANMU_CONTENT[danmuContentIndex];await MY_API.MEDAL_DANMU.sendDanmu(danmuContent,roomid,medal_name),danmuContentIndex++,await sleep(1e3*MY_API.CONFIG.MEDAL_DANMU_INTERVAL)}return medalDanmuRunning=!1,window.toast("[粉丝牌打卡弹幕] 今日已完成","success"),MY_API.CACHE.MedalDanmu_TS=ts_ms(),MY_API.saveCache(),runTomorrow(()=>MY_API.MEDAL_DANMU.run(),0,2,"粉丝勋章打卡弹幕")}},MaterialObject:{list:[],firstAid:void 0,run:()=>{try{if(!MY_API.CONFIG.MATERIAL_LOTTERY||otherScriptsRunning)return $.Deferred().resolve();if(MY_API.CACHE.MaterialObject_TS){const diff=ts_ms()-MY_API.CACHE.MaterialObject_TS,interval=6e4*MY_API.CONFIG.MATERIAL_LOTTERY_CHECK_INTERVAL||6e5;if(diff<interval)return MYDEBUG("[实物抽奖]",`${interval-diff}毫秒后再次运行`),setTimeout(MY_API.MaterialObject.run,interval-diff),$.Deferred().resolve()}return MY_API.chatLog("[实物抽奖] 开始寻找可参加的抽奖"),MY_API.MaterialObject.check().then(aid=>{aid&&(MY_API.CACHE.last_aid=aid,MY_API.CACHE.MaterialObject_TS=ts_ms(),MY_API.saveCache()),MYDEBUG("[实物抽奖]",`将在${MY_API.CONFIG.MATERIAL_LOTTERY_CHECK_INTERVAL}分钟后再次运行实物抽奖`),setTimeout(MY_API.MaterialObject.run,6e4*MY_API.CONFIG.MATERIAL_LOTTERY_CHECK_INTERVAL||6e5)},()=>delayCall(()=>MY_API.MaterialObject.run()))}catch(err){return MY_API.chatLog("[实物抽奖]运行时出现异常","error"),MYERROR("实物抽奖出错",err),$.Deferred().reject()}},check:(aid,valid=710,rem=MY_API.CONFIG.MATERIAL_LOTTERY_REM||9)=>(aid=parseInt(aid||MY_API.CACHE.last_aid,10),isNaN(aid)&&(aid=valid),MYDEBUG("API.MaterialObject.check: aid=",aid),BAPI.Lottery.MaterialObject.getStatus(aid).then(response=>{if(MYDEBUG("API.MaterialObject.check: API.MY_API.MaterialObject.getStatus",response),0===response.code&&response.data){if(3!=response.data.typeB[response.data.typeB.length-1].status&&void 0===MY_API.MaterialObject.firstAid&&(MY_API.MaterialObject.firstAid=aid),MY_API.CONFIG.MATERIAL_LOTTERY_IGNORE_QUESTIONABLE_LOTTERY){const checkList=[response.data.title,response.data.rule];for(const str of MY_API.CONFIG.QUESTIONABLE_LOTTERY)if(isRegexp.test(str)){const reg=eval(str);if(checkList.some(i=>reg.test(i)))return MY_API.chatLog(`[实物抽奖] 忽略存疑抽奖<br>${response.data.title} (aid = ${aid})<br>匹配正则：`+str,"warning"),MY_API.MaterialObject.check(aid+1,aid)}else if(checkList.some(i=>i.toLowerCase().indexOf(str.toLowerCase())>-1))return MY_API.chatLog(`[实物抽奖] 忽略存疑抽奖<br>${response.data.title} (aid = ${aid})<br>含有关键字：`+str,"warning"),MY_API.MaterialObject.check(aid+1,aid)}return MY_API.MaterialObject.join(aid,response.data.title,response.data.typeB).then(()=>MY_API.MaterialObject.check(aid+1,aid))}return-400===response.code||null==response.data?rem?MY_API.MaterialObject.check(aid+1,valid,rem-1):$.Deferred().resolve(MY_API.MaterialObject.firstAid||valid):(MY_API.chatLog(`[实物抽奖] 获取抽奖(aid=${aid})状态失败 ${response.msg}`,"warning"),delayCall(()=>MY_API.MaterialObject.check(aid,valid)))})),join:(aid,title,typeB,i=0)=>{if(i>=typeB.length)return $.Deferred().resolve();if(MY_API.MaterialObject.list.some(v=>v.aid===aid&&v.number===i+1))return MY_API.MaterialObject.join(aid,title,typeB,i+1);const number=i+1;let obj={title:title,aid:aid,number:number,status:typeB[i].status,join_start_time:typeB[i].join_start_time,join_end_time:typeB[i].join_end_time,list:typeB[i].list,jpName:""};for(const i of obj.list)obj.jpName=obj.jpName.concat(" ",i.jp_name);switch(obj.status){case-1:{MY_API.chatLog(`[实物抽奖] 将在<br>${new Date(1e3*(obj.join_start_time+1)).toLocaleString()}参加抽奖<br>"${obj.title}"<br>aid = ${obj.aid}，第${i+1}轮<br>奖品：${obj.jpName}`,"info"),MY_API.MaterialObject.list.push(obj);const p=$.Deferred();p.then(()=>MY_API.MaterialObject.draw(obj)),setTimeout(()=>{p.resolve()},1e3*(obj.join_start_time-ts_s()+1))}break;case 0:return MY_API.MaterialObject.draw(obj).then(()=>MY_API.MaterialObject.join(aid,title,typeB,i+1));case 1:{MY_API.chatLog(`[实物抽奖] 已参加抽奖<br>"${obj.title}"<br>aid = ${obj.aid} 第${i+1}轮<br>奖品：${obj.jpName}`,"info"),MY_API.MaterialObject.list.push(obj);const p=$.Deferred();p.then(()=>MY_API.MaterialObject.notice(obj)),setTimeout(()=>{p.resolve()},1e3*(obj.join_end_time-ts_s()+1))}}return MY_API.MaterialObject.join(aid,title,typeB,i+1)},draw:obj=>BAPI.Lottery.MaterialObject.draw(obj.aid,obj.number).then(response=>{if(MYDEBUG("API.MaterialObject.check: API.MY_API.MaterialObject.draw",response),0!==response.code)return MY_API.chatLog(`[实物抽奖] 参加"${obj.title}"(aid = ${obj.aid}，第${obj.number}轮)失败<br>${response.msg}`,"warning"),delayCall(()=>MY_API.MaterialObject.draw(obj),6e5);{$.each(MY_API.MaterialObject.list,(i,v)=>{if(v.aid===obj.aid&&v.number===obj.number)return v.status=1,MY_API.MaterialObject.list[i]=v,!1}),MY_API.chatLog(`[实物抽奖] 成功参加抽奖<br>${obj.title}<br>aid = ${obj.aid}，第${obj.number}轮<br>奖品：${obj.jpName}`,"success"),MY_API.addMaterial();const p=$.Deferred();p.then(()=>MY_API.MaterialObject.notice(obj)),setTimeout(()=>{p.resolve()},1e3*(obj.join_end_time-ts_s()+1))}}),notice:obj=>BAPI.Lottery.MaterialObject.getWinnerGroupInfo(obj.aid,obj.number).then(response=>{if(MYDEBUG("API.MaterialObject.check: API.MY_API.MaterialObject.getWinnerGroupInfo",response),0!==response.code)return MY_API.chatLog(`[实物抽奖] 获取抽奖"${obj.title}"(aid = ${obj.aid}，第${obj.number}轮)中奖名单失败<br>${response.msg}`,"warning"),delayCall(()=>MY_API.MaterialObject.notice(obj));$.each(MY_API.MaterialObject.list,(i,v)=>{if(v.aid===obj.aid&&v.number===obj.number)return v.status=3,MY_API.MaterialObject.list[i]=v,!1});for(const i of response.data.groups)for(const g of i.list)if(g.uid===Live_info.uid){if(MY_API.chatLog(`[实物抽奖] 抽奖"${obj.title}"<br>aid = ${obj.aid}，第${obj.number}轮<br>获得奖品："${i.giftTitle}"`,"prize"),winPrizeNum++,winPrizeTotalCount++,JQlogRedPoint.text(winPrizeNum),JQlogRedPoint.is(":hidden")&&JQlogRedPoint.show(),MY_API.CONFIG.PP_NOTICE){const data={token:MY_API.CONFIG.PP_token,title:`【${GM_info.script.name}】实物抽奖中奖通知 ${obj.title}，第${obj.number}轮`,content:`<div style="border: 1px solid rgb(223, 187, 0);color: rgb(145, 123, 0);background: none 0% 0% repeat scroll rgb(255, 215, 0, 30%);text-align: center;border-radius: 5%;padding: 15px 20px;"><h3>实物抽奖中奖</h3><br /><h4>中奖账号id：${Live_info.uname}</h4><br /><h4>${obj.title}</h4><br /><h4>aid=${obj.aid}</h4><br /><h4>第${obj.number}轮</h4><br /><h4>获得奖品：</h4><br /><h3>${i.giftTitle}</h3><br /><h4>请及时填写领奖信息</h4></div>`};PP_sendMsg(data).then(re=>(MYDEBUG("PP_sendMsg response",re),re.body&&200==re.body.code?window.toast("[实物抽奖] 推送加中奖提示发送成功","success"):window.toast(`[实物抽奖] 推送加中奖提示发送失败 ${re.response.status}`,"error"),$.Deferred().resolve()))}return MY_API.CONFIG.SECONDS_NOTICE&&SECONDS_sendMsg(MY_API.CONFIG.SECONDS_QQ,`【${GM_info.script.name}实物抽奖中奖通知\n${obj.title}\n第${obj.number}轮\n中奖账号id：${Live_info.uname}\n${obj.title}\naid = ${obj.aid}\n第${obj.number}轮\n获得奖品：\n${i.giftTitle}\n请及时填写领奖信息`).then(re=>(MYDEBUG("SECONDS_sendMsg response",re),re.body&&0===re.body.code?window.toast("[实物抽奖] seconds中奖提示发送成功","success"):window.toast(`[实物抽奖] seconds中奖提示发送失败 ${re.response.status}`,"error"),$.Deferred().resolve())),MY_API.CONFIG.ServerTurbo_NOTICE&&ServerTurbo_sendMsg(MY_API.CONFIG.ServerTurbo_SendKey,`【${GM_info.script.name}】实物抽奖中奖通知 ${obj.title}，第${obj.number}轮`,`## 实物抽奖中奖  \n  \n## 中奖账号id：${Live_info.uname}  \n  \n## ${obj.title}  \n  \n## aid = ${obj.aid}  \n  \n## 第${obj.number}轮  \n  \n## 获得奖品：  \n  \n# ${i.giftTitle}  \n  \n## 请及时填写领奖信息`).then(re=>(MYDEBUG("ServerTurbo_sendMsg response",re),re.body&&0===re.body.code?window.toast("[实物抽奖] Server酱Turbo版发起推送成功","success"):window.toast(`[实物抽奖] Server酱Turbo版发起推送失败 ${re.response.status}`,"error"),$.Deferred().resolve())),MY_API.CONFIG.GM_NOTICE&&GM_notice("实物抽奖中奖",`${obj.title}，奖品：${i.giftTitle}`),!0}MY_API.chatLog(`[实物抽奖] 抽奖"${obj.title}"(aid = ${obj.aid}，第${obj.number}轮)未中奖`,"info")})},AnchorLottery:{allRoomList:[],checkedIdList:[],roomidList:[],liveUserList:[],liveRoomList:[],oldLotteryResponseList:[],lotteryResponseList:[],BLTHserverRoomList:[],BLTHuploadRoomList:[],introRoomList:[],roomidAndUid:{},myLiveRoomid:0,customLiveRoomList:[],followingList:[],unfollowList:[],uidInTagList:[],BLTHfollowList:[],BLTHprizeList:[],uidInOriginTag:[],uidInSpecialTag:[],getAnchorDataType:1,getAnchorDataApiNum:2,medal_list:[],anchorFollowTagid:void 0,anchorPrizeTagid:void 0,get_attention_list:mid=>BAPI.relation.get_attention_list(mid).then(response=>{MYDEBUG(`get_attention_list API.relation.get_attention_list ${mid}`,response);let p=$.Deferred();return 0===response.code?(MY_API.AnchorLottery.followingList=[...response.data.list],GM_setValue("AnchorFollowingList",MY_API.AnchorLottery.followingList),getFollowBtnClickable=!0,window.toast("[保存当前关注列表为白名单] 保存关注列表成功","success"),p.resolve()):(window.toast(`[保存当前关注列表为白名单] 获取关注列表出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.get_attention_list(mid)))}),getLiveUsers:()=>BAPI.dynamic_svr.w_live_users(2e3).then(response=>{MYDEBUG("API.dynamic_svr.w_live_users",response);let p=$.Deferred();if(0===response.code){const items=response.data.items;return MY_API.AnchorLottery.liveUserList=items instanceof Array?[...items]:[],p.resolve()}return MY_API.chatLog(`[天选时刻] 获取正在直播的已关注UP出错 ${response.msg}`,"caution"),delayCall(()=>MY_API.AnchorLottery.getLiveUsers())}),getTag:async(tagName,click=!1)=>MY_API.AnchorLottery.anchorFollowTagid&&MY_API.AnchorLottery.anchorPrizeTagid?$.Deferred().resolve():("string"==typeof tagName&&(tagName=[tagName]),BAPI.relation.getTags().then(response=>{if(MYDEBUG("API.relation.getTags",response),0===response.code){for(const tag of response.data)tag.name===anchorFollowTagName?tagName.indexOf(anchorFollowTagName)>-1&&(MY_API.AnchorLottery.anchorFollowTagid=tag.tagid):tag.name===anchorPrizeTagName&&tagName.indexOf(anchorPrizeTagName)>-1&&(MY_API.AnchorLottery.anchorPrizeTagid=tag.tagid);if(click)return tagName.indexOf(anchorFollowTagName)>-1&&void 0===MY_API.AnchorLottery.anchorFollowTagid&&MY_API.chatLog(`[天选时刻] 分组【${anchorFollowTagName}】不存在，请先勾选【把参与天选时关注的UP移到新分组】和【参加天选时刻抽奖】，再次运行脚本。`,"warning"),tagName.indexOf(anchorPrizeTagName)>-1&&void 0===MY_API.AnchorLottery.anchorPrizeTagid&&MY_API.chatLog(`[天选时刻] 分组【${anchorPrizeTagName}】不存在，请先勾选【把发起抽奖的UP移到新分组】和【参加天选时刻抽奖】，再次运行脚本。`,"warning"),$.Deferred().resolve();{let p1=$.Deferred(),p2=$.Deferred();return void 0===MY_API.AnchorLottery.anchorFollowTagid&&MY_API.CONFIG.ANCHOR_MOVETO_FOLLOW_TAG?MY_API.AnchorLottery.creatTag(anchorFollowTagName).then(()=>p1.resolve()):p1.resolve(),void 0===MY_API.AnchorLottery.anchorPrizeTagid&&MY_API.CONFIG.ANCHOR_MOVETO_PRIZE_TAG?p1.then(()=>MY_API.AnchorLottery.creatTag(anchorPrizeTagName).then(()=>p2.resolve())):p2.resolve(),$.when(p1,p2)}}return MY_API.chatLog(`[天选时刻] 获取关注分组出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getTag(tagName))})),creatTag:tagName=>BAPI.relation.createTag(tagName).then(re=>{MYDEBUG(`API.relation.createTag ${tagName}`,re);let p=$.Deferred();return 0===re.code?(tagName===anchorFollowTagName?MY_API.AnchorLottery.anchorFollowTagid=re.data.tagid:tagName===anchorPrizeTagName&&(MY_API.AnchorLottery.anchorPrizeTagid=re.data.tagid),p.resolve()):(MY_API.chatLog(`[天选时刻] 创建分组【${tagName}】出错 ${re.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.creatTag(tagName)))}),getUpInBLTHTag:(myuid,tagid,pn=1,ps=50)=>{let p1=$.Deferred(),p2=$.Deferred();function getUpInBLTHFollowTag(uid,tid,n,s){1===n&&(MY_API.AnchorLottery.BLTHfollowList=[]),BAPI.relation.getUpInTag(uid,tid,n,s).then(response=>{if(MYDEBUG(`API.relation.getUpInTag 获取BLTH天选UP关注分组内UP ${tid} ${n} ${s}`,response),0===response.code){for(const up of response.data)MY_API.AnchorLottery.BLTHfollowList.push(String(up.mid));return response.data.length<s?p1.resolve():delayCall(()=>getUpInBLTHFollowTag(uid,tid,n+1,s),200)}return MY_API.chatLog(`[天选时刻] 获取BLTH天选关注UP分组内UP出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getUpInTag(uid,tid,n,s))})}function getUpInBLTHPrizeTag(uid,tid,n,s){1===n&&(MY_API.AnchorLottery.BLTHprizeList=[]),BAPI.relation.getUpInTag(uid,tid,n,s).then(response=>{if(MYDEBUG(`API.relation.getUpInTag 获取BLTH天选中奖UP分组内UP ${tid} ${n} ${s}`,response),0===response.code){for(const up of response.data)MY_API.AnchorLottery.BLTHprizeList.push(String(up.mid));return response.data.length<s?p2.resolve():delayCall(()=>getUpInBLTHPrizeTag(uid,tid,n+1,s),200)}return MY_API.chatLog(`[天选时刻] 获取BLTH天选中奖UP分组内UP出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getUpInTag(uid,tid,n,s))})}return MY_API.AnchorLottery.anchorFollowTagid?getUpInBLTHFollowTag(myuid,tagid[0],pn,ps):p1.resolve(),MY_API.AnchorLottery.anchorPrizeTagid?getUpInBLTHPrizeTag(myuid,tagid[1],pn,ps):p2.resolve(),$.when(p1,p2)},getUpInSpecialTag:(myuid,tagid=-10,pn=1,ps=50)=>BAPI.relation.getUpInTag(myuid,tagid,pn,ps).then(response=>{let p=$.Deferred();if(MYDEBUG(`API.relation.getUpInSpecialTag ${tagid} ${pn} ${ps}`,response),0===response.code){for(const up of response.data)MY_API.AnchorLottery.uidInSpecialTag.push(String(up.mid));return response.data.length<ps?p.resolve():delayCall(()=>MY_API.AnchorLottery.getUpInSpecialTag(myuid,tagid,pn+1,ps),200)}return MY_API.chatLog(`[天选时刻] 获取特别关注关注列表出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getUpInSpecialTag(myuid,tagid,pn,ps))}),getUpInOriginTag:(myuid,tagid=0,pn=1,ps=50)=>BAPI.relation.getUpInTag(myuid,tagid,pn,ps).then(response=>{let p=$.Deferred();if(MYDEBUG(`API.relation.getUpInOriginTag ${tagid} ${pn} ${ps}`,response),0===response.code){for(const up of response.data)MY_API.AnchorLottery.uidInOriginTag.push(String(up.mid));return response.data.length<ps?p.resolve():delayCall(()=>MY_API.AnchorLottery.getUpInOriginTag(myuid,tagid,pn+1,ps),200)}return MY_API.chatLog(`[天选时刻] 获取默认分组关注列表出错 ${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getUpInOriginTag(myuid,tagid,pn,ps))}),delAnchorFollowing:(mode=1)=>{function getUpInTag(myuid,tagid,pn=1,ps=50){return 1===pn&&(MY_API.AnchorLottery.unfollowList=[]),BAPI.relation.getUpInTag(myuid,tagid,pn,ps).then(response=>{let p=$.Deferred();if(MYDEBUG(`API.relation.getUpInTag ${tagid} ${pn} ${ps}`,response),0===response.code){for(const up of response.data)MY_API.AnchorLottery.uidInTagList.push(String(up.mid));return response.data.length<ps?p.resolve():delayCall(()=>getUpInTag(myuid,tagid,pn+1,ps),200)}return window.toast(`[取关BLTH天选分组内的UP] 获取关注列表出错 ${response.message}`,"error"),delayCall(()=>getUpInTag(myuid,tagid,pn=1,ps=50))},()=>{MY_API.chatLog("[天选时刻] 获取Tag内UP列表出错，请检查网络","error")})}function get_attention_list(mid){return BAPI.relation.get_attention_list(mid).then(response=>{MYDEBUG(`get_attention_list API.relation.get_attention_list(${mid})`,response);let p=$.Deferred();return 0===response.code?(MY_API.AnchorLottery.unfollowList=[...response.data.list],p.resolve()):(window.toast(`[取关不在白名单内的UP主] 获取关注列表出错 ${response.message}`,"error"),delayCall(()=>get_attention_list(mid)))})}function delFollowingList(targetList){let id_list;if(id_list=GM_getValue("AnchorFollowingList")||[],1===mode&&0===id_list.length)return window.toast("[取关不在白名单内的UP主] 请先点击【保存当前关注列表为白名单】!","info"),$.Deferred().resolve();let doUnfollowList=[],pList=[];for(const uid of targetList)-1===findVal(id_list,uid)&&doUnfollowList.push(uid);for(let c=0;c<=doUnfollowList.length;c++)pList[c]=$.Deferred(),MY_API.CONFIG.ANCHOR_WAIT_REPLY||pList[c].resolve();pList[0].resolve();for(let i=0;i<doUnfollowList.length;i++)pList[i].then(()=>{let p=$.Deferred();setTimeout(()=>p.resolve(),MY_API.CONFIG.ANCHOR_INTERVAL),p.then(()=>{BAPI.relation.modify(doUnfollowList[i],2).then(response=>{if(MYDEBUG(`API.relation.modify ${doUnfollowList[i]}, 2`,response),0!==response.code)return window.toast(`[天选时刻取关UP主] 取关UP(uid = ${doUnfollowList[i]})出错  ${response.message}`,"error"),pList[i+1].reject(),delayCall(()=>delFollowingList(targetList));window.toast(`[天选时刻取关UP主] 取关UP(uid = ${doUnfollowList[i]})成功`,"success"),pList[i+1].resolve()})})});return $.when(...pList)}return 1===mode?get_attention_list(Live_info.uid).then(()=>delFollowingList(MY_API.AnchorLottery.unfollowList).then(()=>{unFollowBtnClickable=!0})):2===mode?getUpInTag(Live_info.uid,MY_API.AnchorLottery.anchorFollowTagid).then(()=>delFollowingList(MY_API.AnchorLottery.uidInTagList).then(()=>{unFollowBtnClickable=!0})):3===mode?getUpInTag(Live_info.uid,MY_API.AnchorLottery.anchorPrizeTagid).then(()=>delFollowingList(MY_API.AnchorLottery.uidInTagList).then(()=>{unFollowBtnClickable=!0})):void 0},getAreaData:()=>BAPI.room.getList().then(response=>(MYDEBUG("API.room.getList 分区信息",response),0===response.code?response.data:(MY_API.chatLog(`[天选时刻] 获取各分区信息出错，${response.message}`,"error"),delayCall(()=>MY_API.AnchorLottery.getAreaData())))),getRoomList:data=>(data.page||(data.page=1),data.size||(data.size=50),BAPI.room.getRoomList(data.id,0,0,data.page,data.size).then(re=>{if(MYDEBUG(`API.room.getRoomList(${data.id}, 0, 0, ${data.page}, ${data.size})`,re),0!==re.code)return MY_API.chatLog(`[天选时刻] 获取${data.name+"分区"}的直播间出错<br>${re.message}`,"warning"),delayCall(()=>checkRoomList());{const list=re.data.list;MY_API.chatLog(`[天选时刻] 获取${data.name+"分区"}的直播间`,"info"),MYDEBUG(`[天选时刻] 获取${data.name+"分区"}房间列表`,re);for(const i of list)addVal(MY_API.AnchorLottery.roomidList,i.roomid)}})),getHotRoomList:async(ignore_area=[])=>{let areaData=await MY_API.AnchorLottery.getAreaData();MY_API.AnchorLottery.roomidList=[];for(const r of areaData)ignore_area.indexOf(r.name)>-1||(await MY_API.AnchorLottery.getRoomList(r),await sleep(MY_API.AnchorLottery.awpush.userInfo.interval||MY_API.CONFIG.ANCHOR_INTERVAL));return MY_API.chatLog(`[天选时刻] 高热度直播间收集完毕<br>共${MY_API.AnchorLottery.roomidList.length}个`,"success"),$.Deferred().resolve()},uploadData:async()=>{let description=void 0,p=$.Deferred();if(0===MY_API.AnchorLottery.lotteryResponseList.length){let lotteryInfoJson;await BAPI.room.getRoomBaseInfo(MY_API.CONFIG.ANCHOR_GETDATA_ROOM).then(response=>{if(MYDEBUG(`API.room.getRoomBaseInfo(${MY_API.CONFIG.ANCHOR_GETDATA_ROOM})`,response),0!==response.code)return MY_API.chatLog(`[天选时刻] 获取直播间个人简介错误 ${response.message}`,"error"),p.reject();description=response.data.by_room_ids[MY_API.CONFIG.ANCHOR_GETDATA_ROOM].description});try{if(void 0===description)throw"undefined";lotteryInfoJson=description.match(/狧(.*)狨/)[1];for(const i in replaceList)lotteryInfoJson=lotteryInfoJson.replaceall(replaceList[i],i);if(lotteryInfoJson=JSON.parse(lotteryInfoJson),"object"!=typeof lotteryInfoJson||!lotteryInfoJson)throw"Not a JSON";if(!lotteryInfoJson.hasOwnProperty("roomList"))throw"Missing property roomList";if(!lotteryInfoJson.hasOwnProperty("ts"))throw"Missing property ts"}catch(e){MYDEBUG("MY_API.AnchorLottery.uploadData",`获取到的直播间简介格式有误 ${e}，上传初始值设为undefined`),lotteryInfoJson=void 0}if(void 0!==lotteryInfoJson){for(const i of lotteryInfoJson.roomList)MY_API.AnchorLottery.lotteryResponseList.push(i);MY_API.AnchorLottery.oldLotteryResponseList=[...MY_API.AnchorLottery.lotteryResponseList]}}if(MY_API.AnchorLottery.oldLotteryResponseList.length===MY_API.AnchorLottery.lotteryResponseList.length)return setTimeout(()=>MY_API.AnchorLottery.uploadData(),1e3*MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL);if(0===MY_API.AnchorLottery.myLiveRoomid&&await BAPI.room.getRoomInfoOld(Live_info.uid).then(response=>{if(MYDEBUG(`API.room.getRoomInfoOld(${Live_info.uid})`,response),0!==response.code)return MY_API.chatLog(`[天选时刻] 获取直播间信息出错 ${response.data.message}`,"error"),p.reject();MY_API.AnchorLottery.myLiveRoomid=response.data.roomid}),0===MY_API.AnchorLottery.myLiveRoomid)return MY_API.chatLog("[天选时刻] 请先开通直播间再使用上传房间列表至个人简介的功能","warning"),p.reject();MY_API.AnchorLottery.lotteryResponseList.length>MY_API.CONFIG.ANCHOR_MAXLIVEROOM_SAVE&&(MY_API.AnchorLottery.lotteryResponseList=MY_API.AnchorLottery.lotteryResponseList.splice(0,MY_API.CONFIG.ANCHOR_MAXLIVEROOM_SAVE));let uploadRawJson={roomList:MY_API.AnchorLottery.lotteryResponseList,ts:ts_ms()};function updateEncodeData(roomId,str){return BAPI.room.update(roomId,str).then(re=>(MYDEBUG("API.room.update MY_API.AnchorLottery.myLiveRoomid",re),0===re.code?(MY_API.chatLog(`[天选时刻] 房间列表上传至个人简介成功（共${MY_API.AnchorLottery.lotteryResponseList.length}个房间）`,"success"),MY_API.AnchorLottery.oldLotteryResponseList=[...MY_API.AnchorLottery.lotteryResponseList],p.resolve()):1===re.code?"出错啦，再试试吧"===re.message?(MY_API.chatLog(`[天选时刻] 上传房间列表至个人简介失败，${MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL}秒后再次尝试`,"warning"),p.resolve()):"简介内容过长"===re.message?(MY_API.chatLog("[天选时刻] 上传房间列表至个人简介失败，内容过长，清空数据","warning"),MY_API.AnchorLottery.lotteryResponseList=[],MY_API.AnchorLottery.oldLotteryResponseList=[],p.resolve()):"您所填写的简介可能涉及不符合相关法律法规和政策的内容，请修改"===re.message?(MY_API.chatLog(`[天选时刻] 上传房间列表至个人简介失败，${re.message}`,"warning"),MY_API.AnchorLottery.oldLotteryResponseList=[...MY_API.AnchorLottery.lotteryResponseList],p.resolve()):(MY_API.chatLog(`[天选时刻] 上传房间列表至个人简介失败 ${re.message}`,"warning"),p.reject()):-1===re.code?(MY_API.chatLog(`[天选时刻] 上传房间列表至个人简介失败，${re.message}，上传间隔临时增加5秒`,"warning"),MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL+=5,p.resolve()):(MY_API.chatLog(`[天选时刻] 上传房间列表至个人简介失败 ${re.message}`,"error"),p.reject())))}MY_API.CONFIG.ANCHOR_UPLOAD_MSG&&(uploadRawJson.msg=MY_API.CONFIG.ANCHOR_UPLOAD_MSG_CONTENT);let jsonStr=JSON.stringify(uploadRawJson);for(const i in replaceList)jsonStr=jsonStr.replaceall(i,replaceList[i]);let finalStr="狧"+jsonStr+"狨";return updateEncodeData(MY_API.AnchorLottery.myLiveRoomid,finalStr).then(()=>setTimeout(()=>MY_API.AnchorLottery.uploadData(),1e3*MY_API.CONFIG.ANCHOR_UPLOAD_DATA_INTERVAL))},uploadRoomList:()=>{if(0===MY_API.AnchorLottery.BLTHuploadRoomList.length)return setTimeout(()=>MY_API.AnchorLottery.uploadRoomList(),2e4);const uploadRoomlist=MY_API.AnchorLottery.BLTHuploadRoomList.slice(0,50),settings={GM:!0,anonymous:!0,url:"https://andywang.top:3001/api/v1/anchor/updateroomlist",method:"POST",headers:{"content-type":"charset=utf-8"},data:`apikey=${MY_API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]}&uid=${Live_info.uid}&roomList=${[...MY_API.AnchorLottery.BLTHuploadRoomList.slice(0,50)]}`,responseType:"json"};return XHR(settings).then(response=>(MYDEBUG("BLTH-server api/v1/anchor/updateroomlist",response),null===response.body?MY_API.chatLog(`[天选时刻] 连接BLTH-server出错<br>状态码: ${response.response.status}`,"error"):(0===response.body.code?(MY_API.chatLog(`[天选时刻] 上传房间列表至BLTH-server成功<br>上传房间数：${uploadRoomlist.length}`,"success"),MY_API.AnchorLottery.BLTHuploadRoomList=[]):MY_API.chatLog(`[天选时刻] 上传直播间至BLTH-server出错<br>${response.body.msg}`,"error"),setTimeout(()=>MY_API.AnchorLottery.uploadRoomList(),2e4)))).catch(e=>(MYERROR("天选时刻","上传直播间至BLTH-server出错",e),MY_API.chatLog(`[天选时刻] 上传直播间至BLTH-server出错<br>${e}`,"error"),setTimeout(()=>MY_API.AnchorLottery.uploadRoomList(),12e4)))},getDataFromBLTHserver:()=>{const settings={GM:!0,anonymous:!0,url:`https://andywang.top:3001/api/v1/anchor/getroomlist?apikey=${MY_API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]}&uid=${Live_info.uid}&num=50`,method:"GET",headers:{"content-type":"charset=utf-8"},responseType:"json"};return XHR(settings).then(response=>{if(MYDEBUG("BLTH-server api/v1/anchor/getroomlist",response),null===response.body)return MY_API.chatLog(`[天选时刻] 连接BLTH-server出错<br>状态码: ${response.response.status}`,"error");if(0===response.body.code){const roomList=response.body.data;for(const i of roomList)addVal(MY_API.AnchorLottery.BLTHserverRoomList,i);return MY_API.chatLog(`[天选时刻] BLTH-server天选数据获取完毕<br>共${roomList.length}个房间`,"success"),$.Deferred().resolve()}return MY_API.chatLog(`[天选时刻] 连接BLTH-server出错<br>${response.body.msg}`,"error")}).catch(e=>{MYERROR("天选时刻","从BLTH-server获取直播间出错",e),MY_API.chatLog(`[天选时刻] 从BLTH-server获取直播间出错<br>${e}`,"error")})},getLotteryInfoFromRoom:async()=>{let description=void 0,lotteryInfoJson;await BAPI.room.getRoomBaseInfo(MY_API.CONFIG.ANCHOR_GETDATA_ROOM).then(response=>{MYDEBUG(`API.room.getRoomBaseInfo(${MY_API.CONFIG.ANCHOR_GETDATA_ROOM})`,response),0===response.code?description=response.data.by_room_ids[MY_API.CONFIG.ANCHOR_GETDATA_ROOM].description:MY_API.chatLog(`[天选时刻] 获取直播间个人简介错误 ${response.message}`,"error")});try{if(void 0===description)throw"undefined";lotteryInfoJson=description.match(/狧(.*)狨/)[1];for(const i in replaceList)lotteryInfoJson=lotteryInfoJson.replaceall(replaceList[i],i);if(lotteryInfoJson=JSON.parse(lotteryInfoJson),"object"!=typeof lotteryInfoJson||!lotteryInfoJson)throw"Not a JSON";if(!lotteryInfoJson.hasOwnProperty("roomList"))throw"Missing property roomList";if(!lotteryInfoJson.hasOwnProperty("ts"))throw"Missing property ts"}catch(e){return MY_API.chatLog(`[天选时刻] 直播间${MY_API.CONFIG.ANCHOR_GETDATA_ROOM}个人简介的数据格式不符合要求<br>`+e,"error"),setTimeout(()=>MY_API.AnchorLottery.getLotteryInfoFromRoom(),6e4*MY_API.CONFIG.ANCHOR_CHECK_INTERVAL)}return MY_API.AnchorLottery.introRoomList=[...lotteryInfoJson.roomList],MY_API.chatLog(`[天选时刻] 简介数据获取完毕（共${MY_API.AnchorLottery.introRoomList.length}个房间）<br>数据来源：直播间${linkMsg(liveRoomUrl+MY_API.CONFIG.ANCHOR_GETDATA_ROOM,MY_API.CONFIG.ANCHOR_GETDATA_ROOM)}的个人简介${!MY_API.CONFIG.ANCHOR_IGNORE_UPLOAD_MSG&&lotteryInfoJson.hasOwnProperty("msg")&&lotteryInfoJson.msg.length>0&&!/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi.test(lotteryInfoJson.msg)?"<br>附加信息："+lotteryInfoJson.msg:""}<br>该数据最后上传时间：${new Date(lotteryInfoJson.ts).toLocaleString()}`,"success")},moneyCheck:award_name=>{const name=award_name.replaceall(" ","").toLowerCase();let numberArray=name.match(/\d+(\.\d+)?/g),chineseNumberArray=name.match(/([一壹二贰两三叁四肆五伍六陆七柒八捌九玖][千仟]零?[一壹二贰两三叁四肆五伍六陆七柒八捌九玖]?[百佰]?[一壹二贰三叁四肆五伍六陆七柒八捌九玖]?[十拾]?[一壹二贰三叁四肆五伍六陆七柒八捌九玖]?)|([一壹二贰两三叁四肆五伍六陆七柒八捌九玖][百佰][一壹二贰三叁四肆五伍六陆七柒八捌九玖]?[十拾]?[一壹二贰三叁四肆五伍六陆七柒八捌九玖]?)|([一壹二贰三叁四肆五伍六陆七柒八捌九玖]?[十拾][一壹二贰三叁四肆五伍六陆七柒八捌九玖]?)|[一壹二贰两三叁四肆五伍六陆七柒八捌九玖十拾]/g);const chnNumChar={"零":0,"一":1,"壹":1,"二":2,"贰":2,"两":2,"三":3,"叁":3,"四":4,"肆":4,"五":5,"伍":5,"六":6,"陆":6,"七":7,"柒":7,"八":8,"捌":8,"九":9,"玖":9},chnNameValue={"十":{value:10,secUnit:!1},"拾":{value:10,secUnit:!1},"百":{value:100,secUnit:!1},"佰":{value:100,secUnit:!1},"千":{value:1e3,secUnit:!1},"仟":{value:1e3,secUnit:!1},"万":{value:1e4,secUnit:!0},"亿":{value:1e8,secUnit:!0}};if(null!==chineseNumberArray&&null===numberArray)return chineseFunc();if(null===chineseNumberArray&&null!==numberArray)return arabicNumberFunc();if(null!==chineseNumberArray&&null!==numberArray){let arr=arabicNumberFunc();return arr[0]?arr:chineseFunc()}return[!1];function chineseFunc(){let chineseNumIndexList=[];chineseNumberArray.sort((function(a,b){return b.length-a.length}));for(const n of chineseNumberArray)chineseNumIndexList.push(getIndex(name,n,chineseNumIndexList));for(let n=0;n<chineseNumberArray.length;n++){const chineseNum=chineseNumberArray[n];if(void 0!==chineseNum){const num=ChineseToNumber(chineseNum),ChineseNumberIndex=chineseNumIndexList[n],ChineseNumLength=chineseNum.length,nextChineseNumIndex=chineseNumIndexList[n+1],lastChineseNumIndex=chineseNumIndexList[n-1],unitTailIndex=ChineseNumberIndex+ChineseNumLength;let strAfterNum="",strBeforeNum="";if(unitTailIndex<nextChineseNumIndex)for(let i=unitTailIndex;i<name.length;i++)if(void 0!==nextChineseNumIndex){if(!(i<nextChineseNumIndex))break;strAfterNum+=name[i]}else strAfterNum+=name[i];else strAfterNum=name.slice(unitTailIndex,name.length);if(ChineseNumberIndex>lastChineseNumIndex)for(let i=lastChineseNumIndex;i<name.length;i++)if(void 0!==lastChineseNumIndex){if(!(i<ChineseNumberIndex))break;strBeforeNum+=name[i]}else strBeforeNum+=name[i];else strBeforeNum=name.slice(0,ChineseNumberIndex);let finalMoney=getPrice(num,strAfterNum,strBeforeNum);if(void 0===finalMoney){if(n===chineseNumberArray.length-1)return[!1];continue}return[!0,Number(finalMoney).toFixed(2)]}}}function arabicNumberFunc(){let numIndexList=[];numberArray.sort((function(a,b){return b.length-a.length}));for(const n of numberArray)numIndexList.push(getIndex(name,n,numIndexList));for(let n=0;n<numberArray.length;n++){const num=numberArray[n],numberIndex=name.indexOf(num),numLength=num.length,nextNumIndex=numIndexList[n+1],lastNumIndex=numIndexList[n-1],unitTailIndex=numberIndex+numLength;let strAfterNum="",strBeforeNum="";if(unitTailIndex<nextNumIndex)for(let i=unitTailIndex;i<name.length;i++)if(void 0!==nextNumIndex){if(!(i<nextNumIndex))break;strAfterNum+=name[i]}else strAfterNum+=name[i];else strAfterNum=name.slice(unitTailIndex,name.length);if(numberIndex>lastNumIndex)for(let i=lastNumIndex;i<name.length;i++)if(void 0!==lastNumIndex){if(!(i<numberIndex))break;strBeforeNum+=name[i]}else strBeforeNum+=name[i];else strBeforeNum=name.slice(0,numberIndex);let finalMoney=getPrice(num,strAfterNum,strBeforeNum);if(void 0!==finalMoney)return[!0,Number(finalMoney).toFixed(2)];if(n===numberArray.length-1)return[!1]}}function getPrice(num,strAfterNum,strBeforeNum){const after_yuan=["元","r","块"],after_yuanWords=["rmb","cny","人民币","软妹币","微信红包","红包","qq红包","现金"],after_dime=["毛","角","电池"],after_penny=["分"],before_yuanWords=["rmb","cny","人民币","软妹币","微信红包","红包","qq红包","现金"],firstAfterChar=strAfterNum[0];let finalMoney=void 0,needFurtherCheck=!1;const number=Number(num);for(const w of before_yuanWords)if(strBeforeNum.indexOf(w)>-1){finalMoney=number,needFurtherCheck=!0;break}for(const w of after_yuanWords)if(strAfterNum.indexOf(w)>-1){finalMoney=number;break}if(void 0===finalMoney||needFurtherCheck)if(after_yuan.indexOf(firstAfterChar)>-1)finalMoney=number;else if(after_dime.indexOf(firstAfterChar)>-1)finalMoney=.1*number;else if(after_penny.indexOf(firstAfterChar)>-1){const ignoreList=["分钟"];for(const i of ignoreList)if(strAfterNum.indexOf(i)>-1)return;finalMoney=.01*number}return finalMoney}function ChineseToNumber(chnStr){let chineseStr,rtn=0,section=0,number=0,secUnit=!1,str=("十"===chnStr[0]?"一"+chnStr:chnStr).split("");for(let i=0;i<str.length;i++){let num=chnNumChar[str[i]];if(void 0!==num)number=num,i===str.length-1&&(section+=number);else{if(!chnNameValue.hasOwnProperty(str[i]))return;let unit=chnNameValue[str[i]].value;secUnit=chnNameValue[str[i]].secUnit,secUnit?(section=(section+number)*unit,rtn+=section,section=0):section+=number*unit,number=0}}return rtn+section}function getIndex(str,num,array,start=0,arrStart=0){let index=str.indexOf(num,start),arrayIndex=array.indexOf(index,arrStart);return arrayIndex>-1?getIndex(str,num,array,index+1,arrayIndex+1):index}},filter:{delUselessData(obj){const delList=["asset_icon","url","web_url"];for(const i of delList)delete obj[i];return obj},ignore_room:roomid=>!(MY_API.CONFIG.ANCHOR_IGNORE_ROOM&&findVal(MY_API.CONFIG.ANCHOR_IGNORE_ROOMLIST,roomid)>-1)||(MY_API.chatLog(`[天选时刻] 忽略直播间<br>不参加直播间${linkMsg(liveRoomUrl+roomid,roomid)}的天选`,"warning"),!1),hasChecked:data=>findVal(MY_API.AnchorLottery.checkedIdList,data.id)>-1?(MY_API.chatLog(`[天选时刻] 忽略已检索过的天选<br>roomid = ${linkMsg(liveRoomUrl+data.room_id,data.room_id)}, id = ${data.id}`,"info"),MY_API.AnchorLottery.checkedIdList.length>500&&MY_API.AnchorLottery.checkedIdList.splice(0,500),!1):(addVal(MY_API.AnchorLottery.checkedIdList,data.id),!0),time:data=>0!==data.time||(MY_API.chatLog(`[天选时刻] 忽略过期天选<br>roomid = ${linkMsg(liveRoomUrl+data.room_id,data.room_id)}, id = ${data.id}`,"info"),!1),status:data=>2!==data.status||(MY_API.chatLog(`[天选时刻] 忽略已参加天选<br>roomid = ${linkMsg(liveRoomUrl+data.room_id,data.room_id)}, id = ${data.id}<br>奖品名：${data.award_name}<br>`,"info"),!1),further:async(data,uid=MY_API.AnchorLottery.roomidAndUid[data.room_id])=>{const joinPrice=data.gift_num*data.gift_price/100,joinTextTitle=`${NAME}_ANCHOR_${data.id}`,ts=ts_ms();let defaultJoinData={id:data.id,gift_id:0===joinPrice?void 0:data.gift_id,gift_num:0===joinPrice?void 0:data.gift_num,roomid:data.room_id,award_name:data.award_name,time:data.time,require_type:data.require_type,joinPrice:joinPrice,uid:uid},medalJson=void 0,joinText=null,joinDisplay="block";switch(data.require_type){case 0:case 1:joinText="点击参加";break;case 2:joinText=1===data.require_value?"点击购买粉丝勋章并参加":"点击购买粉丝勋章";break;default:joinDisplay="none"}const joinHtml=(text=joinText,display=joinDisplay)=>`<div class = "clickableText" title = "${joinTextTitle}" ts = "${ts}" style = "display:${display};">${text}</div>`;function joinAnchorListener(){let jqText=$('div[title="'+joinTextTitle+'"][ts="'+ts+'"]'),timer=setTimeout(()=>jqText.remove(),1e3*data.time);jqText.click(()=>{let p=$.Deferred();switch(data.require_type){case 2:let getUid=$.Deferred();defaultJoinData.uid?getUid.resolve():BAPI.live_user.get_anchor_in_room(defaultJoinData.roomid).then(res=>{MYDEBUG(`API.live_user.get_anchor_in_room(${defaultJoinData.roomid})`,res),res.data?(defaultJoinData.uid=res.data.info.uid,medalJson={anchorInfo:{uid:res.data.info.uid,uname:res.data.info.uname,face:res.data.info.face},medal_level:1,target_id:res.data.info.uid},getUid.resolve(),MY_API.AnchorLottery.roomidAndUid[defaultJoinData.roomid]=res.data.info.uid):(MY_API.chatLog(`[天选时刻] 获取uid出错<br>roomid = ${defaultJoinData.roomid}<br>${res.msg}`,"error"),getUid.reject())},()=>{MY_API.chatLog("[天选时刻] 获取uid出错，请检查网络","error"),getUid.reject()}),getUid.then(()=>{BAPI.x.elec_pay_quick(defaultJoinData.uid).then(re=>{MYDEBUG("API.x.elec_pay_quick re",re),0===re.code&&4===re.data.status?(1===data.require_value?(mymsg("粉丝勋章购买成功，约2秒后参加天选",{time:2e3,icon:1}),setTimeout(()=>p.resolve(),2e3)):(mymsg("粉丝勋章购买成功",{time:2e3,icon:1}),p.reject()),void 0!==medalJson&&MY_API.AnchorLottery.medal_list.push(medalJson)):(mymsg(`粉丝勋章购买失败 ${re.data.msg}`,{time:3500,icon:2}),p.reject())},()=>{MY_API.chatLog("[天选时刻] 购买粉丝勋章出错，请检查网络","error"),p.reject()})});break;default:p.resolve()}p.then(()=>{BAPI.xlive.anchor.randTime(data.id).then(re=>{if(MYDEBUG(`API.xlive.anchor.randTime ${data.id}`,re),0===re.code){if(!(re.data.time>0))return MY_API.chatLog(`[天选时刻] 该天选已过期<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}`,"info");{defaultJoinData.time=re.data.time,MY_API.AnchorLottery.join(defaultJoinData);let allSameJqText=$('div[title="'+joinTextTitle+'"]');allSameJqText.unbind("click"),allSameJqText.remove(),clearTimeout(timer)}}},()=>{MY_API.chatLog("[天选时刻] 获取天选开奖剩余时间失败，请检查网络","error")})})})}if(MY_API.CONFIG.ANCHOR_IGNORE_BLACKLIST)for(const str of MY_API.CONFIG.ANCHOR_BLACKLIST_WORD)if(isRegexp.test(str))try{const reg=eval(str);if(reg.test(data.award_name))return MY_API.chatLog(`[天选时刻] 忽略存疑天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>匹配正则：${str}<br>${"无"===data.require_text?"":"参加条件："+data.require_text+"<br>"}${0===joinPrice?"无需电池":"所需电池："+joinPrice}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1)}catch(e){MYDEBUG("[天选时刻] 正则eval出错：",str)}else if(data.award_name.toLowerCase().indexOf(str.toLowerCase())>-1)return MY_API.chatLog(`[天选时刻] 忽略存疑天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>含有关键字：${str}<br>${"无"===data.require_text?"":"参加条件："+data.require_text+"<br>"}${0===joinPrice?"无需电池":"所需电池："+joinPrice}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1);if(MY_API.CONFIG.ANCHOR_IGNORE_MONEY>0||MY_API.CONFIG.ANCHOR_MONEY_ONLY){const moneyCheckReturnArray=MY_API.AnchorLottery.moneyCheck(data.award_name);if(moneyCheckReturnArray[0]){if(moneyCheckReturnArray[1]<MY_API.CONFIG.ANCHOR_IGNORE_MONEY)return MY_API.chatLog(`[天选时刻] 忽略金额小于${MY_API.CONFIG.ANCHOR_IGNORE_MONEY}元的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>${"无"===data.require_text?"":"参加条件："+data.require_text+"<br>"}识别到的金额：${moneyCheckReturnArray[1]}元<br>${0===joinPrice?"无需电池":"所需电池："+joinPrice}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1)}else if(MY_API.CONFIG.ANCHOR_MONEY_ONLY)return MY_API.chatLog(`[天选时刻] 忽略非现金抽奖的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>${"无"===data.require_text?"":"参加条件："+data.require_text+"<br>"}${0===joinPrice?"无需电池":"所需电池："+joinPrice}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),$.Deferred().resolve(!1)}if(joinPrice>MY_API.CONFIG.ANCHOR_NEED_GOLD)return MY_API.chatLog(`[天选时刻] 忽略付费天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>${"无"===data.require_text?"":"参加条件："+data.require_text+"<br>"}${0===joinPrice?"无需电池":"所需电池："+joinPrice}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1);if(MY_API.CONFIG.ANCHOR_FANS_CHECK){let uid=await MY_API.AnchorLottery.getAnchorUid(data.room_id);if(-1!==uid){let fans=await MY_API.AnchorLottery.fansCheck(uid);if(fans<MY_API.CONFIG.ANCHOR_FANS_LEAST)return MY_API.chatLog(`[天选时刻] 忽略UP粉丝数不足的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>${0===joinPrice?"":"所需电池："+joinPrice+"<br>"}UP粉丝数：${fans}<br>奖品：${data.award_name}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1)}}if(MY_API.CONFIG.ANCHOR_IGNORE_PWDROOM){let pwd=await MY_API.AnchorLottery.pwdCheck(data.room_id);if(pwd)return MY_API.chatLog(`[天选时刻] 忽略加密直播间的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>${0===joinPrice?"":"所需电池："+joinPrice+"<br>"}奖品：${data.award_name}<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),$.Deferred().resolve(!1)}switch(data.require_type){case 0:case 1:return $.Deferred().resolve(defaultJoinData);case 2:return BAPI.live_user.get_anchor_in_room(defaultJoinData.roomid).then(res=>{if(MYDEBUG(`API.live_user.get_anchor_in_room(${defaultJoinData.roomid})`,res),res.data){defaultJoinData.uid=res.data.info.uid,medalJson={anchorInfo:{uid:res.data.info.uid,uname:res.data.info.uname,face:res.data.info.face},medal_level:1,target_id:res.data.info.uid},MY_API.AnchorLottery.roomidAndUid[defaultJoinData.roomid]=res.data.info.uid;for(const m of MY_API.AnchorLottery.medal_list)if(m.target_id===defaultJoinData.uid)return m.medal_level<data.require_value?(MY_API.chatLog(`[天选时刻] 忽略粉丝勋章等级不足的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>所需勋章等级：${data.require_value}<br>你的勋章等级：${m.level}<br>${MY_API.AnchorLottery.countDown(data.time)}`,"warning"),!1):defaultJoinData;return MY_API.CONFIG.ANCHOR_AUTO_BUY_LV1_MEDAL&&1===data.require_value?BAPI.x.elec_pay_quick(defaultJoinData.uid).then(re=>{if(MYDEBUG("API.x.elec_pay_quick 自动充电买一级牌子 re",re),0===re.code&&4===re.data.status)return window.toast(`[天选时刻] 自动购买UP【${medalJson.anchorInfo.uname}】的1级粉丝牌（uid=${medalJson.anchorInfo.uid}）成功`,"success"),MY_API.AnchorLottery.medal_list.push(medalJson),defaultJoinData;window.toast(`[天选时刻] 自动购买UP【${medalJson.anchorInfo.uname}】的1级粉丝牌（uid=${medalJson.anchorInfo.uid}）失败<br>${re.data.msg}`,"warning")}):(MY_API.chatLog(`[天选时刻] 忽略有粉丝勋章要求的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>所需勋章等级：${data.require_value}<br>你没有该勋章<br>${MY_API.AnchorLottery.countDown(data.time)}${joinHtml()}`,"warning"),joinAnchorListener(),!1)}return MY_API.chatLog(`[天选时刻] 获取uid出错<br>${res.msg}`,"error"),!1},()=>(MY_API.chatLog("[天选时刻] 获取uid出错，请检查网络","error"),$.Deferred().resolve(!1)));case 3:return BAPI.xlive.getInfoByUser(defaultJoinData.roomid).then(re=>{if(MYDEBUG(`API.xlive.getInfoByUser ${defaultJoinData.roomid}`,re),0===re.code){const privilege_type=re.data.privilege.privilege_type;if(0!==privilege_type&&privilege_type<=data.require_value)return defaultJoinData;{function getPrivilegeText(typeNum){switch(typeNum){case 0:return"无";case 1:return"总督";case 2:return"提督";case 3:return"舰长";default:return"未知"}}const requireText=getPrivilegeText(data.require_value),myText=getPrivilegeText(privilege_type);return MY_API.chatLog(`[天选时刻] 忽略大航海等级不足的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>所需大航海等级：${requireText}<br>你的大航海等级：${myText}<br>${MY_API.AnchorLottery.countDown(data.time)}`,"warning"),!1}}return!1});case 4:return Live_info.user_level>=data.require_value?defaultJoinData:(MY_API.chatLog(`[天选时刻] 忽略直播等级不足的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>所需直播等级：${data.require_value}<br>你的直播等级：UL.${Live_info.user_level}<br>${MY_API.AnchorLottery.countDown(data.time)}`,"warning"),$.Deferred().resolve(!1));case 5:return Live_info.level>=data.require_value?defaultJoinData:(MY_API.chatLog(`[天选时刻] 忽略主站等级不足的天选<br>roomid = ${linkMsg(liveRoomUrl+defaultJoinData.roomid,defaultJoinData.roomid)}, id = ${data.id}<br>奖品名：${data.award_name}<br>所需直播等级：${data.require_value}<br>你的主站等级：Lv${Live_info.level}<br>${MY_API.AnchorLottery.countDown(data.time)}`,"warning"),$.Deferred().resolve(!1));default:return MYDEBUG(`[天选时刻] 未被收录的类型 require_value = ${data.require_value}`,response),$.Deferred().resolve(!1)}}},getAnchorData:roomid=>{if(MY_API.AnchorLottery.getAnchorDataType>MY_API.AnchorLottery.getAnchorDataApiNum)return MY_API.AnchorLottery.getAnchorDataType=1,MY_API.chatLog("[天选时刻] 检查天选的API均无法使用，30分钟后再次尝试","error"),delayCall(()=>MY_API.AnchorLottery.getAnchorData(roomid),18e5);switch(MY_API.AnchorLottery.getAnchorDataType){case 2:return BAPI.xlive.lottery.gettLotteryInfoWeb(roomid).then(response=>(MYDEBUG(`API.xlive.lottery.gettLotteryInfoWeb(${roomid}) response`,response),0===response.code?response.data.anchor:(MY_API.chatLog(`[天选时刻] 检查天选的API(lottery.gettLotteryInfoWeb)无法使用<br>${response.message}<br>尝试更换下一个API`,"warning"),MY_API.AnchorLottery.getAnchorDataType++,MY_API.AnchorLottery.getAnchorData(roomid))));case 1:default:return BAPI.xlive.anchor.check(roomid).then(response=>(MYDEBUG(`API.xlive.anchor.check(${roomid}) response`,response),0===response.code?response.data:(MY_API.chatLog(`[天选时刻] 检查天选的API(anchor.check)无法使用<br>${response.message}<br>尝试更换下一个API`,"warning"),MY_API.AnchorLottery.getAnchorDataType++,MY_API.AnchorLottery.getAnchorData(roomid))))}},check:(roomid,uid)=>MY_API.AnchorLottery.filter.ignore_room(roomid)?MY_API.AnchorLottery.getAnchorData(roomid).then(data=>!!data&&(!!MY_API.AnchorLottery.filter.hasChecked(data)&&(!!MY_API.AnchorLottery.filter.time(data)&&(!!MY_API.AnchorLottery.filter.status(data)&&(addVal(MY_API.AnchorLottery.lotteryResponseList,roomid),addVal(MY_API.AnchorLottery.BLTHuploadRoomList,roomid),MY_API.AnchorLottery.filter.further(data,uid)))))):$.Deferred().resolve(!1),reCheck:data=>MY_API.AnchorLottery.getAnchorData(data.roomid).then(re=>{if(MYDEBUG("MY_API.AnchorLottery.reCheck re",re),re&&re.award_users){let anchorUid=data.uid,award=!1;for(const i of re.award_users)if(i.uid===Live_info.uid){award=!0;break}if(award){if(MY_API.chatLog(`[天选时刻] 天选时刻<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}中奖<br>奖品：${data.award_name}<br>`,"prize"),winPrizeNum++,winPrizeTotalCount++,JQlogRedPoint.text(winPrizeNum),JQlogRedPoint.is(":hidden")&&JQlogRedPoint.show(),MY_API.CONFIG.ANCHOR_PRIVATE_LETTER){const msg={sender_uid:Live_info.uid,receiver_id:anchorUid,receiver_type:1,msg_type:1,msg_status:0,content:'{"content":"'+MY_API.CONFIG.ANCHOR_LETTER_CONTENT+'"}',dev_id:getMsgDevId()};setTimeout(()=>{BAPI.sendMsg(msg).then(res=>{MYDEBUG(`API.sendMsg ${msg}`,res),0===res.code?window.toast(`[天选自动私信] 私信UP(uid = ${anchorUid})成功`,"success"):window.toast(`[天选自动私信] 私信UP(uid = ${anchorUid})失败 ${res.message}`,"error")},()=>{MY_API.chatLog(`[天选自动私信] 私信UP(uid = ${anchorUid})出错，请检查网络`)})},getRandomNum(5e3,8e3))}if(MY_API.CONFIG.ANCHOR_MOVETO_PRIZE_TAG&&-1===findVal(MY_API.AnchorLottery.BLTHprizeList,anchorUid)&&BAPI.relation.addUsers(anchorUid,MY_API.AnchorLottery.anchorPrizeTagid).then(re=>{MYDEBUG(`API.relation.addUsers ${anchorUid} ${MY_API.AnchorLottery.anchorPrizeTagid}`,re),MY_API.AnchorLottery.BLTHprizeList.push(anchorUid),0===re.code?window.toast(`[天选时刻] 移动UP（uid = ${anchorUid}）至分组【${anchorPrizeTagName}】成功`,"success"):window.toast(`[天选时刻] 移动UP（uid = ${anchorUid}）至分组【${anchorPrizeTagName}】失败 ${re.message}`,"caution")},()=>{MY_API.chatLog(`[天选时刻] 移动UP（uid = ${anchorUid}）到分组【${anchorPrizeTagName}】出错，请检查网络`,"error")}),MY_API.CONFIG.PP_NOTICE){const sendData={token:MY_API.CONFIG.PP_token,title:`${GM_info.script.name} 天选时刻中奖通知`,content:`<div style="border: 1px solid rgb(223, 187, 0);color: rgb(145, 123, 0);background: none 0% 0% repeat scroll rgb(255, 215, 0, 30%);text-align: center;border-radius: 5%;padding: 15px 20px;"><h3>天选时刻中奖</h3><br /><h4>中奖账号id：${Live_info.uname}</h4><br /><h4>房间号roomid=${data.roomid}</h4><br /><h4>主播uid=${anchorUid}</h4><br /><h4>抽奖id=${data.id}</h4><br /><h4>获得奖品：</h4><br /><h3>${data.award_name}</h3><br /><h4>请及时私信主播发放奖励</h4></div>`};PP_sendMsg(sendData).then(re=>(MYDEBUG("PP_sendMsg response",re),re.body&&200==re.body.code?window.toast("[天选时刻] 推送加中奖提示发送成功","success"):window.toast(`[天选时刻] 推送加中奖提示发送失败 ${re.response.status}`,"error"),$.Deferred().resolve()))}if(MY_API.CONFIG.SECONDS_NOTICE&&SECONDS_sendMsg(MY_API.CONFIG.SECONDS_QQ,`【${GM_info.script.name}】天选时刻中奖通知\n中奖账号id：${Live_info.uname}\n房间号roomid = ${data.roomid}\n主播uid = ${anchorUid}\n抽奖id = ${data.id}\n获得奖品：\n${data.award_name}\n请及时私信主播发放奖励`).then(re=>(MYDEBUG("SECONDS_sendMsg response",re),re.body&&0===re.body.code?window.toast("[天选时刻] seconds中奖提示发送成功","success"):window.toast(`[天选时刻] seconds中奖提示发送失败 ${re.response.status}`,"error"),$.Deferred().resolve())),MY_API.CONFIG.ServerTurbo_NOTICE&&ServerTurbo_sendMsg(MY_API.CONFIG.ServerTurbo_SendKey,`${GM_info.script.name} 天选时刻中奖通知`,`## 天选时刻中奖  \n  \n## 中奖账号id：${Live_info.uname}  \n  \n## 房间号roomid = ${data.roomid}  \n  \n## 主播uid = ${anchorUid}  \n  \n## 抽奖id = ${data.id}  \n  \n## 获得奖品：  \n  \n# ${data.award_name}  \n  \n## 请及时私信主播发放奖励`).then(re=>(MYDEBUG("ServerTurbo_sendMsg response",re),re.body&&0===re.body.code?window.toast("[实物抽奖] Server酱Turbo版发起推送成功","success"):window.toast(`[实物抽奖] Server酱Turbo版发起推送失败 ${re.response.status}`,"error"),$.Deferred().resolve())),MY_API.CONFIG.GM_NOTICE&&GM_notice("天选时刻中奖",`房间号：${data.roomid}，奖品：${data.award_name}`),MY_API.CONFIG.ANCHOR_DANMU){const danmuContent=MY_API.CONFIG.ANCHOR_DANMU_CONTENT[Math.floor(Math.random()*MY_API.CONFIG.MEDAL_DANMU_CONTENT.length)];MY_API.AnchorLottery.sendDanmu(danmuContent,data.roomid)}if(MY_API.CONFIG.ANCHOR_ADD_TO_WHITELIST){let id_list=GM_getValue("AnchorFollowingList")||[];id_list.push(String(anchorUid)),GM_setValue("AnchorFollowingList",id_list),window.toast(`[天选时刻] 已将UP（uid = ${anchorUid}）添加至白名单`,"success")}}else if(MY_API.CONFIG.ANCHOR_AUTO_DEL_FOLLOW){const id_list=GM_getValue("AnchorFollowingList")||[];if(-1===findVal(id_list,anchorUid)&&-1===findVal(MY_API.AnchorLottery.uidInOriginTag,anchorUid)&&-1===findVal(MY_API.AnchorLottery.uidInSpecialTag,anchorUid))return BAPI.relation.modify(anchorUid,2).then(response=>{MYDEBUG("API.relation.modify response.info.uid, 2",response),0===response.code?window.toast(`[天选自动取关] 取关UP(uid = ${anchorUid})成功`,"success"):window.toast(`[天选自动取关] 取关UP(uid = ${anchorUid})出错  ${response.message}`,"error")},()=>{MY_API.chatLog(`[天选自动取关] 取关UP(uid = ${anchorUid})出错，请检查网络`)})}}}),sendDanmu:async(danmuContent,roomId)=>{let realRoomId=roomId;return Number(roomId)<=1e4&&(realRoomId=await BAPI.room.get_info(roomId).then(res=>(MYDEBUG(`API.room.get_info roomId=${roomId} res`,res),0===res.code?res.data.room_id:(window.toast(`[天选中奖弹幕] 房间号【${roomId}】信息获取失败 ${res.message}`,"error"),roomId)))),BAPI.sendLiveDanmu(danmuContent,realRoomId).then(response=>{MYDEBUG(`[天选中奖弹幕] 弹幕发送内容【${danmuContent}】，房间号【${roomId}】`,response),0===response.code?window.toast(`[天选中奖弹幕] 弹幕【${danmuContent}】发送成功（房间号【${roomId}】）`,"success"):window.toast(`[天选中奖弹幕] 弹幕【${danmuContent}】（房间号【${roomId}】）出错 ${response.msg}`,"caution")})},countDown:(time,color="#da4939")=>void 0!==time?`<span id="time" style="color:${color};">距开奖还有<span class = 'num'>${time}</span>秒</span>`:"",pwdCheck:(room_id,pwd="")=>BAPI.room.verify_room_pwd(room_id,pwd).then(response=>(MYDEBUG(`API.room.verify_room_pwd(${room_id}, ${pwd})`,response),-1===response.code||0!==response.code&&(MY_API.chatLog(`[天选时刻] 直播间加密检查出错，${response.message} 视为加密`,"error"),!0))),join:(data,joinTimes)=>BAPI.xlive.anchor.join(data.id,data.gift_id,data.gift_num).then(response=>{if(MYDEBUG(`API.xlive.anchor.join(${data.id}) response`,response),0!==response.code)return 500===response.code?(MY_API.chatLog(`[天选时刻] 天选参加失败<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}<br>奖品：${data.award_name}<br>${response.msg}<br>3秒后再次尝试参加`,"warning"),setTimeout(()=>MY_API.AnchorLottery.join(data,joinTimes),3e3)):MY_API.chatLog(`[天选时刻] 天选参加失败<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}<br>奖品：${data.award_name}<br>${response.msg}`,"warning");{MY_API.chatLog(`[天选时刻] 成功参加天选<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}<br>${0===data.joinPrice?"":"花费电池："+data.joinPrice+"<br>"}奖品：${data.award_name}<br>${MY_API.AnchorLottery.countDown(data.time)}`,"success");let p=$.Deferred();data.uid?p.resolve():BAPI.live_user.get_anchor_in_room(data.roomid).then(res=>{MYDEBUG(`API.live_user.get_anchor_in_room(${data.roomid})`,res),0===res.code?(data.uid=res.data.info.uid,p.resolve(),MY_API.AnchorLottery.roomidAndUid[data.roomid]=res.data.info.uid):(MY_API.chatLog(`[天选时刻] 获取uid出错，中断后续操作<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}<br>${res.msg}`,"error"),p.reject())},()=>{MY_API.chatLog(`[天选时刻] 获取uid出错，中断后续操作<br>roomid = ${linkMsg(liveRoomUrl+data.roomid,data.roomid)}, id = ${data.id}<br>请检查网络`,"error"),p.reject()}),p.then(()=>{if(MY_API.addAnchor(),MYDEBUG("天选时刻join data",data),1===data.require_type&&MY_API.CONFIG.ANCHOR_MOVETO_FOLLOW_TAG){if(findVal(MY_API.AnchorLottery.uidInOriginTag,data.uid)>-1&&findVal(MY_API.AnchorLottery.uidInSpecialTag,data.uid)>-1)return;setTimeout(()=>{const id_list=GM_getValue("AnchorFollowingList")||[];-1===findVal(id_list,data.uid)&&-1===findVal(MY_API.AnchorLottery.BLTHprizeList,data.uid)&&-1===findVal(MY_API.AnchorLottery.BLTHfollowList,data.uid)&&BAPI.relation.addUsers(data.uid,MY_API.AnchorLottery.anchorFollowTagid).then(re=>{MYDEBUG(`API.relation.addUsers ${data.uid} ${MY_API.AnchorLottery.anchorFollowTagid}`,re),MY_API.AnchorLottery.BLTHfollowList.push(data.uid),0===re.code?window.toast(`[天选时刻] 移动UP（uid = ${data.uid}）至分组【${anchorFollowTagName}】成功`,"success"):window.toast(`[天选时刻] 移动UP（uid = ${data.uid}）至分组【${anchorFollowTagName}】失败 ${re.message}`,"caution")},()=>{MY_API.chatLog(`[天选时刻] 移动UP（uid = ${data.uid}）到分组【${anchorFollowTagName}】出错，请检查网络`,"error")})},getRandomNum(5e3,8e3))}return data.joinPrice>0&&--joinTimes>0?MY_API.AnchorLottery.join(data,joinTimes):setTimeout(()=>MY_API.AnchorLottery.reCheck(data),1e3*data.time+1500)})}}),getAnchorUid:roomid=>MY_API.AnchorLottery.roomidAndUid.hasOwnProperty(roomid)?$.Deferred().resolve(MY_API.AnchorLottery.roomidAndUid[roomid]):BAPI.room.getRoomBaseInfo(roomid).then(response=>{if(MYDEBUG(`API.room.getRoomBaseInfo(${roomid}) getAnchorUid`,response),0===response.code){const uid=response.data.by_room_ids[roomid].uid;return MY_API.AnchorLottery.roomidAndUid[roomid]=uid,uid}return MY_API.chatLog(`[天选时刻] 获取uid出错<br>roomid = ${linkMsg(liveRoomUrl+roomid,roomid)}<br>${response.message}`,"error"),-1}),fansCheck:uid=>{const rnd=getRandomNum(0,1);switch(rnd){case 0:return BAPI.x.stat(uid).then(response=>(MYDEBUG(`API.x.stat(${uid}) fansCheck`,response),0===response.code?response.data.follower:(MY_API.chatLog(`[天选时刻] 获取粉丝数(uid=${uid})失败 ${response.message}`,"error"),-1)));case 1:return BAPI.x.card(uid).then(response=>(MYDEBUG(`API.x.card(${uid}) fansCheck`,response),0===response.code?response.data.follower:(MY_API.chatLog(`[天选时刻] 获取粉丝数(uid=${uid})错误 ${response.message}`,"error"),-1)));default:return-1}},awpush:{taskName:{POLLING_HOT_ROOMS:"轮询热门直播间",POLLING_LIVEROOMS:"轮询已关注的开播直播间",POLLING_AREA:"轮询指定分区"},userInfo:{task:void 0,secret:void 0,area_data:void 0,sleep_time:void 0,interval:void 0,max_room:void 0},polling_allRoomList:async()=>{MY_API.AnchorLottery.allRoomList.length>MY_API.AnchorLottery.awpush.userInfo.max_room&&(MY_API.AnchorLottery.allRoomList=[...MY_API.AnchorLottery.allRoomList.slice(0,MY_API.AnchorLottery.awpush.userInfo.max_room)]),MY_API.chatLog(`[天选时刻] 开始检查天选（共${MY_API.AnchorLottery.allRoomList.length}个房间）`,"success");let lastStatus=MY_API.AnchorLottery.awpush.websocket.status;for(const room of MY_API.AnchorLottery.allRoomList){if("open"!==lastStatus&&"open"===MY_API.AnchorLottery.awpush.websocket.status)return $.Deferred().resolve("return");lastStatus=MY_API.AnchorLottery.awpush.websocket.status;let p=$.Deferred();const uid=MY_API.AnchorLottery.roomidAndUid.hasOwnProperty(room)?MY_API.AnchorLottery.roomidAndUid[room]:void 0;MY_API.CONFIG.ANCHOR_WAIT_REPLY||p.resolve(),MY_API.AnchorLottery.awpush.check(room,uid).then(re=>{re?MY_API.AnchorLottery.join(re,MY_API.CONFIG.ANCHOR_GOLD_JOIN_TIMES).then(()=>p.resolve()):p.resolve()}),await p,await sleep(MY_API.AnchorLottery.awpush.userInfo.interval)}},handleTask:async()=>{const sleepTime=sleepCheck(MY_API.CONFIG);if(sleepTime)return MYDEBUG("[天选时刻] awpush",`处于休眠时段，${sleepTime}毫秒后再次检查天选`),MY_API.AnchorLottery.awpush.websocket.status="active_close",MY_API.AnchorLottery.awpush.websocket.ws.close(),MY_API.chatLog(`[天选时刻] 处于休眠时段，将会在<br>${new Date(ts_ms()+sleepTime).toLocaleString()}<br>结束休眠并再次连接awpush`,"warning"),setTimeout(()=>MY_API.AnchorLottery.awpush.websocket.run(),sleepTime);switch(MY_API.AnchorLottery.awpush.userInfo.task){case"POLLING_LIVEROOMS":await MY_API.AnchorLottery.getLiveUsers(),MY_API.AnchorLottery.liveRoomList=[];for(const i of MY_API.AnchorLottery.liveUserList){let realRoomId,roomid;const roomidList=i.link.match(/^https?:\/\/live\.bilibili\.com\/(\d+)/),uid=i.uid;if(Array.isArray(roomidList)&&roomidList.length>=2&&(roomid=roomidList[1]),!roomid)return MYERROR("[天选时刻] 获取已关注开播直播间号失败",roomidList);realRoomId=Number(roomid)<=1e4?await BAPI.room.get_info(roomid).then(res=>(MYDEBUG(`API.room.get_info roomid=${roomid} res`,res),0===res.code?res.data.room_id:(window.toast(`[天选时刻]获取房间【${roomid}】信息出错 ${res.message}`,"error"),roomid))):roomid,addVal(MY_API.AnchorLottery.liveRoomList,realRoomId),MY_API.AnchorLottery.roomidAndUid[roomid]=uid,MY_API.AnchorLottery.roomidAndUid[realRoomId]=uid}MY_API.chatLog(`[天选时刻] 已关注的开播直播间获取完毕<br>共${MY_API.AnchorLottery.liveRoomList.length}个`,"success");for(const r of MY_API.AnchorLottery.liveRoomList)addVal(MY_API.AnchorLottery.allRoomList,r);await MY_API.AnchorLottery.awpush.polling_allRoomList();break;case"POLLING_AREA":await MY_API.AnchorLottery.getRoomList(MY_API.AnchorLottery.awpush.userInfo.area_data);for(const r of MY_API.AnchorLottery.roomidList)addVal(MY_API.AnchorLottery.allRoomList,r);await MY_API.AnchorLottery.awpush.polling_allRoomList();break;default:return void MYERROR("awpush 未知任务",MY_API.AnchorLottery.awpush.userInfo.task)}const json={code:"GET_TASK",uid:Live_info.uid,secret:MY_API.AnchorLottery.awpush.userInfo.secret};setTimeout(()=>MY_API.AnchorLottery.awpush.websocket.desend(JSON.stringify(json)),MY_API.AnchorLottery.awpush.userInfo.sleep_time);const sleep_time=(MY_API.AnchorLottery.awpush.userInfo.sleep_time/1e3).toFixed(0);MY_API.chatLog(`[天选时刻] ${sleep_time}秒后开始执行下一轮任务`),MYDEBUG(`awpush ${sleep_time}秒后运行下一轮任务`)},check:(roomid,uid)=>MY_API.AnchorLottery.getAnchorData(roomid).then(data=>{if(!data)return!1;if(!MY_API.AnchorLottery.filter.hasChecked(data))return!1;if(!MY_API.AnchorLottery.filter.time(data))return!1;if(!MY_API.AnchorLottery.filter.status(data))return!1;const update_data={code:"UPDATE_ANCHOR_DATA",uid:Live_info.uid,secret:MY_API.AnchorLottery.awpush.userInfo.secret,data:MY_API.AnchorLottery.filter.delUselessData(data)};return MYDEBUG("awpush 上传天选数据: ",update_data),MY_API.AnchorLottery.awpush.websocket.desend(JSON.stringify(update_data)),addVal(MY_API.AnchorLottery.lotteryResponseList,roomid),addVal(MY_API.AnchorLottery.BLTHuploadRoomList,roomid),MY_API.AnchorLottery.filter.further(data,uid)}),websocket:{wsinit:function(){MY_API.AnchorLottery.awpush.websocket.ws=new WebSocket("wss://andywang.top:3001/ws")},ws:null,status:"close",desend:function(...arg){let ws;MY_API.AnchorLottery.awpush.websocket.ws?MY_API.AnchorLottery.awpush.websocket.ws.send(pako.deflate(arg[0])):MYERROR("awpush 暂时无法发送消息, 等待重连...")},run:()=>{MY_API.AnchorLottery.awpush.websocket.wsinit();let ws=MY_API.AnchorLottery.awpush.websocket.ws,secret,task,area_data,sleep_time,interval,max_room,heartBeat={timeout:3e4,timeoutObj:null,serverTimeoutObj:null,reset:function(){clearTimeout(this.timeoutObj),clearTimeout(this.serverTimeoutObj),this.start()},start:function(){let self=this;this.timeoutObj=setTimeout((function(){ws.send("ping"),self.serverTimeoutObj=setTimeout((function(){ws.close()}),self.timeout)}),this.timeout)},stop:function(){clearTimeout(this.timeoutObj),clearTimeout(this.serverTimeoutObj)}};function reconnect(){const status=MY_API.AnchorLottery.awpush.websocket.status;"reconnecting"!==status&&"open"!==status&&(MY_API.AnchorLottery.awpush.websocket.status="reconnecting",MY_API.AnchorLottery.awpush.websocket.ws=null,setTimeout(()=>MY_API.AnchorLottery.awpush.websocket.run(),3e4))}ws.desend=MY_API.AnchorLottery.awpush.websocket.desend,ws.onopen=function(){MY_API.AnchorLottery.awpush.websocket.status="open",heartBeat.start();const verify={code:"VERIFY_APIKEY",uid:Live_info.uid,apikey:MY_API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]},str=JSON.stringify(verify);MYDEBUG("awpush 发送身份验证数据",str),ws.desend(str)},ws.onmessage=function(event){if(MYDEBUG("awpush 收到来自服务端的消息",event.data),"pong"===event.data)heartBeat.reset();else{let json="",reader=new FileReader;reader.onload=function(){if(json=JSON.parse(pako.inflate(reader.result,{to:"string"})),0!==json.code)return MYERROR("awpush 收到消息中的code不为0，出错",json);switch(MYDEBUG("awpush 解析后消息",json),json.type){case"WS_OPEN":window.toast("[awpush] 连接成功","success");break;case"HAND_OUT_TASKS":secret=json.data.secret,task=json.data.task,area_data=json.data.area_data||{},sleep_time=json.data.sleep_time||3e4,interval=json.data.interval||500,max_room=json.data.max_room||500,window.toast(`[awpush] 获得任务: ${MY_API.AnchorLottery.awpush.taskName[task]}${area_data.name?" - "+area_data.name:""}`,"info"),MYDEBUG(`awpush HAND_OUT_TASKS 分发任务 获得任务: ${task}, secret: ${secret}, 最大轮询房间数: ${max_room}, 休息时间: ${sleep_time}毫秒, 请求间隔: ${interval}毫秒, 分区信息`,area_data),MY_API.AnchorLottery.awpush.userInfo.task=task,MY_API.AnchorLottery.awpush.userInfo.secret=secret,MY_API.AnchorLottery.awpush.userInfo.area_data=area_data,MY_API.AnchorLottery.awpush.userInfo.sleep_time=sleep_time,MY_API.AnchorLottery.awpush.userInfo.interval=interval,MY_API.AnchorLottery.awpush.userInfo.max_room=max_room,MY_API.AnchorLottery.awpush.handleTask();break;case"HAND_OUT_ANCHOR_DATA":{const data=json.data;if(window.toast(`[awpush] 获得已解析的天选数据 id=${data.id} roomid=${data.room_id}`),MYDEBUG("awpush 获得解析后的天选数据，准备参加",data),!MY_API.AnchorLottery.filter.hasChecked(data))return!1;if(!MY_API.AnchorLottery.filter.ignore_room(data.room_id))return!1;if(!MY_API.AnchorLottery.filter.time(data))return!1;if(!MY_API.AnchorLottery.filter.status(data))return!1;MY_API.AnchorLottery.filter.further(data).then(re=>{re&&MY_API.AnchorLottery.join(re,MY_API.CONFIG.ANCHOR_GOLD_JOIN_TIMES)});break}case"RES_UPDATE_ANCHOR_DATA":window.toast(`[awpush] 上传天选数据（id=${json.data.id}）成功`,"success");break;default:window.toast(`[awpush] 未知的消息种类 ${json.type}`,"warning"),MYERROR("awpush 未知的消息种类",json)}},reader.readAsBinaryString(event.data)}},ws.onclose=function(event){if("active_close"===MY_API.AnchorLottery.awpush.websocket.status)return MYDEBUG("awpush 已主动断开连接"),void window.toast("[awpush] 已主动断开连接","warning");MY_API.AnchorLottery.awpush.websocket.status="close",heartBeat.stop();let json={};try{json=JSON.parse(event.reason)}catch(e){json.data=event.reason}window.toast(`[awpush] ${json.data||"连接已关闭"} 30秒后尝试重连`,"warning"),MYDEBUG("awpush 服务端已关闭连接，30秒后尝试重连",event.code,event.reason),reconnect()}}},run:()=>{MY_API.AnchorLottery.awpush.websocket.run()}},run:async()=>{if(!MY_API.CONFIG.ANCHOR_LOTTERY||otherScriptsRunning)return $.Deferred().resolve();if("resolved"!==medal_info.status.state())return MY_API.chatLog("[天选时刻] 粉丝勋章列表未被完全获取，暂停运行","error"),medal_info.status.then(()=>MY_API.AnchorLottery.run());if(MY_API.AnchorLottery.medal_list=[...medal_info.medal_list],MY_API.chatLog("[天选时刻] 开始获取关注分组信息"),(MY_API.CONFIG.ANCHOR_MOVETO_FOLLOW_TAG||MY_API.CONFIG.ANCHOR_MOVETO_PRIZE_TAG)&&await MY_API.AnchorLottery.getTag([anchorFollowTagName,anchorPrizeTagName]),await MY_API.AnchorLottery.getUpInBLTHTag(Live_info.uid,[MY_API.AnchorLottery.anchorFollowTagid,MY_API.AnchorLottery.anchorPrizeTagid]),await MY_API.AnchorLottery.getUpInOriginTag(Live_info.uid),await MY_API.AnchorLottery.getUpInSpecialTag(Live_info.uid),MY_API.CONFIG.ANCHOR_UPLOAD_DATA&&MY_API.AnchorLottery.uploadData(),MY_API.CONFIG.ANCHOR_UPLOAD_ROOMLIST&&MY_API.AnchorLottery.uploadRoomList(),MY_API.CONFIG.ANCHOR_AWPUSH)return MY_API.AnchorLottery.awpush.run();function waitForNextRun(Fn,firstRun=!1,toNext=!1){const sleepTime=sleepCheck(MY_API.CONFIG);if(sleepTime)return MYDEBUG("[天选时刻]",`处于休眠时段，${sleepTime}毫秒后再次检查天选`),MY_API.chatLog(`[天选时刻] 处于休眠时段，将会在<br>${new Date(ts_ms()+sleepTime).toLocaleString()}<br>结束休眠并继续检查天选`,"warning"),setTimeout(()=>Fn(),sleepTime);{const intervalTime=ts_ms()-MY_API.CACHE.AnchorLottery_TS,settingInterval=6e4*MY_API.CONFIG.ANCHOR_CHECK_INTERVAL,tillNextRun=settingInterval-intervalTime;return toNext?(MYDEBUG("[天选时刻]",`将在${settingInterval}毫秒后检查天选`),firstRun?MY_API.chatLog(`[天选时刻] <br>将在${MY_API.CONFIG.ANCHOR_CHECK_INTERVAL}分钟后开始检查天选`,"success"):MY_API.chatLog(`[天选时刻] 本次检查结束，将在<br>${MY_API.CONFIG.ANCHOR_CHECK_INTERVAL}分钟后继续检查天选`,"success"),setTimeout(()=>Fn(),settingInterval)):tillNextRun<=0?Fn():(MYDEBUG("[天选时刻]",`将在${tillNextRun}毫秒后检查天选`),firstRun?MY_API.chatLog(`[天选时刻] <br>将在${parseInt(tillNextRun/6e4)}分${parseInt(tillNextRun%6e4/1e3)}秒后开始检查天选`,"success"):MY_API.chatLog(`[天选时刻] 本次检查结束，将在<br>${parseInt(tillNextRun/6e4)}分${parseInt(tillNextRun%6e4/1e3)}秒后继续检查天选`,"success"),setTimeout(()=>Fn(),tillNextRun))}}async function getDataAndJoin(){const sleepTime=sleepCheck(MY_API.CONFIG);if(sleepTime)return MYDEBUG("[天选时刻]",`处于休眠时段，${sleepTime}毫秒后再次检查天选`),MY_API.chatLog(`[天选时刻] 处于休眠时段，将会在<br>${new Date(ts_ms()+sleepTime).toLocaleString()}<br>结束休眠并继续检查天选`,"warning"),setTimeout(()=>getDataAndJoin(),sleepTime);{if(MY_API.CONFIG.ANCHOR_TYPE_SERVER&&await MY_API.AnchorLottery.getDataFromBLTHserver(),MY_API.CONFIG.ANCHOR_TYPE_POLLING&&await MY_API.AnchorLottery.getHotRoomList(MY_API.CONFIG.ANCHOR_IGNORE_AREA?MY_API.CONFIG.ANCHOR_IGNORE_AREA_LIST:[]),MY_API.CONFIG.ANCHOR_TYPE_LIVEROOM&&await MY_API.AnchorLottery.getLotteryInfoFromRoom(),MY_API.CONFIG.ANCHOR_TYPE_FOLLOWING){await MY_API.AnchorLottery.getLiveUsers(),MY_API.AnchorLottery.liveRoomList=[];for(const i of MY_API.AnchorLottery.liveUserList){let realRoomId,roomid;const roomidList=i.link.match(/^https?:\/\/live\.bilibili\.com\/(\d+)/),uid=i.uid;if(Array.isArray(roomidList)&&roomidList.length>=2&&(roomid=roomidList[1]),!roomid)return MYERROR("[天选时刻] 获取已关注开播直播间号失败",roomidList);realRoomId=Number(roomid)<=1e4?await BAPI.room.get_info(roomid).then(res=>(MYDEBUG(`API.room.get_info roomid=${roomid} res`,res),0===res.code?res.data.room_id:(window.toast(`[天选时刻]获取房间【${roomid}】信息出错 ${res.message}`,"error"),roomid))):roomid,addVal(MY_API.AnchorLottery.liveRoomList,realRoomId),MY_API.AnchorLottery.roomidAndUid[roomid]=uid,MY_API.AnchorLottery.roomidAndUid[realRoomId]=uid}MY_API.chatLog(`[天选时刻] 已关注的开播直播间获取完毕<br>共${MY_API.AnchorLottery.liveRoomList.length}个`,"success")}MY_API.CONFIG.ANCHOR_TYPE_CUSTOM?MY_API.AnchorLottery.customLiveRoomList=MY_API.CONFIG.ANCHOR_CUSTOM_ROOMLIST:MY_API.AnchorLottery.customLiveRoomList=[];const id_list=[...MY_API.AnchorLottery.BLTHserverRoomList,...MY_API.AnchorLottery.customLiveRoomList,...MY_API.AnchorLottery.liveRoomList,...MY_API.AnchorLottery.introRoomList,...MY_API.AnchorLottery.roomidList];for(const r of id_list)addVal(MY_API.AnchorLottery.allRoomList,r);MY_API.AnchorLottery.allRoomList.length>MY_API.CONFIG.ANCHOR_MAXROOM&&(MY_API.AnchorLottery.allRoomList=MY_API.AnchorLottery.allRoomList.splice(0,MY_API.CONFIG.ANCHOR_MAXROOM)),MY_API.chatLog(`[天选时刻] 开始检查天选（共${MY_API.AnchorLottery.allRoomList.length}个房间）`,"success");for(const room of MY_API.AnchorLottery.allRoomList){let p=$.Deferred();const uid=MY_API.AnchorLottery.roomidAndUid.hasOwnProperty(room)?MY_API.AnchorLottery.roomidAndUid[room]:void 0;MY_API.CONFIG.ANCHOR_WAIT_REPLY||p.resolve(),MY_API.AnchorLottery.check(room,uid).then(re=>{re?MY_API.AnchorLottery.join(re,MY_API.CONFIG.ANCHOR_GOLD_JOIN_TIMES).then(()=>p.resolve()):p.resolve()}),await p,await sleep(MY_API.CONFIG.ANCHOR_INTERVAL)}return MY_API.CACHE.AnchorLottery_TS=ts_ms(),MY_API.saveCache(),waitForNextRun(getDataAndJoin,!1,!0)}}return waitForNextRun(getDataAndJoin,!0)}},DANMU_MODIFY:{maxLength:0,configJson:{DANMU_MODIFY_REGEX:[],DANMU_MODIFY_UID:[],DANMU_MODIFY_POOL:[],DANMU_MODIFY_SIZE:[],DANMU_MODIFY_COLOR:[]},handleConfig:()=>{for(const i in MY_API.DANMU_MODIFY.configJson)MY_API.DANMU_MODIFY.configJson[i]=MY_API.CONFIG[i];for(const i in MY_API.DANMU_MODIFY.configJson)MY_API.DANMU_MODIFY.configJson[i].length>MY_API.DANMU_MODIFY.maxLength&&(MY_API.DANMU_MODIFY.maxLength=MY_API.DANMU_MODIFY.configJson[i].length);for(const i in MY_API.DANMU_MODIFY.configJson)if(MY_API.DANMU_MODIFY.configJson[i].length<MY_API.DANMU_MODIFY.maxLength){let lastIndex=MY_API.DANMU_MODIFY.configJson[i].length-1;for(let c=lastIndex;c<MY_API.DANMU_MODIFY.maxLength-1;c++)MY_API.DANMU_MODIFY.configJson[i].push(MY_API.DANMU_MODIFY.configJson[i][lastIndex])}},check:info=>{for(let i=0;i<MY_API.DANMU_MODIFY.maxLength;i++){let regex,uid=info[2][0],danmu=info[1];try{regex=eval(MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_REGEX[i])}catch(e){MYDEBUG("bliveproxy",`正则表达式出错 ${MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_REGEX[i]}`),regex=/^【/}if(regex.test(danmu)||MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_UID[i]==uid)return i}return-1},run:()=>{if(!SP_CONFIG.DANMU_MODIFY)return $.Deferred().resolve();MY_API.DANMU_MODIFY.handleConfig(),bliveproxy.addCommandHandler("DANMU_MSG",command=>{if(!SP_CONFIG.DANMU_MODIFY)return $.Deferred().resolve();let info=command.info;MYDEBUG("bliveproxy DANMU_MSG",info);let index=MY_API.DANMU_MODIFY.check(info);if(-1===index)return $.Deferred().resolve();info[0][1]=MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_POOL[index],info[0][2]*=MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_SIZE[index],info[0][3]=Number("0x"+MY_API.DANMU_MODIFY.configJson.DANMU_MODIFY_COLOR[index].replace("#",""))})}},PLATE_ACTIVITY:{plateData:[],maxTimes:20,getPlateData:()=>XHR({GM:!0,anonymous:!0,method:"GET",url:"https://gitee.com/java_cn/BILIBLI_RES/raw/master/HNPLATE/activities.json",responseType:"json"}).then(response=>(MYDEBUG("MY_API.PLATE_ACTIVITY.getPlateData response",response),200===response.response.status?response.body:(MY_API.chatLog("[转盘抽奖] 获取转盘数据失败，请检查网络","error"),delayCall(()=>MY_API.PLATE_ACTIVITY.getPlateData(),18e5)))),getLotteryMyTimes:obj=>BAPI.x.activity.getLotteryMyTimes(obj.sid).then(response=>{switch(MYDEBUG(`API.x.activity.getLotteryMyTimes(${obj.sid})`,response),response.code){case 0:return response.data.times;case 75003:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动已结束`,"warning"),-1;case 75001:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动不存在`,"warning"),-1;case 412:case"NET_ERR":return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>获取抽奖次数API被风控，30分钟后重试<br>${response.message}`,"error"),delayCall(()=>MY_API.PLATE_ACTIVITY.getLotteryMyTimes(obj),18e5);default:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>获取剩余抽奖次数出错<br>${response.message}`,"success"),-1}}),addLotteryTimes:obj=>BAPI.x.activity.addLotteryTimes(obj.sid).then(response=>{switch(MYDEBUG(`API.x.activity.addLotteryTimes(${obj.sid})`,response),response.code){case 0:return 0;case 75003:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动已结束`,"warning"),2;case 75001:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动不存在`,"warning"),2;case 75405:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>获取抽奖次数已达到上限`,"warning"),1;case 412:case"NET_ERR":return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>增加抽奖次数API被风控，30分钟后重试<br>${response.message}`,"error"),delayCall(()=>MY_API.PLATE_ACTIVITY.addLotteryTimes(obj),18e5);default:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>增加抽奖次数出错<br>${response.message}`,"error"),2}}),doLottery:(obj,num)=>BAPI.x.activity.doLottery(obj.sid).then(response=>{switch(MYDEBUG(`API.x.activity.doLottery(${obj.sid})`,response),response.code){case 0:const giftName=response.data[0].gift_name;return giftName.includes("未中奖")?MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】第${num}次抽奖<br>未中奖`,"info"):MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】第${num}次抽奖中奖<br>奖品：${giftName}`,"prize"),!0;case 75003:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动已结束`,"warning"),!1;case 75001:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>活动不存在`,"warning"),!1;case 75415:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>抽奖次数已用尽`,"warning"),!1;case 75400:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>抽奖速度过快，10秒后重试`,"warning"),delayCall(()=>MY_API.PLATE_ACTIVITY.doLottery(obj,num),1e4);case 412:case"NET_ERR":return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】<br>参与抽奖API被风控，30分钟后重试<br>${response.message}`,"warning"),delayCall(()=>MY_API.PLATE_ACTIVITY.doLottery(obj,num),18e5);default:return MY_API.chatLog(`[转盘抽奖] 转盘【${obj.name}】参与抽奖出错<br>${response.message}`,"error"),!1}}),run:async(cacheCheck=!0)=>{if(!MY_API.CONFIG.PLATE_ACTIVITY||otherScriptsRunning)return $.Deferred().resolve();const sleepTime=sleepCheck(MY_API.CONFIG);if(sleepTime)return MYDEBUG("[转盘抽奖]",`处于休眠时段，${sleepTime}毫秒后再次检查转盘`),MY_API.chatLog(`[转盘抽奖] 处于休眠时段，将会在<br>${new Date(ts_ms()+sleepTime).toLocaleString()}<br>结束休眠并继续检查转盘`,"warning"),setTimeout(()=>MY_API.PLATE_ACTIVITY.run(),sleepTime);if(cacheCheck){const diff=ts_ms()-MY_API.CACHE.PlateActivity_TS,interval=6e4*MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL||6e5,tillnextRun=interval-diff;if(diff<interval)return MY_API.chatLog(`[转盘抽奖] 将会在${(tillnextRun/6e4).toFixed(2)}分钟后运行转盘抽奖`,"info"),MYDEBUG("[转盘抽奖]",`${tillnextRun}毫秒后再次运行`),setTimeout(MY_API.PLATE_ACTIVITY.run,tillnextRun),$.Deferred().resolve()}MY_API.PLATE_ACTIVITY.plateData=await MY_API.PLATE_ACTIVITY.getPlateData();for(const plate of MY_API.PLATE_ACTIVITY.plateData.acriviries_type1){if(!plate.sid)continue;MY_API.chatLog(`[转盘抽奖] 开始获取转盘【${plate.name}】的抽奖次数`,"info");let lotteryTimes=await MY_API.PLATE_ACTIVITY.getLotteryMyTimes(plate);if(-1===lotteryTimes)continue;let nextFlag=!1;for(let i=0;i<MY_API.PLATE_ACTIVITY.maxTimes;i++){let code=await MY_API.PLATE_ACTIVITY.addLotteryTimes(plate);if(await sleep(MY_API.CONFIG.PLATE_ACTIVITY_GETTIMES_INTERVAL),0===code){let newLotteryTimes=await MY_API.PLATE_ACTIVITY.getLotteryMyTimes(plate);if(newLotteryTimes>lotteryTimes){window.toast(`[转盘抽奖] 转盘【${plate.name}】增加抽奖次数成功`,"success"),lotteryTimes=newLotteryTimes;continue}MY_API.chatLog(`[转盘抽奖] 转盘【${plate.name}】增加抽奖次数失败`,"warning");break}if(1===code)break;if(2===code){nextFlag=!0;break}}if(!nextFlag&&!(lotteryTimes<=0)){MY_API.chatLog(`[转盘抽奖] 转盘【${plate.name}】共有${lotteryTimes}次抽奖机会，开始抽奖`,"success");for(let i=1;i<=MY_API.PLATE_ACTIVITY.maxTimes;i++){let bool=await MY_API.PLATE_ACTIVITY.doLottery(plate,i);if(await sleep(1e3*MY_API.CONFIG.PLATE_ACTIVITY_LOTTERY_INTERVAL),!bool)break;if(--lotteryTimes<=0)break}}}return MY_API.CACHE.PlateActivity_TS=ts_ms(),MY_API.saveCache(),MY_API.chatLog(`[转盘抽奖] 本轮抽奖结束，${MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL}分钟后再次检查`,"info"),setTimeout(()=>MY_API.PLATE_ACTIVITY.run(!1),6e4*MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL)}},RESERVE_ACTIVITY:{reserveFilterData:{},maxCheckedSid:0,getReserveData:()=>XHR({GM:!0,anonymous:!0,method:"GET",url:"https://gitee.com/java_cn/BILIBLI_RES/raw/master/HNPLATE/reserveSids.json",responseType:"json"}).then(response=>(MYDEBUG("MY_API.PLATE_ACTIVITY.getPlateData response",response),200===response.response.status?response.body:(MY_API.chatLog("[预约抽奖] 获取直播预约数据失败，请检查网络","error"),delayCall(()=>MY_API.RESERVE_ACTIVITY.getReserveData(),18e5)))),get_reserve_info:json=>{let listStr="";for(const key in json){const numKey=Number(key);numKey<=MY_API.RESERVE_ACTIVITY.maxCheckedSid||(listStr=listStr.concat(key,","),MY_API.RESERVE_ACTIVITY.maxCheckedSid=numKey)}return 0!==listStr.length&&(listStr=listStr.substring(0,listStr.length-1),BAPI.x.get_reserve_info(listStr).then(response=>{if(MYDEBUG(`API.x.get_reserve_info(${listStr}) response`,response),0===response.code){let list=JSON.parse(JSON.stringify(response.data.list));for(const key in list)1!==list[key].isFollow&&150!==list[key].state||(addVal(MY_API.RESERVE_ACTIVITY.noCheckSid,key),delete list[key]);return list==={}&&(list=!1),list}return MY_API.chatLog(`[预约抽奖] 获取抽奖信息失败<br>${response.message}`,"error"),!1}))},reserve:obj=>BAPI.x.reserve(obj.sid).then(response=>{switch(MYDEBUG(`API.x.reserve(${obj.sid}) response`,response),response.code){case 0:return MY_API.chatLog(`[预约抽奖] 成功参加预约抽奖<br>${obj.name}<br>${obj.prizeInfo.text}`,"success"),!0;case 75003:return MY_API.chatLog(`[预约抽奖] 活动已结束<br>${obj.name}`,"warning"),!1;case 75077:return MY_API.chatLog(`[预约抽奖] 重复参加活动<br>${obj.name}`,"warning"),!1}}),run:async(cacheCheck=!0)=>{if(!MY_API.CONFIG.RESERVE_ACTIVITY||otherScriptsRunning)return $.Deferred().resolve();const sleepTime=sleepCheck(MY_API.CONFIG);function endFunc(){return MY_API.CACHE.PlateActivity_TS=ts_ms(),MY_API.saveCache(),setTimeout(()=>MY_API.RESERVE_ACTIVITY.run(!1),6e4*MY_API.CONFIG.RESERVE_ACTIVITY_CHECK_INTERVAL)}if(MY_API.RESERVE_ACTIVITY.maxCheckedSid=GM_getValue("reserveMaxCheckedSid")||0,sleepTime)return MYDEBUG("[预约抽奖]",`处于休眠时段，${sleepTime}毫秒后再次检查预约抽奖`),MY_API.chatLog(`[预约抽奖] 处于休眠时段，将会在<br>${new Date(ts_ms()+sleepTime).toLocaleString()}<br>结束休眠并继续检查抽奖`,"warning"),setTimeout(()=>MY_API.RESERVE_ACTIVITY.run(),sleepTime);if(cacheCheck){const diff=ts_ms()-MY_API.CACHE.ReserveActivity_TS,interval=6e4*MY_API.CONFIG.RESERVE_ACTIVITY_CHECK_INTERVAL||6e5,tillnextRun=interval-diff;if(diff<interval)return MY_API.chatLog(`[预约抽奖] 将会在${(tillnextRun/6e4).toFixed(2)}分钟后运行预约抽奖`,"info"),MYDEBUG("[预约抽奖]",`${tillnextRun}毫秒后再次运行`),setTimeout(MY_API.RESERVE_ACTIVITY.run,tillnextRun),$.Deferred().resolve()}let reserveData=await MY_API.RESERVE_ACTIVITY.getReserveData();if(MY_API.RESERVE_ACTIVITY.reserveFilterData=await MY_API.RESERVE_ACTIVITY.get_reserve_info(reserveData),!MY_API.RESERVE_ACTIVITY.reserveFilterData)return MY_API.chatLog(`[预约抽奖] 暂无可参与抽奖，${MY_API.CONFIG.RESERVE_ACTIVITY_CHECK_INTERVAL}分钟后再次检查`,"info"),endFunc();for(const r in MY_API.RESERVE_ACTIVITY.reserveFilterData){const obj=MY_API.RESERVE_ACTIVITY.reserveFilterData[r];let next=!1;if(MY_API.CONFIG.RESERVE_ACTIVITY_IGNORE_BLACKLIST)for(const str of MY_API.CONFIG.RESERVE_ACTIVITY_BLACKLIST_WORD)if(isRegexp.test(str))try{const reg=eval(str);if(reg.test(obj.prizeInfo.text)){MY_API.chatLog(`[预约抽奖] 忽略存疑抽奖<br>奖品名：${obj.prizeInfo.text}<br>匹配正则：${str}`,"warning"),next=!0;break}}catch(e){MYDEBUG("[天选时刻] 正则eval出错：",str)}else if(obj.prizeInfo.text.toLowerCase().indexOf(str.toLowerCase())>-1){MY_API.chatLog(`[预约抽奖] 忽略存疑抽奖<br>奖品名：${obj.prizeInfo.text}<br>含有关键字：${str}`,"warning"),next=!0;break}next||(await MY_API.RESERVE_ACTIVITY.reserve(obj),await sleep(MY_API.CONFIG.RESERVE_ACTIVITY_INTERVAL))}return GM_setValue("reserveMaxCheckedSid",MY_API.RESERVE_ACTIVITY.maxCheckedSid),MY_API.chatLog(`[预约抽奖] 本轮抽奖结束，${MY_API.CONFIG.PLATE_ACTIVITY_CHECK_INTERVAL}分钟后再次检查`,"info"),endFunc()}},GET_PRIVILEGE:{check_cache:()=>ts_ms()>=MY_API.CACHE.NextVipPrivilege_TS,save_cache:expire_time=>{const newTs=1e3*(expire_time+2);if(newTs<MY_API.CACHE.NextVipPrivilege_TS||!MY_API.CACHE.NextVipPrivilege_TS)return MY_API.CACHE.NextVipPrivilege_TS=newTs,MY_API.saveCache(!1)},get_info:()=>BAPI.x.vip.privilege.my().then(response=>(MYDEBUG("API.x.vip.privilege.my response",response),0===response.code?response.data.list:(window.toast(`[大会员] 获取权益状态失败 ${response.message}`,"error"),!1))),receive:type=>BAPI.x.vip.privilege.receive(type).then(response=>(MYDEBUG("API.x.vip.privilege.receive response",response),0===response.code||(window.toast(`[大会员] 领取权益失败(type=${type}) ${response.message}`,"error"),!1))),run:async()=>{if(!MY_API.CONFIG.GET_PRIVILEGE||otherScriptsRunning||0===Live_info.vipStatus||ts_ms()<MY_API.CACHE.NextVipPrivilege_TS)return $.Deferred().resolve();let privilege_info=await MY_API.GET_PRIVILEGE.get_info();if(!privilege_info)return $.Deferred().resolve();let flag=!1;for(const i of privilege_info)0===i.state&&(flag=await MY_API.GET_PRIVILEGE.receive(i.type,i.expire_time));if(flag&&window.toast("[大会员] 权益已领取","success"),privilege_info.every(obj=>1===obj.state)){let min_expire_time=privilege_info[0].expire_time;for(let i=1;i<privilege_info.length;i++)privilege_info[i].expire_time<min_expire_time&&(min_expire_time=privilege_info[i].expire_time);MY_API.GET_PRIVILEGE.save_cache(min_expire_time)}return $.Deferred().resolve()}}};MY_API.init().then(()=>{try{let runNext=$.Deferred();if(SP_CONFIG.showEula){const eula=GM_getResourceText("eula");myopen({title:`${GM_info.script.name}最终用户许可协议`,btn:["同意协议并继续","不同意"],closeBtn:0,area:[String(.618*$(window).width())+"px",String(.8*$(window).height())+"px"],content:eula,yes:function(index){SP_CONFIG.showEula=!1,saveSpConfig(),layer.close(index),runNext.resolve()},btn2:function(){mymsg("脚本已停止运行",{time:3e3,icon:2}),window.toast("由于未同意最终用户许可协议，脚本已停止运行。","caution"),SP_CONFIG.showEula=!0,saveSpConfig(),runNext.reject()}})}else runNext.resolve();runNext.then(()=>{if(0===parseInt(Live_info.uid)||isNaN(parseInt(Live_info.uid)))return window.toast("未登录，请先登录再使用脚本","caution");MY_API.CONFIG.UPDATE_TIP&&MY_API.newMessage(GM_info.script.version),MYDEBUG("MY_API.CONFIG",MY_API.CONFIG),main(MY_API)})}catch(e){MYERROR("初始化错误",e)}})}async function main(API){checkUpdate(GM_info.script.version),fixVersionDifferences(API,GM_info.script.version);let clearStat=()=>{for(const i in API.GIFT_COUNT)"CLEAR_TS"!==i&&(API.GIFT_COUNT[i]=0);API.GIFT_COUNT.CLEAR_TS=ts_ms(),API.saveGiftCount(),$("#giftCount .anchor .statNum").text(API.GIFT_COUNT.ANCHOR_COUNT),$("#giftCount .material .statNum").text(API.GIFT_COUNT.MATERIAL_COUNT),MYDEBUG("已重置统计")};checkNewDay(API.GIFT_COUNT.CLEAR_TS)&&clearStat(),runExactMidnight(()=>clearStat(),"重置统计"),API.creatSetBox(),API.removeUnnecessary(),API.DANMU_MODIFY.run();const taskList=[API.MEDAL_DANMU.run,API.GroupSign.run,API.DailyReward.run,API.LiveReward.run,API.Exchange.runS2C,API.Exchange.runC2S,API.AUTO_DANMU.run,API.LITTLE_HEART.run,API.Gift.run,API.MaterialObject.run,API.AnchorLottery.run,API.PLATE_ACTIVITY.run,API.RESERVE_ACTIVITY.run,API.GET_PRIVILEGE.run];function reset(delay){let resetTimer=setTimeout(()=>{if(checkNewDay(API.CACHE.LittleHeart_TS))return MYDEBUG("[刷新直播间]","正在获取小心心，10分钟后再次检查"),clearTimeout(resetTimer),reset(6e5);const resetTime=sleepCheck(API.CONFIG);if(resetTime)return MYDEBUG("[刷新直播间]",`处于休眠时间段，将在${resetTime}毫秒后刷新直播间`),clearTimeout(resetTimer),reset(resetTime);W.location.reload()},delay)}otherScriptsRunningCheck.then(()=>runAllTasks(5e3,200,taskList)),API.CONFIG.TIME_RELOAD&&reset(6e4*API.CONFIG.TIME_RELOAD_MINUTE)}function checkUpdate(version){if(!checkNewDay(noticeJson.lastCheckUpdateTs))return;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","Upgrade-Insecure-Requests":"1","Sec-Fetch-Site":"none","Sec-Fetch-Mode":"navigate","Sec-Fetch-User":"?1","Sec-Fetch-Dest":"document","Accept-Encoding":"gzip, deflate, br","Accept-Language":"en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7"};XHR({GM:!0,anonymous:!0,method:"GET",url:"https://andywang.top:3001/api/v1/notice",headers:headers,responseType:"json"}).then(response=>{if(MYDEBUG("检查更新 checkUpdate",response),200!==response.response.status)return window.toast(`[检查更新] 获取notice.json出错 ${response.response.statusText}`,"caution");noticeJson=response.body.data,noticeJson.lastCheckUpdateTs=ts_ms(),GM_setValue("noticeJson",noticeJson);const scriptVersion=noticeJson.version,greasyforkOpenTabOptions={active:!0,insert:!0,setParent:!0};if(-1===versionStringCompare(version,scriptVersion)){let updateSource,updateURL;null===GM_info.script.updateURL?(updateSource="Greasy Fork",updateURL="https://greasyfork.org/scripts/406048-b%E7%AB%99%E7%9B%B4%E6%92%AD%E9%97%B4%E6%8C%82%E6%9C%BA%E5%8A%A9%E6%89%8B"):(updateSource="BLTH-server",updateURL="https://andywang.top:3001/api/v1/BLTH.user.js");let index=myconfirm(`检测到新版本 <strong>${scriptVersion}</strong>。<br>是否从 ${updateSource} 更新脚本？`,{title:"更新脚本",btn:["是","否"]},(function(){"Greasy Fork"===updateSource?(layer.close(index),GM_openInTab(updateURL,greasyforkOpenTabOptions)):(updateBLTH(updateURL),mymsg("正在更新...",{time:2e3}))}),(function(){}))}})}async function getMedalList(page=1){1===page&&(medal_info={status:$.Deferred(),medal_list:[]});let end=!1;for(;;){if(await BAPI.i.medal(page).then(response=>{MYDEBUG("before init() getMedalList: API.i.medal",response),0===response.code?(medal_info.medal_list=medal_info.medal_list.concat(response.data.fansMedalList),response.data.pageinfo.curPage<response.data.pageinfo.totalpages?page++:(medal_info.status.resolve(),end=!0)):1024===response.code?(window.toast(`获取粉丝勋章列表超时 ${response.message} 部分功能将无法正常运行`,"error"),delayCall(()=>getMedalList(page)),end=!0):(window.toast(`获取粉丝勋章列表失败 ${response.message} 部分功能将无法正常运行`,"error"),delayCall(()=>getMedalList(page)),end=!0)}),end){runTomorrow(()=>getMedalList(),0,1,"获取粉丝勋章列表");break}await sleep(200)}}function addVal(arr,val,mode=1){if(-1===findVal(arr,val))return 1===mode?arr.unshift(val):arr.push(val)}function findVal(arr,val){try{return!!Array.isArray(arr)&&arr.findIndex(v=>v==val)}catch(e){MYERROR("findVal 出错",arr,val,e)}}function versionStringCompare(ver1="0",ver2="0"){function changeVersion2Num(ver){return ver.match(/\d.*/)[0].split(".").reduce((total,value,index)=>total+.01**index*Number(value),0)}const verNum1=changeVersion2Num(ver1),verNum2=changeVersion2Num(ver2);return verNum1>verNum2?1:verNum1<verNum2?-1:0}function mouseMove(){MYDEBUG("屏蔽挂机检测","触发一次MouseEvent(mousemove)"),document.dispatchEvent(new MouseEvent("mousemove",{screenX:Math.floor(Math.random()*screen.availWidth),screenY:Math.floor(Math.random()*screen.availHeight),clientX:Math.floor(Math.random()*W.innerWidth),clientY:Math.floor(Math.random()*W.innerHeight),ctrlKey:Math.random()>.8,shiftKey:Math.random()>.8,altKey:Math.random()>.9,metaKey:!1,button:0,buttons:0,relatedTarget:null,region:null,detail:0,view:W,sourceCapabilities:W.InputDeviceCapabilities?new W.InputDeviceCapabilities({fireTouchEvents:!1}):null,bubbles:!0,cancelable:!0,composed:!0}))}function runAllTasks(sleep,interval,task){let num=0;setTimeout(()=>{for(const i of task)setTimeout(()=>i(),interval*num++)},sleep)}function fixVersionDifferences(API,version){if(versionStringCompare(SP_CONFIG.storageLastFixVersion,"5.7.9")>=0)return;const configFixList=["AUTO_GIFT_ROOMID","COIN_UID"];if(!configFixList.every(i=>Array.isArray(API.CONFIG[i])))for(const i of configFixList)Array.isArray(API.CONFIG[i])||(API.CONFIG[i]=String(API.CONFIG[i]).split(","));"ANCHOR_LIVEROOM"==API.CONFIG.ANCHOR_TYPE&&(API.CONFIG.ANCHOR_TYPE_LIVEROOM=!0,API.CONFIG.ANCHOR_TYPE_POLLING=!1),"high"==API.CONFIG.GIFT_SORT?API.CONFIG.GIFT_SORT="GIFT_SORT_HIGH":"low"==API.CONFIG.GIFT_SORT&&(API.CONFIG.GIFT_SORT="GIFT_SORT_LOW");const cache=GM_getValue("CACHE")||{},cacheFixList=[["materialobject_ts","MaterialObject_TS"],["medalDanmu_TS","MedalDanmu_TS"]];for(const i of cacheFixList)cache.hasOwnProperty(i[0])&&(API.CACHE[i[1]]=cache[i[0]]);localStorage.removeItem("im_deviceid_IGIFTMSG");const gmDeleteList=["AnchorRoomidList","im_deviceid_","blnvConfig","UNIQUE_CHECK_CACHE"];for(const i of gmDeleteList)GM_deleteValue(i);GM_deleteValue("Token");const apikey=API.CONFIG.ANCHOR_SERVER_APIKEY;"string"==typeof apikey&&(API.CONFIG.ANCHOR_SERVER_APIKEY={},API.CONFIG.ANCHOR_SERVER_APIKEY[Live_info.uid]=apikey),SP_CONFIG.storageLastFixVersion=version,API.saveConfig(!1),API.saveCache(),saveSpConfig()}function localstorage2gm(){if(localStorage.getItem("IGIFTMSG_CONFIG")){for(let i=0;i<localStorage.length;i++){const key=localStorage.key(i);if(/IGIFTMSG.*/.test(key)){let val=localStorage.getItem(key);try{val=JSON.parse(val);let length=0;for(const i in val)length++;val.hasOwnProperty("list")&&1===length&&(val=val.list)}catch(e){}const jumpList=["AnchorRoomidList"];-1===jumpList.indexOf(key)&&GM_setValue(key.replace(/IGIFTMSG_|IGIFTMSG/,""),val),localStorage.removeItem(key),i--}}W.location.reload()}}function saveSpConfig(printLog=!0){return printLog&&MYDEBUG("SP_CONFIG已保存",SP_CONFIG),GM_setValue("SP_CONFIG",SP_CONFIG)}function animChange(jqdom,bool){bool?(jqdom.removeClass("layer-anim"),jqdom.removeClass("layer-anim-00"),jqdom.addClass("layer-anim"),jqdom.addClass("layer-anim-close")):(jqdom.removeClass("layer-anim"),jqdom.removeClass("layer-anim-close"),jqdom.addClass("layer-anim"),jqdom.addClass("layer-anim-00"))}function mergeObject(obj1,obj2){function combine(object1,object2){for(let i in object2)void 0===object1[i]||null===object1[i]?object1[i]=object2[i]:Array.isArray(object1[i])||"object"!=typeof object1[i]||combine(object1[i],object2[i])}function del(object1,object2){for(let i in object1)void 0===object2[i]||null===object2[i]?delete object1[i]:Array.isArray(object1[i])||"object"!=typeof object1[i]||del(object1[i],object2[i])}combine(obj1,obj2),del(obj1,obj2)}function checkBrowserVersion(){return void 0===Array.prototype.findIndex?["浏览器版本过低，挂机助手停止运行","error"]:void 0===String.prototype.replaceAll?["浏览器版本略低，挂机助手可以正常运行但建议升级浏览器到最新版","info"]:["ok","info"]}function downFile(fileName,fileContent){let elementA=document.createElement("a");elementA.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(JSON.stringify(fileContent))),elementA.setAttribute("download",fileName),elementA.style.display="none",document.body.appendChild(elementA),elementA.click(),document.body.removeChild(elementA)}function updateBLTH(link){let elementA=document.createElement("a");elementA.setAttribute("href",link),elementA.style.display="none",document.body.appendChild(elementA),elementA.click(),document.body.removeChild(elementA)}function exportConfig(MY_API_CONFIG,SP_CONFIG,AnchorFollowingList){const exportJson={VERSION:GM_info.script.version,MY_API_CONFIG:MY_API_CONFIG,SP_CONFIG:SP_CONFIG,AnchorFollowingList:AnchorFollowingList};return downFile("BLTH_CONFIG.json",exportJson)}function importConfig(){let selectedFile=document.getElementById("BLTH_config_file").files[0],reader=new FileReader;function wrongFile(msg="文件格式错误"){return mymsg(msg,{time:2500,icon:2})}reader.onload=function(){MYDEBUG("importConfig 文件读取结果：",this.result);try{if(readConfigArray[0]=JSON.parse(decodeURIComponent(this.result)),"object"==typeof readConfigArray[0]&&readConfigArray[0]){const list=["VERSION","MY_API_CONFIG","SP_CONFIG"];for(const i of list)if(!readConfigArray[0].hasOwnProperty(i))return wrongFile();return 1===versionStringCompare("5.6.6.3",readConfigArray[0].VERSION)?wrongFile("该配置文件版本过低"):readConfigArray[1].resolve()}return wrongFile()}catch(e){return MYDEBUG("importConfig error：",e),wrongFile()}},reader.readAsText(selectedFile)}function getIntervalTime(hour,minute,second){const myDate=new Date,h=myDate.getHours(),m=myDate.getMinutes(),s=myDate.getSeconds(),TargetTime=3600*hour*1e3+60*minute*1e3+(second?1e3*second:0),nowTime=3600*h*1e3+60*m*1e3+1e3*s,intervalTime=TargetTime-nowTime;return MYDEBUG("[getIntervalTime]获取间隔时间",`${intervalTime}毫秒`),intervalTime<0?864e5+intervalTime:intervalTime}function isTime(hour,minute,second){let myDate=new Date,h=myDate.getHours(),m=myDate.getMinutes(),s=myDate.getSeconds();return h==hour&&m==minute&&!second||h==hour&&m==minute&&s==second||(MYDEBUG("isTime 错误时间",`目标时间${hour}时${minute}分${second||0}秒，当前时间${h}时${m}分${s}秒`),!1)}function inTimeArea(sH,eH,sM,eM){if(sH>23||eH>24||sH<0||eH<1||sM>59||sM<0||eM>59||eM<0)return!1;const hourMs=36e5,minMs=6e4,myDate=new Date,nowHour=myDate.getHours(),nowMin=myDate.getMinutes(),nowTimeTs=36e5*nowHour+6e4*nowMin,targetStartTs=36e5*sH+6e4*sM,targetEndTs=36e5*eH+6e4*eM;return targetStartTs<targetEndTs?nowTimeTs>=targetStartTs&&nowTimeTs<targetEndTs:nowTimeTs>=targetStartTs||nowTimeTs<targetEndTs}function sleepCheck(my_api_config){return!!my_api_config.TIME_AREA_DISABLE&&(!!inTimeArea(my_api_config.TIME_AREA_START_H0UR,my_api_config.TIME_AREA_END_H0UR,my_api_config.TIME_AREA_START_MINUTE,my_api_config.TIME_AREA_END_MINUTE)&&getIntervalTime(my_api_config.TIME_AREA_END_H0UR,my_api_config.TIME_AREA_END_MINUTE))}function sleep(millisecond){return new Promise(resolve=>{setTimeout(()=>{resolve()},millisecond)})}function getRandomNum(min,max){return Math.floor(Math.random()*(max-min+1))+min}function checkNewDay(ts,type="Beijing"){if(0==ts)return!0;let t=new Date(ts),d="Beijing"===type?getCHSdate():new Date,td=t.getDate(),dd=d.getDate(),now_ts=d.getTime();return dd!==td||now_ts-ts>864e5}function onlyScriptCheck(){try{let UNIQUE_CHECK_CACHE=localStorage.getItem("UNIQUE_CHECK_CACHE")||0;const t=ts_ms();if(t-UNIQUE_CHECK_CACHE>=0&&t-UNIQUE_CHECK_CACHE<=11e3)return window.toast("检测到其他直播间页面的挂机助手正在运行，无需重复运行的功能将停止运行","caution"),otherScriptsRunning=!0,otherScriptsRunningCheck.resolve();let timer_unique;const uniqueMark=()=>{timer_unique=setTimeout(()=>uniqueMark(),1e4),UNIQUE_CHECK_CACHE=ts_ms(),localStorage.setItem("UNIQUE_CHECK_CACHE",UNIQUE_CHECK_CACHE)};return W.addEventListener("unload",()=>{clearTimeout(timer_unique),localStorage.setItem("UNIQUE_CHECK_CACHE",0)}),uniqueMark(),otherScriptsRunningCheck.resolve()}catch(e){return MYDEBUG("重复运行检测出错",e),otherScriptsRunningCheck.reject()}}function PP_sendMsg(data){return XHR({GM:!0,anonymous:!0,method:"POST",url:"http://www.pushplus.plus/send",data:$.param(data),responseType:"json"})}function SECONDS_sendMsg(user_id,message){return XHR({GM:!0,anonymous:!0,method:"GET",url:`https://andywang.top:3001/api/v1/qq/send_private_msg?user_id=${user_id}&message=${encodeURIComponent(message)}`,responseType:"json"})}function ServerTurbo_sendMsg(SendKey,title,desp){return XHR({GM:!0,anonymous:!0,method:"POST",url:`https://sctapi.ftqq.com/${SendKey}.send`,data:`title=${title}&desp=${desp}`,responseType:"json"})}function GM_notice(title,text,timeout=1e4){const notificationDetails={title:title,text:text,timeout:timeout,onclick:function(){logDiv.hasClass("active")&&logDiv.click()}};return GM_notification(notificationDetails)}function getMsgDevId(name=NAME){let deviceid=GM_getValue("im_deviceid_".concat(name));return deviceid||(deviceid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(name){let randomInt=16*Math.random()|0;return("x"===name?randomInt:3&randomInt|8).toString(16).toUpperCase()})),GM_setValue("im_deviceid_".concat(name),deviceid)),deviceid}function XHR(XHROptions){return new Promise(resolve=>{const onerror=error=>{MYERROR("XHR出错",XHROptions,error),resolve(void 0)};if(XHROptions.GM)"POST"===XHROptions.method&&(void 0===XHROptions.headers&&(XHROptions.headers={}),void 0===XHROptions.headers["Content-Type"]&&(XHROptions.headers["Content-Type"]="application/x-www-form-urlencoded; charset=utf-8")),XHROptions.timeout=3e4,XHROptions.onload=res=>resolve({response:res,body:res.response}),XHROptions.onerror=onerror,XHROptions.ontimeout=onerror,GM_xmlhttpRequest(XHROptions);else{const xhr=new XMLHttpRequest;xhr.open(XHROptions.method,XHROptions.url),"POST"===XHROptions.method&&null===xhr.getResponseHeader("Content-Type")&&xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=utf-8"),XHROptions.cookie&&(xhr.withCredentials=!0),void 0!==XHROptions.responseType&&(xhr.responseType=XHROptions.responseType),xhr.timeout=3e4,xhr.onload=ev=>{const res=ev.target;resolve({response:res,body:res.response})},xhr.onerror=onerror,xhr.ontimeout=onerror,xhr.send(XHROptions.data)}})}function myprompt(obj,func){SP_CONFIG.darkMode&&obj.title&&(obj.title='<span style="color:#f2f3f5;">'+obj.title+"</span>");let index=layer.prompt(obj,func);return SP_CONFIG.darkMode&&layer.style(index,{"background-color":"#1c1c1c"}),index}function mymsg(msg,obj){let index=layer.msg(msg,obj);return SP_CONFIG.darkMode&&layer.style(index,{"background-color":"#1c1c1c"}),index}function myopen(obj){SP_CONFIG.darkMode&&obj.title&&(obj.title='<span style="color:#f2f3f5;">'+obj.title+"</span>");let index=layer.open(obj);return SP_CONFIG.darkMode&&layer.style(index,{"background-color":"#1c1c1c"}),index}function myconfirm(msg,obj,...func){SP_CONFIG.darkMode&&obj.title&&(obj.title='<span style="color:#f2f3f5;">'+obj.title+"</span>");let index=layer.confirm(msg,obj,...func);return SP_CONFIG.darkMode&&layer.style(index,{"background-color":"#1c1c1c"}),index}function mytips(content,element,obj={}){const contentCss={"border-radius":"20px","background-color":"#00c4f8"},tipsGTCss={"border-right-color":"#00c4f8"};function _successFn(dom,index){const layerContent=dom.children(".layui-layer-content"),layerTipsGT=layerContent.children(".layui-layer-TipsG.layui-layer-TipsT");layerContent.css(contentCss),layerTipsGT.css(tipsGTCss)}obj.success?obj.success=function(){obj.success(),_successFn()}:obj.success=_successFn,layer.tips(content,element,obj)}String.prototype.replaceall=function(oldSubStr,newSubStr){function escapeRegExp(string){return string.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}return this.replace(new RegExp(escapeRegExp(oldSubStr),"g"),()=>newSubStr)},mergeObject(SP_CONFIG,SP_CONFIG_DEFAULT),(SP_CONFIG.blockLiveStream||SP_CONFIG.blockliveDataUpdate||SP_CONFIG.wear_medal_before_danmu)&&(W.fetch=(...arg)=>{if(SP_CONFIG.blockLiveStream&&arg[0].includes("bilivideo"))return $.Deferred().resolve();if(SP_CONFIG.blockliveDataUpdate&&arg[0].includes("data.bilibili.com/gol/postweb"))return $.Deferred().resolve();if(SP_CONFIG.wear_medal_before_danmu&&arg[0].includes("//api.live.bilibili.com/msg/send")){if("resolved"!==medal_info.status.state()||null===Live_info.medal||"ONLY_FIRST"===SP_CONFIG.wear_medal_type&&hasWornMedal)return wfetch(...arg);if(void 0===Live_info.medal)for(const m of medal_info.medal_list)if(m.roomid===Live_info.short_room_id){Live_info.medal=m;break}return void 0===Live_info.medal?(Live_info.medal=null,wfetch(...arg)):BAPI.xlive.wearMedal(Live_info.medal.medal_id).then(response=>{if(MYDEBUG("API.xlive.wearMedal",response),0===response.code){hasWornMedal=!0;try{let medalJqItem=$(".dp-i-block.medal-item-margin");if(null===medalJqItem)return;let border=medalJqItem.find(".v-middle.fans-medal-item");const medalColor="#"+Live_info.medal.color.toString(16),medalLevel=Live_info.medal.medal_level,medalText=Live_info.medal.medalName;if(0!==border.length){let background=border.find(".fans-medal-label"),level=border.find(".fans-medal-level"),text=background.find(".fans-medal-content");border.css("border-color",medalColor),background.css("background-image",`linear-gradient(45deg, ${medalColor}, ${medalColor})`),level.text(medalLevel),text.text(medalText)}else $(".action-item.medal.wear-medal").remove(),medalJqItem.html(`<div data-v-2c4630d2="" data-v-34b5b0e1="" class="v-middle fans-medal-item" style="border-color: ${medalColor}">\n                  <div data-v-2c4630d2="" class="fans-medal-label" style="background-image: linear-gradient(45deg, ${medalColor}, ${medalColor});">\n                    <span data-v-2c4630d2="" class="fans-medal-content">${medalText}</span>\n                  </div>\n                  <div data-v-2c4630d2="" class="fans-medal-level" style="color: ${medalColor};">${medalLevel}</div>\n                </div>`)}catch(e){MYERROR("修改弹幕框左侧粉丝拍样式出错",e)}}else window.toast(`自动佩戴粉丝勋章出错 ${response.message}`,"error");return wfetch(...arg)},()=>(window.toast("自动佩戴粉丝勋章失败，请检查网络","error"),wfetch(...arg)))}return wfetch(...arg)}),$((function(){if(void 0===W.BilibiliLive)return;newWindow.init();const checkBrowserArr=checkBrowserVersion();if("ok"!==checkBrowserArr[0]&&(window.toast(...checkBrowserArr),"error"===checkBrowserArr[1]))return;if(onlyScriptCheck(),SP_CONFIG.DANMU_MODIFY&&(window.bliveproxy.hook(),MYDEBUG("bliveproxy hook complete",bliveproxy)),SP_CONFIG.nosleep&&(setInterval(()=>mouseMove(),2e5),W.addEventListener=(...arg)=>arg[0].indexOf("visibilitychange")>-1?void 0:eventListener(...arg),W.setTimeout=function(func,...args){return-1!==String(func).indexOf("triggerSleepCallback")?_setTimeout.call(this,(function(){}),...args):_setTimeout.call(this,func,...args)},W.setInterval=function(func,...args){return-1!==String(func).indexOf("triggerSleepCallback")?_setTimeout.call(this,(function(){}),...args):_setInterval.call(this,func,...args)}),SP_CONFIG.invisibleEnter||SP_CONFIG.blockliveDataUpdate)try{ah.proxy({onRequest:(XHRconfig,handler)=>{SP_CONFIG.invisibleEnter&&XHRconfig.url.includes("//api.live.bilibili.com/xlive/web-room/v1/index/getInfoByUser")?(MYDEBUG("getInfoByUser request",XHRconfig),XHRconfig.url="//api.live.bilibili.com/xlive/web-room/v1/index/getInfoByUser?room_id=22474988&from=0",handler.next(XHRconfig)):SP_CONFIG.blockliveDataUpdate&&XHRconfig.url.includes("//data.bilibili.com/log")?handler.resolve("ok"):handler.next(XHRconfig)},onResponse:async(response,handler)=>{if(response.config.url.includes("//api.live.bilibili.com/xlive/web-room/v1/index/getInfoByUser")){MYDEBUG("getInfoByUser response",response),response.response.includes('"code":0')||(MYDEBUG("隐身入场出错，取消隐身入场并以当前房间号再次获取用户数据"),response.response=await BAPI.xlive.getInfoByUser(W.BilibiliLive.ROOMID).then(re=>(MYDEBUG("API.xlive.getInfoByUser(W.BilibiliLive.ROOMID)",re),0===re.code?JSON.stringify(re):window.toast(`获取房间基础信息失败 ${re.message}`,"error")))),response.response=response.response.replace('"is_room_admin":false','"is_room_admin":true');const json_response=JSON.parse(response.response);Live_info.danmu_length=json_response.data.property.danmu.length}handler.next(response)}})}catch(e){MYDEBUG("ah.proxy Ajax-hook代理运行出错",e)}if(SP_CONFIG.banP2p){const RTClist=["RTCPeerConnection","RTCDataChannel","mozRTCPeerConnection","webkitRTCPeerConnection","DataChannel"];for(const i of RTClist)delete W[i]}const loadInfo=(delay=0)=>setTimeout(async()=>{if(0===parseInt(W.BilibiliLive.UID)||isNaN(parseInt(W.BilibiliLive.UID)))return loadInfo(500);window.toast("正在获取礼物 / 用户 / 账号 / 粉丝勋章数据...","info"),Live_info.room_id=W.BilibiliLive.ROOMID,Live_info.short_room_id=W.BilibiliLive.SHORT_ROOMID,Live_info.uid=W.BilibiliLive.UID,Live_info.tid=W.BilibiliLive.ANCHOR_UID,await BAPI.gift.gift_config().then(response=>(MYDEBUG("InitData: API.gift.gift_config",response),response.data&&Array.isArray(response.data)?Live_info.gift_list=response.data:response.data.list&&Array.isArray(response.data.list)?Live_info.gift_list=response.data.list:window.toast(`直播间礼物数据获取失败 ${response.message}\n使用默认数据`,"warning"))),await BAPI.getuserinfo().then(re=>{if(MYDEBUG("InitData: API.getuserinfo",re),"REPONSE_OK"!==re.code)return window.toast(`API.getuserinfo 获取用户信息失败 ${re.message}`,"error"),delayCall(()=>loadInfo());Live_info.uname=re.data.uname,Live_info.user_level=re.data.user_level}),await BAPI.x.getAccInfo(Live_info.uid).then(re=>{if(MYDEBUG("InitData: API.x.getAccInfo",re),0!==re.code)return window.toast(`API.x.getAccInfo 获取账号信息失败 ${re.message}`,"error"),delayCall(()=>loadInfo());Live_info.level=re.data.level,Live_info.vipStatus=re.data.vip.status}),Live_info.bili_jct=BAPI.getCookie("bili_jct"),Live_info.ruid=W.BilibiliLive.ANCHOR_UID,Live_info.rnd=W.BilibiliLive.RND,Live_info.visit_id=W.__statisObserver?W.__statisObserver.__visitId:"",MYDEBUG("Live_info",Live_info),await getMedalList(),MYDEBUG("medla_info",medal_info),init()},delay);return loadInfo()}))}();