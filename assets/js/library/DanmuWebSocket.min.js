// ==UserScript==
// @name         DanmuWebSocket
// @namespace    https://github.com/andywang425
// @version      0.1
// @description  B站直播WebSocket弹幕库
// @author       andywang425
// @require      https://fastly.jsdelivr.net/gh/google/brotli@5692e422da6af1e991f9182345d58df87866bc5e/js/decode.js
// @grant        none
// ==/UserScript==
class DanmuWebSocket extends WebSocket{HEADER_SIZE=16;WS_BODY_PROTOCOL_VERSION_NORMAL=0;WS_BODY_PROTOCOL_VERSION_HEARTBEAT=1;WS_BODY_PROTOCOL_VERSION_INFLATE=2;WS_BODY_PROTOCOL_VERSION_BROTLI=3;OP_HEARTBEAT_REPLY=3;OP_SEND_MSG_REPLY=5;OP_AUTH_REPLY=8;MY_STATE_LIST=["reconnect","login","heartbeat","cmd","unknownmsg"];reconnectInterval=1e4;closed=!1;handlers={reconnect:[],login:[],heartbeat:[],cmd:[],receive:[],open:[],close:[],error:[],message:[]};initObj={};roomid=0;uid=0;host_server_list=[{host:"",port:0,wss_port:0,ws_port:0}];address="";token="";emitEvent(e,t){this.dispatchEvent(new CustomEvent(e,t))}string2Uint(e){return new Uint8Array(Array.from(e).map((e=>e.charCodeAt(0))))}textdecode(e){return new TextDecoder("utf-8").decode(e)}static async getWebSocketConf(e){if(!e.address&&!e.host_server_list||!e.token){if(({data:{host_server_list:e.host_server_list,token:e.token}}=await BAPI.room.getConf(e.roomid).then((e=>e))),!(Array.isArray(e.host_server_list)&&e.host_server_list.length>0))throw new Error("无法获取弹幕服务器地址");for(const t of e.host_server_list)if(t.host&&t.wss_port){e.address=`wss://${t.host}:${t.wss_port}/sub`;break}}e.uid||(e.uid=0)}setProperties(e){this.binaryType="arraybuffer",this.initObj=e,Object.keys(e).forEach((t=>{this[t]=e[t]}))}wsClose(){this.heartBeatHandler&&clearInterval(this.heartBeatHandler),this.closed||setTimeout((async()=>{const e=await new DanmuWebSocket(this.initObj);e.handlers=this.handlers,Object.keys(e.handlers).forEach((t=>{e.addEventListener(t,(s=>e.handlers[t].call(e,s)))})),e.handlers.onreconnect.length>0&&this.emitEvent("reconnect",{detail:e})}),this.reconnectInterval)}handleMessage(e){let t=new DataView(e),s=t.getUint32(8);switch(s){case this.OP_AUTH_REPLY:case this.OP_SEND_MSG_REPLY:{let t=0;for(;t<e.byteLength;){let s=new DataView(e,t),r=s.getUint32(0),n=s.getUint16(4),i=s.getUint16(6),a=s.getUint32(8),o=new Uint8Array(e,t+n,r-n);if(a===this.OP_SEND_MSG_REPLY)switch(i){case this.WS_BODY_PROTOCOL_VERSION_NORMAL:o=this.textdecode(o),o=JSON.parse(o),this.emitEvent("cmd",{detail:o});break;case this.WS_BODY_PROTOCOL_VERSION_HEARTBEAT:this.emitEvent("heartbeat",{detail:{popularity:parseInt([...o].map((e=>e.toString(16))).join(""),16),heartbeat:this.textdecode(o.buffer.slice(r))}});break;case this.WS_BODY_PROTOCOL_VERSION_INFLATE:o=pako.inflate(o).buffer,this.handleMessage(o);break;case this.WS_BODY_PROTOCOL_VERSION_BROTLI:o=BrotliDecode(o),this.handleMessage(o);break;default:{const t={rawArrayBuffer:e,packLen:r,headerLen:n,protover:i,operation:a,body:o};this.emitEvent("unknownmsg",{detail:t});break}}else if(a===this.OP_AUTH_REPLY)this.emitEvent("login",{detail:JSON.parse(this.textdecode(o.buffer.slice(n)))});else{const t={rawArrayBuffer:e,packLen:r,headerLen:n,protover:i,operation:a,body:o};this.emitEvent("unknownmsg",{detail:t})}t+=r}break}case this.OP_HEARTBEAT_REPLY:{let s=t.getUint32(0),r=t.getUint16(4),n=new Uint8Array(e,r,s-r);this.emitEvent("heartbeat",{detail:{popularity:parseInt([...n].map((e=>e.toString(16))).join(""),16),heartbeat:this.textdecode(n.buffer.slice(s))}});break}default:{let r=t.getUint32(0),n=t.getUint16(4);const i={rawArrayBuffer:e,packLen:r,headerLen:n,protover:t.getUint16(6),operation:s,body:new Uint8Array(e,n,r-n)};this.emitEvent("unknownmsg",{detail:i});break}}}constructor(e){return(async()=>(await DanmuWebSocket.getWebSocketConf(e),super(e.address),this.setProperties(e),this.addEventListener("open",(()=>{this.sendLoginPacket(),this.sendHeartBeatPacket(),this.heartBeatHandler=setInterval((()=>{this.sendHeartBeatPacket()}),3e4)})),this.addEventListener("close",(()=>{this.wsClose()})),this.addEventListener("message",(e=>{this.handleMessage(e.data)})),this))()}close(e,t){this.closed=!0,super.close(e,t)}bind(e){Object.keys(e).forEach((t=>{"function"==typeof e[t]&&(this.addEventListener(t,(s=>e[t].call(this,this.MY_STATE_LIST.includes(t)?s.detail:s))),this.handlers[t]||(this.handlers[t]=[]),this.handlers[t].push(e[t]))}))}sendData(e,t,s,r){if(this.readyState!==WebSocket.OPEN)throw new Error("DanmuWebSocket未连接");switch(Object.prototype.toString.call(e)){case"[object Object]":return this.sendData(JSON.stringify(e),t,s,r);case"[object String]":{let n=this.string2Uint(e),i=new ArrayBuffer(this.HEADER_SIZE+n.byteLength),a=new DataView(i);a.setUint32(0,this.HEADER_SIZE+n.byteLength),a.setUint16(4,this.HEADER_SIZE),a.setUint16(6,parseInt(t,10)),a.setUint32(8,parseInt(s,10)),a.setUint32(12,parseInt(r,10));for(let e=0;e<n.byteLength;++e)a.setUint8(this.HEADER_SIZE+e,n[e]);this.send(i)}return this;default:this.send(e)}return this}sendLoginPacket(){const e={uid:this.uid,roomid:this.roomid,protover:2,platform:"web",type:2,key:this.token,clientver:"1.8.5"};return this.sendData(e,1,7,1)}sendHeartBeatPacket(){return this.sendData("[object Object]",1,2,1)}}